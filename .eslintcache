[{"D:\\Izily-React\\src\\index.js":"1","D:\\Izily-React\\src\\firebase.js":"2","D:\\Izily-React\\src\\reportWebVitals.js":"3","D:\\Izily-React\\src\\routes\\App.js":"4","D:\\Izily-React\\src\\containers\\CalificaAIzily.js":"5","D:\\Izily-React\\src\\containers\\Perfil.js":"6","D:\\Izily-React\\src\\components\\EditProfile.js":"7","D:\\Izily-React\\src\\containers\\Landing.js":"8","D:\\Izily-React\\src\\components\\SignUp.js":"9","D:\\Izily-React\\src\\contexts\\AuthContext.js":"10","D:\\Izily-React\\src\\components\\ForgotPassword.js":"11","D:\\Izily-React\\src\\components\\PrivateRoute.js":"12","D:\\Izily-React\\src\\components\\LogIn.js":"13","D:\\Izily-React\\src\\containers\\Inicio.js":"14","D:\\Izily-React\\src\\containers\\NotFound.jsx":"15","D:\\Izily-React\\src\\containers\\Profesores.js":"16","D:\\Izily-React\\src\\containers\\Layout.jsx":"17","D:\\Izily-React\\src\\components\\Feedback.js":"18","D:\\Izily-React\\src\\components\\Calificacion.js":"19","D:\\Izily-React\\src\\components\\ProfesorPerfil.js":"20","D:\\Izily-React\\src\\components\\CarouselLanding.js":"21","D:\\Izily-React\\src\\components\\BotonCovertirmeEnMentor.js":"22","D:\\Izily-React\\src\\components\\Navbar.js":"23","D:\\Izily-React\\src\\components\\MenuNavbar.js":"24","D:\\Izily-React\\src\\components\\FeedbackForm.js":"25","D:\\Izily-React\\src\\components\\Profesor.js":"26","D:\\Izily-React\\src\\components\\Comentario.js":"27","D:\\Izily-React\\src\\components\\CrearPublicacion.js":"28","D:\\Izily-React\\src\\components\\Publicacion.js":"29"},{"size":308,"mtime":1615755903735,"results":"30","hashOfConfig":"31"},{"size":577,"mtime":1618082887514,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1613603442417,"results":"33","hashOfConfig":"31"},{"size":2338,"mtime":1618849727527,"results":"34","hashOfConfig":"31"},{"size":204,"mtime":1617214526512,"results":"35","hashOfConfig":"31"},{"size":20903,"mtime":1618881695858,"results":"36","hashOfConfig":"31"},{"size":14104,"mtime":1618809748868,"results":"37","hashOfConfig":"31"},{"size":6169,"mtime":1618529747844,"results":"38","hashOfConfig":"31"},{"size":5522,"mtime":1618514957100,"results":"39","hashOfConfig":"31"},{"size":2304,"mtime":1618511928822,"results":"40","hashOfConfig":"31"},{"size":3283,"mtime":1615755903710,"results":"41","hashOfConfig":"31"},{"size":488,"mtime":1614201824088,"results":"42","hashOfConfig":"31"},{"size":4650,"mtime":1616700973313,"results":"43","hashOfConfig":"31"},{"size":10296,"mtime":1618887455295,"results":"44","hashOfConfig":"31"},{"size":2211,"mtime":1615755903732,"results":"45","hashOfConfig":"31"},{"size":12171,"mtime":1618849727527,"results":"46","hashOfConfig":"31"},{"size":284,"mtime":1617764886210,"results":"47","hashOfConfig":"31"},{"size":3415,"mtime":1618340348353,"results":"48","hashOfConfig":"31"},{"size":7709,"mtime":1618515421154,"results":"49","hashOfConfig":"31"},{"size":5584,"mtime":1618878940119,"results":"50","hashOfConfig":"31"},{"size":5700,"mtime":1616196481253,"results":"51","hashOfConfig":"31"},{"size":6587,"mtime":1618851452665,"results":"52","hashOfConfig":"31"},{"size":8124,"mtime":1618512321022,"results":"53","hashOfConfig":"31"},{"size":5239,"mtime":1618511928772,"results":"54","hashOfConfig":"31"},{"size":4849,"mtime":1617745551524,"results":"55","hashOfConfig":"31"},{"size":6458,"mtime":1618878864320,"results":"56","hashOfConfig":"31"},{"size":5305,"mtime":1618889556105,"results":"57","hashOfConfig":"31"},{"size":8308,"mtime":1618893740346,"results":"58","hashOfConfig":"31"},{"size":15159,"mtime":1618894141396,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"9uen94",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},"D:\\Izily-React\\src\\index.js",[],["135","136"],"D:\\Izily-React\\src\\firebase.js",[],"D:\\Izily-React\\src\\reportWebVitals.js",[],"D:\\Izily-React\\src\\routes\\App.js",[],"D:\\Izily-React\\src\\containers\\CalificaAIzily.js",[],"D:\\Izily-React\\src\\containers\\Perfil.js",["137","138","139","140","141","142","143","144","145","146","147"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"../firebase\";\r\n// import { storage } from \"../firebase\";\r\nimport Profesor from \"../components/ProfesorPerfil\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n// import LanguageIcon from \"@material-ui/icons/Language\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Calificacion from \"../components/Calificacion\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport ConvertirmeEnMentor from \"../components/BotonCovertirmeEnMentor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  seccion1: {\r\n    margin: 0,\r\n    paddingTop: 10,\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  gridcontainer: {\r\n    width: \"100%\",\r\n\r\n    borderBottom: \"1px solid #C4C4C4\",\r\n  },\r\n\r\n  gridprofesor: {\r\n    minWidth: \"377px\",\r\n  },\r\n  griddatos: {\r\n    minWidth: \"390px\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  titlePresentacion: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"0px\",\r\n    marginBottom: \"-5px\",\r\n    width: \"377px\",\r\n  },\r\n\r\n  titlePresentacion_text: {\r\n    margin: 0,\r\n    marginLeft: \"2px\",\r\n    // marginTop:\"0px\",\r\n    fontSize: \"15px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  paperPresentacion: {\r\n    width: \"377px\",\r\n    height: \"90px\",\r\n    overflow: \"auto\",\r\n    borderRadius: \"10px\",\r\n    padding: \"3px 8px 8px 8px\",\r\n    margin: \"15px 0px 10px 0px\",\r\n  },\r\n\r\n  etiquetasContainer: {\r\n    display: \"flex\",\r\n    alignContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    width: \"380px\",\r\n    height: \"120px\",\r\n    paddingBottom: \"0px\",\r\n    overflow: \"auto\",\r\n    marginLeft: \"-25px\",\r\n    marginTop: \"-10px\",\r\n\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  TabPanel: {\r\n    padding: \"0px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  categories: {\r\n    background: \"white\",\r\n    color: \"black\",\r\n    paddingBottom: \"0px\",\r\n  },\r\n\r\n  categoriesAppBar: {\r\n    marginBottom: \"-10px\",\r\n  },\r\n\r\n  categorie3: {\r\n    width: \"fullWidht\",\r\n  },\r\n\r\n  etiqueta0: {\r\n    margin: \"4px\",\r\n    background: \"#51B852\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta1: {\r\n    margin: \"4px\",\r\n    background: \"#3493C2\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta2: {\r\n    margin: \"4px\",\r\n    background: \"#8F55A0\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  root: {\r\n    //flexGrow: 1,\r\n    width: \"377px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  buttonPerfil: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"11px\",\r\n    height: \"25px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n\r\n  buttonConvertirmeProfesor: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    marginTop: \"10px\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"15px\",\r\n    height: \"70px\",\r\n    width: \"220px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"-10px\",\r\n    alignItems: \"center\",\r\n    width: \"370px\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n\r\n  idioms: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10px\",\r\n  },\r\n\r\n  idiomsContainer: {\r\n    width: \"380px\",\r\n  },\r\n\r\n  seccion2: {\r\n    marginTop: \"40px\",\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//termina cosas de la tabla\r\n\r\nfunction Perfil() {\r\n  const GreenSwitch = withStyles({\r\n    switchBase: {\r\n      color: \"grey\",\r\n      \"&$checked\": {\r\n        color: \"#99CC42\",\r\n      },\r\n      \"&$checked + $track\": {\r\n        backgroundColor: \"#99CC42\",\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const { usuarioActual } = useAuth();\r\n  const [error, setError] = useState();\r\n  const [value, setValue] = React.useState(0);\r\n  const [carga, guardarCarga] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const { profesorId } = useParams();\r\n  const [profesor, setProfesor] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n\r\n\r\n  \r\n\r\n\r\n  const traerProfesor = async () => {\r\n    const profesorInfo = db.collection(\"usuarios\").doc(profesorId);\r\n    const doc = await profesorInfo.get();\r\n    if (doc.exists) {\r\n      setProfesor({ ...doc.data(), id: doc.id });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const calendly = () => {\r\n    window.Calendly.initPopupWidget({ url: `${profesor.calendly}` });\r\n    return false;\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesor();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setState();\r\n  // }, [profesor.disponible]);\r\n\r\n  useEffect(() => {\r\n    const organizationid =\r\n      \"https://api.calendly.com/organizations/CFEFXIJXXUT225N7\";\r\n    const client = axios.create({\r\n      baseURL: \"https://api.calendly.com\",\r\n      timeout: 3000,\r\n      headers: {\r\n        Authorization: \"Bearer v6PBAXkfspGMWnC7_hTaRfiw5vvHRHZnX9eB51frgYY\",\r\n      },\r\n    });\r\n    client\r\n      .get(\r\n        `/scheduled_events?count=25&organization=${organizationid}&status=active`\r\n      )\r\n      .then(function (response) {\r\n        const uris = response.data.collection.map((event) => {\r\n          return event.uri;\r\n        });\r\n        uris.map((uri) => {\r\n          client.get(`${uri}/invitees`).then((uriResponse) => {});\r\n        });\r\n        setEvents(response.data.collection);\r\n      })\r\n      .catch(function (error) {});\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    // checked: profesor.disponible,\r\n  });\r\n\r\n  function updateDisponible(value) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      disponible: value,\r\n    });\r\n  }\r\n\r\n\r\n  const handleChangeSwitch = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n\r\n    const promises = [];\r\n    guardarCarga(true);\r\n    setError(\"\");\r\n\r\n    if (profesor.disponible === false) {\r\n      promises.push(updateDisponible(true));\r\n    } else {\r\n      promises.push(updateDisponible(false));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // history.push(`/perfil/${profesor.id}`)\r\n        // window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        setError(\"Ocurrió un error al actualizar la cuenta\");\r\n      })\r\n      .finally(() => {\r\n        guardarCarga(false);\r\n      });\r\n  };\r\n\r\n  async function convertToMentor() {\r\n    setError();\r\n    try {\r\n      history.push(`/convertirme-en-mentor`);\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {profesor && (\r\n        <div className={classes.seccion1}>\r\n          <Grid\r\n            container\r\n            className={classes.gridcontainer}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            alignContent=\"center\"\r\n            spacing={4}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              className={classes.gridprofesor}\r\n              alignContent=\"center\"\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Profesor profesor={profesor} />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              //alignItems=\"start\"\r\n              align=\"center\"\r\n              alignContent=\"center\"\r\n              justify=\"center\"\r\n              className={classes.griddatos}\r\n            >\r\n              <div className={classes.titlePresentacion}>\r\n                <p className={classes.titlePresentacion_text}>Acerca de mi:</p>\r\n\r\n                {usuarioActual?.uid !== profesor.loginid ? (\r\n                  <>\r\n                    {profesor?.esProfesor === true &&\r\n                    profesor?.disponible === true ? (\r\n                      <Button\r\n                        disabled\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        target=\"_blank\"\r\n                        // href={profesor.calendly}\r\n                        color=\"inherit\"\r\n                        className={classes.buttonPerfil}\r\n                        onClick={calendly}\r\n                        startIcon={<EventAvailableIcon />}\r\n                        disableElevation=\"true\"\r\n                      >\r\n                        Agendar Mentoría\r\n                      </Button>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    target=\"_blank\"\r\n                    href=\"https://calendar.google.com/calendar/\"\r\n                    color=\"inherit\"\r\n                    className={classes.buttonPerfil}\r\n                    // onClick={calendly}\r\n                    startIcon={<EventAvailableIcon />}\r\n                    disableElevation=\"true\"\r\n                  >\r\n                    Mi Google Calendar\r\n                  </Button>\r\n                )}\r\n              </div>\r\n\r\n              <Paper\r\n                className={classes.paperPresentacion}\r\n                overflow=\"scroll\"\r\n                align=\"start\"\r\n                variant=\"outlined\"\r\n                square\r\n                children={profesor.presentacion}\r\n              />\r\n\r\n              {profesor?.esProfesor === true ? (\r\n                <div className={classes.root}>\r\n                  <AppBar\r\n                    elevation={1}\r\n                    className={classes.categoriesAppBar}\r\n                    position=\"static\"\r\n                  >\r\n                    <Tabs\r\n                      className={classes.categories}\r\n                      variant=\"fullWidth\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                      aria-label=\"full width tabs example\"\r\n                    >\r\n                      <Tab\r\n                        className={classes.categorie1}\r\n                        disableRipple=\"true\"\r\n                        label=\"Escolar\"\r\n                        {...a11yProps(0)}\r\n                      />\r\n                      <Tab\r\n                        className={classes.categorie2}\r\n                        disableRipple=\"true\"\r\n                        label=\"Preuniv.\"\r\n                        {...a11yProps(1)}\r\n                      />\r\n                      <Tab\r\n                        className={classes.categorie3}\r\n                        disableRipple=\"true\"\r\n                        label=\"Universitario\"\r\n                        {...a11yProps(2)}\r\n                      />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={0}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"0\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta0}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={1}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"1\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta1}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={2}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"2\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta2}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n\r\n              <div className={classes.buttonContainer}>\r\n                {usuarioActual?.uid === profesor.loginid ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-evenly\",\r\n                      marginTop: \"0px\",\r\n                    }}\r\n                  >\r\n                    {profesor?.esProfesor === true ? (\r\n                      <>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <GreenSwitch\r\n                              size=\"small\"\r\n                              checked={profesor.disponible}\r\n                              onChange={handleChangeSwitch}\r\n                              name=\"checked\"\r\n                            />\r\n                          }\r\n                          label=\"Disponible\"\r\n                        />\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<PlayArrowIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Video\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        {/* <Button\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          onClick={convertToMentor}\r\n                          className={classes.buttonConvertirmeProfesor}\r\n                          startIcon={\r\n                            <img\r\n                              style={{\r\n                                marginLeft: \"5px\",\r\n                                height: \"45px\",\r\n                                width: \"auto\",\r\n                              }}\r\n                              src=\"https://firebasestorage.googleapis.com/v0/b/izily-test.appspot.com/o/icons%2FConvertirmeEnProfesor.png?alt=media&token=a45096cb-1a3b-4134-811c-aaba4103528f\"\r\n                            />\r\n                          }\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Convertirme en Mentor\r\n                        </Button> */}\r\n                        <ConvertirmeEnMentor/>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-evenly\",\r\n                      marginTop: \"0px\",\r\n                    }}\r\n                  >\r\n                    {profesor.esProfesor === true ? (\r\n                      <>\r\n                        <Calificacion />\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<PlayArrowIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Video\r\n                        </Button>\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<QuestionAnswerIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Contactar\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <Button\r\n                        disabled\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        style={{marginTop:\"10px\"}}\r\n                        className={classes.buttonPerfil}\r\n                        startIcon={<QuestionAnswerIcon />}\r\n                        disableElevation=\"true\"\r\n                      >\r\n                        Contactar\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* <div className={classes.idiomsContainer}>\r\n                <Typography\r\n                  className={classes.idioms}\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                >\r\n                  <LanguageIcon fontSize=\"small\" /> Español, Portugués.\r\n                </Typography>\r\n              </div> */}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n      {!profesor && (\r\n        // <div>\r\n        //   <h1>Cargando...</h1>\r\n        // </div>\r\n        <Backdrop\r\n          className={classes.backdrop}\r\n          open={open}\r\n          onClick={handleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","D:\\Izily-React\\src\\components\\EditProfile.js",["148","149","150","151"],"import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from '@material-ui/core/Input';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { storage } from \"../firebase\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"300px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  subContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: 0,\r\n    justifyContent: \"center\",\r\n  },\r\n  subSubContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Input: {\r\n    width: \"400px\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  cancelar: {\r\n    margin: \"0px 0px 20px 0px\",\r\n    fontSize: \"15px\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  avatar: {\r\n    height: 150,\r\n    width: 150,\r\n    borderRadius: \"50%\",\r\n    AlignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    fontSize:\"110px\",\r\n  },\r\n  changePhotoContainer: {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n  },\r\n\r\n  inputFile: {\r\n    display: \"none\"\r\n  },\r\n  \r\n  inputFileContent: {\r\n    display:\"flex\",\r\n    justifyItems:\"center\",\r\n    alignItems:\"center\",\r\n    borderRadius:\"50px\",\r\n    padding:\"12px\",\r\n    marginTop:\"-8px\",\r\n    marginBottom:\"5px\",\r\n    gap:\"8px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#F0F0F0\",\r\n      cursor:\"pointer\",\r\n    },\r\n  },\r\n  boton: {\r\n    marginBottom:\"10px\",\r\n    marginTop:\"5px\",\r\n    height:\"30px\",\r\n    border: \"1px solid grey\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  photoIcon: {\r\n    marginTop:\"-2px\",\r\n    marginLeft:\"-1px\",\r\n    color:\"#757575\",\r\n  },\r\n}));\r\n\r\nexport default function EditProfile() {\r\n  const classes = useStyles();\r\n  const emailRef = useRef();\r\n  const contraseñaRef = useRef();\r\n  const confirmContraseñaRef = useRef();\r\n  const nombreRef = useRef();\r\n  const aboutMeRef = useRef();\r\n  const descriptionRef = useRef();\r\n  const calendlyRef = useRef();\r\n  const [loading, setLoading] = useState(false)\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { usuarioActual, updatePassword, updateEmail } = useAuth();\r\n  const [error, guardarError] = useState();\r\n  const [carga, guardarCarga] = useState(false);\r\n  const [profesor, setProfesor] = useState(null);\r\n  const history = useHistory();\r\n  const [fileUrl, setFileUrl] = useState(\"-\");\r\n\r\n\r\n  // Get current user with database values and set on useState\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  //Functions to update individual values\r\n\r\n  function updateName(name) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      nombre: name,\r\n    });\r\n  }\r\n\r\n  function updateAboutMe(presentation) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      presentacion: presentation,\r\n    });\r\n  }\r\n\r\n  function updateDescription(description) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      descripcion: description,\r\n    });\r\n  }\r\n\r\n  function updateCalendly(calendly) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      calendly: calendly,\r\n    });\r\n  }\r\n\r\n  // Get promises and execute the functions\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (contraseñaRef.current.value !== confirmContraseñaRef.current.value) {\r\n      return guardarError(\"Las contraseñas no coinciden\");\r\n    }\r\n\r\n    const promises = [];\r\n    guardarCarga(true);\r\n    guardarError(\"\");\r\n\r\n    if (emailRef.current.value !== usuarioActual.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n    if (contraseñaRef.current.value) {\r\n      promises.push(updatePassword(contraseñaRef.current.value));\r\n    }\r\n    if (nombreRef.current.value !== profesor.nombre) {\r\n      promises.push(updateName(nombreRef.current.value));\r\n    }\r\n    if (aboutMeRef.current.value !== profesor.presentacion) {\r\n      promises.push(updateAboutMe(aboutMeRef.current.value));\r\n    }\r\n    if (descriptionRef.current.value !== profesor.descripcion) {\r\n      promises.push(updateDescription(descriptionRef.current.value));\r\n    }\r\n    if (calendlyRef.current.value !== profesor.calendly) {\r\n      promises.push(updateCalendly(calendlyRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setOpen(true);\r\n      })\r\n      .catch(() => {\r\n        guardarError(\"Ocurrió un error al actualizar la cuenta\");\r\n      })\r\n      .finally(() => {\r\n        guardarCarga(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  async function goInicio() {\r\n    guardarError();\r\n    try {\r\n      history.push(`/inicio`);\r\n      window.location.reload();\r\n    } catch {\r\n      guardarError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  async function actualizar() {\r\n    guardarError();\r\n    try {\r\n      window.location.reload();\r\n    } catch {\r\n      guardarError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(`users/${profesor.loginid}/${file.name}`);\r\n    setLoading(loading => !loading);\r\n    await fileRef.put(file);\r\n    setFileUrl(await fileRef.getDownloadURL());\r\n    setLoading(loading => !loading);\r\n  };\r\n\r\n  const handleUpdateClick = async (e) => {\r\n    e.preventDefault();\r\n    await db\r\n      .collection(\"usuarios\")\r\n      .doc(`${profesor.id}`)\r\n      .update({\r\n        imageURL: fileUrl,\r\n      })\r\n      .then(() => window.location.reload())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Editar perfil\r\n        </Typography>\r\n        {error && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Divider />\r\n        {usuarioActual?.uid == profesor?.loginid && (\r\n          <div className={classes.changePhotoContainer}>\r\n            <Avatar className={classes.avatar} alt={profesor.nombre} src={profesor.imageURL} /> \r\n            {fileUrl == \"-\" ? (\r\n              <div style={{\r\n                display:\"flex\", justifyContent:\"center\", alignItems:\"center\"\r\n                }}>\r\n              <label className={classes.inputFileContent} htmlFor=\"profile123\">\r\n                <AddAPhotoIcon className={classes.photoIcon} fontSize=\"medium\" /> Cambiar foto\r\n              </label>\r\n              <Input className={classes.inputFile} accept=\".jpg,.jpeg,.png\" type=\"file\" id=\"profile123\" onChange={handleFileChange}></Input>\r\n              {loading && (\r\n                <CircularProgress color=\"none\" size=\"25px\" style={{position:\"absolute\", marginLeft:\"180px\", marginTop:\"-13px\", color:\"#3493C2\"}} />\r\n              )}\r\n              </div>\r\n            ):(\r\n              <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                Tu foto esta lista para subir.\r\n                <Button className={classes.boton} onClick={handleUpdateClick}>Subir foto</Button>\r\n              </div> \r\n            )}\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid style={{ marginTop: \"-20px\", width: \"90%\" }}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid container className={classes.subContainer} spacing={2}>\r\n            <Grid item className={classes.subSubContainer}>\r\n              {/* <Grid > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={usuarioActual.email}\r\n                className={classes.Input}\r\n                id=\"email\"\r\n                inputRef={emailRef}\r\n                label=\"Correo Electrónico\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n              {/* </Grid> */}\r\n              {/* <Grid  > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.Input}\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                defaultValue={null}\r\n                inputRef={contraseñaRef}\r\n                placeholder=\"Dejar en blanco para mantener la contaseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                //autoComplete=\"current-password\"\r\n              />\r\n              {/* </Grid> */}\r\n              {/* <Grid  > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.Input}\r\n                name=\"confirm-password\"\r\n                label=\"Confirmar contraseña\"\r\n                inputRef={confirmContraseñaRef}\r\n                placeholder=\"Dejar en blanco para mantener la contaseña\"\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                autoComplete=\"confirm-password\"\r\n              />\r\n              {/* </Grid> */}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"name\"\r\n                  label=\"Nombre y Apellido\"\r\n                  defaultValue={profesor.nombre}\r\n                  inputRef={nombreRef}\r\n                  id=\"rename\"\r\n                  autoComplete=\"current-name\"\r\n                />\r\n                // </Grid>\r\n              )}\r\n            </Grid>\r\n            <Grid item className={classes.subSubContainer}>\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"description\"\r\n                  label=\"Descripción\"\r\n                  defaultValue={profesor.descripcion}\r\n                  inputRef={descriptionRef}\r\n                  id=\"description\"\r\n                  autoComplete=\"current-description\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"aboutMe\"\r\n                  label=\"Acerca de mí\"\r\n                  defaultValue={profesor.presentacion}\r\n                  inputRef={aboutMeRef}\r\n                  id=\"aboutMe\"\r\n                  autoComplete=\"current-aboutMe\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  disabled\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"calendly\"\r\n                  label=\"Link de Calendly\"\r\n                  defaultValue={profesor.calendly}\r\n                  inputRef={calendlyRef}\r\n                  id=\"calendly\"\r\n                  autoComplete=\"current-calendly\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              ¡Tus datos fueron guardados con éxito!\r\n            </Alert>\r\n          </Snackbar>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            className={classes.submit}\r\n            disabled={carga}\r\n          >\r\n            Guardar\r\n          </Button>\r\n          <Grid container justify=\"space-between\" style={{ width: \"100%\" }}>\r\n            <p\r\n              className={classes.cancelar}\r\n              variante=\"link\"\r\n              onClick={actualizar}\r\n            >\r\n              {\" \"}\r\n              Actualiza para poder ver los cambios\r\n            </p>\r\n            <p className={classes.cancelar} variante=\"link\" onClick={goInicio}>\r\n              Volver al inicio\r\n            </p>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\containers\\Landing.js",["152"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport backgroundgrid1 from \"../assets/images/backgroundgrid1.jpg\";\r\nimport logoprincipal from \"../assets/images/logoprincipal.webp\";\r\nimport mentores from \"../assets/images/mentores.png\";\r\nimport comunidad from \"../assets/images/comunidad.png\";\r\nimport videollamada from \"../assets/images/videollamada.png\";\r\nimport CarouselLanding from \"../components/CarouselLanding\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Div1: {\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n    background:\"white\",\r\n    // backgroundImage: `url(${backgroundgrid1})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right center\",\r\n    backgroundSize: \"cover\",\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n    padding: \"50px 0px 65px 0px\",\r\n    borderBottom:\"1px solid #EBECEC\",\r\n  },\r\n  titulo: {\r\n    paddingLeft: \"50px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"35px\",\r\n  },\r\n  tituloimageContainer:{\r\n    margin:\"30px 60px\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    padding:\"40px\",\r\n    alignItems:\"center\",\r\n    backgroundImage: `url(${videollamada})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right center\",\r\n    backgroundSize: \"contain\",\r\n    width:\"600px\",\r\n    height:\"400px\",\r\n  },\r\n  renglon: {\r\n    display: \"flex\",\r\n    margin: \"0px\",\r\n  },\r\n  tituloblanco: {\r\n    color: \"black\",\r\n    margin: \"5px 0px\",\r\n  },\r\n  tituloazul: {\r\n    color: \"#3493C2\",\r\n    margin: \"5px 0px\",\r\n  },\r\n  tituloblancomedio: {\r\n    color: \"black\",\r\n    margin: \"0px 0px 0px 0px\",\r\n  },\r\n  tituloazulmedio: {\r\n    color: \"#3493C2\",\r\n    margin: \"0px 25px 0px 0px\",\r\n  },\r\n  tituloazulbajo: {\r\n    color: \"#3493C2\",\r\n    margin: \"0px 0px 15px 0px\",\r\n  },\r\n  Div2: {\r\n    background:\"white\",\r\n    // backgroundImage: `url(${backgroundgrid2})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right bottom\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  TituloGrid2: {\r\n    fontSize: \"25px\",\r\n    fontWeight: \"bold\",\r\n    color: \"#3493C2\",\r\n    margin: 10,\r\n  },\r\n  Grid2: {\r\n    padding: \"20px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Grid2Item: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    padding: \"10px\",\r\n    //borderTop:\"1px solid #EBECEC\",\r\n    borderBottom:\"1px solid #EBECEC\",\r\n  },\r\n  textgrid2: {\r\n    width: \"80%\",\r\n  },\r\n  Imagen1: {\r\n    width: \"50%\",\r\n    height: \"auto\",\r\n  },\r\n  imggrid2: {\r\n    paddingTop:\"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"200%\",\r\n  },\r\n  titulogrid2: {\r\n    color: \"#3493C2\",\r\n    fontSize: \"17px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitulogrid2: {},\r\n}));\r\n\r\nfunction Landing() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container className={classes.Div1}>\r\n        <Grid item className={classes.titulo}>\r\n          <h1 className={classes.tituloblanco}>Aprende para</h1>\r\n          <div className={classes.renglon}>\r\n            <h1 className={classes.tituloazulmedio}>enseñar</h1>{\" \"}\r\n            <h1 className={classes.tituloblancomedio}>y</h1>\r\n          </div>\r\n          <h1 className={classes.tituloblanco}>enseña para</h1>\r\n          <h1 className={classes.tituloazulbajo}>aprender</h1>\r\n        </Grid>\r\n        <Grid item className={classes.tituloimageContainer}>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.Div2}>\r\n        <p className={classes.TituloGrid2}>¿Quiénes somos?</p>\r\n        <Grid className={classes.Grid2} container>\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={logoprincipal}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Red Social Educativa</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Orientada a ayudar tanto a escolares como a\r\n                universitarios.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={comunidad}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Comunidades\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Comunidad</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Donde puedes compartir tu experiencia y conocimiento.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={mentores}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Mentores\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Mentores</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Con experiencia dispuestos a ayudarte a resolver todas tus dudas.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid style={{display:\"flex\", padding:\"10px 0px 50px 0px\", background:\"white\"}}>\r\n      <CarouselLanding/>\r\n      {/* <Carousel2/> */}\r\n      </Grid>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","D:\\Izily-React\\src\\components\\SignUp.js",["153"],"////////////////////////////////// SignUp = Registro ////////////////////////////////////\r\nimport React, { useRef, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  //nombre\r\n  const nameRef = useRef();\r\n  //\r\n  const emailRef = useRef();\r\n  const contraseñaRef = useRef();\r\n  const confirmContraseñaRef = useRef();\r\n\r\n  const { signup } = useAuth();\r\n\r\n  const [error, guardarError] = useState();\r\n  const [carga, guardarCarga] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    setChecked(e.target.checked);\r\n  };\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (contraseñaRef.current.value !== confirmContraseñaRef.current.value) {\r\n      return guardarError(\"Las contraseñas no coinciden\");\r\n    }\r\n    if (nameRef.current.value == \"\") {\r\n      return guardarError(\"Debe colocar un nombre\");\r\n    }\r\n    if (checked === false) {\r\n      return guardarError(\r\n        \"Esperamos que aceptes los términos y condiciones para crear una cuenta\"\r\n      );\r\n    }\r\n\r\n    try {\r\n      guardarError(\"\");\r\n      guardarCarga(true);\r\n      await signup(\r\n        emailRef.current.value,\r\n        contraseñaRef.current.value,\r\n        nameRef.current.value\r\n      );\r\n      history.push(\"/inicio\");\r\n    } catch {\r\n      guardarError(\"Ocurrió un error al crear una cuenta\");\r\n    }\r\n\r\n    guardarCarga(false);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro\r\n        </Typography>\r\n        {error && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                inputRef={nameRef}\r\n                label=\"Nombre de Usuario\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                inputRef={emailRef}\r\n                label=\"Correo Electrónico\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                inputRef={contraseñaRef}\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirm-password\"\r\n                label=\"Confirmar contraseña\"\r\n                inputRef={confirmContraseñaRef}\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                autoComplete=\"confirm-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    value=\"allowExtraEmails\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Acepto las políticas de conducta de la plataforma\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={carga}\r\n          >\r\n            Registrarme\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                ¿Ya tienes una cuenta? Inicia sesión\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\contexts\\AuthContext.js",[],"D:\\Izily-React\\src\\components\\ForgotPassword.js",[],"D:\\Izily-React\\src\\components\\PrivateRoute.js",[],"D:\\Izily-React\\src\\components\\LogIn.js",[],"D:\\Izily-React\\src\\containers\\Inicio.js",["154","155","156","157"],"import React, { useEffect, useState } from \"react\";\r\n// import { useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport CrearPublicacion from \"../components/CrearPublicacion\";\r\nimport Publicacion from \"../components/Publicacion\";\r\nimport Comentario from \"../components/Comentario\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport EstamosTrabajando from \"../assets/images/EstamosTrabajando.png\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"40px\",\r\n    fontSize: \"12px\",\r\n  },\r\n\r\n  searchInput: {\r\n    opacity: \"0.9\",\r\n    padding: \"0px 5px\",\r\n    margin: \"0px\",\r\n    fontSize: \"11px\",\r\n    width: \"200px\",\r\n  },\r\n\r\n  gridTotal: {\r\n    paddingTop: \"15px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    flexDirection: \"row\",\r\n    flexGrow: 1,\r\n    // width: \"100%\",\r\n  },\r\n  gridArriba: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  publicacionesContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minWidth: \"100%\",\r\n  },\r\n  gridMedio: {\r\n    //minWidth:\"90px\",\r\n  },\r\n  root: {\r\n    maxWidth: 550,\r\n    // minWidth: \"100%\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n    // display: \"flex\",\r\n    // alignContent:\"start\",\r\n    //flexWrap: \"wrap\",\r\n    //hyphens: \"auto\",\r\n    //wordBreak:\"break-all\",\r\n  },\r\n\r\n  etiqueta0: {\r\n    //margin: \"15px\",\r\n    background: \"#51B852\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta1: {\r\n    //marginRight: \"15px\",\r\n    background: \"#3493C2\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta2: {\r\n    //margin: \"15px\",\r\n    background: \"#8F55A0\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    paddingTop: \"50px\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding: \"50px 20px 10px 20px\",\r\n  },\r\n  main: {\r\n    flexGrow: 1,\r\n  },\r\n  divMain: {\r\n    display: \"flex\",\r\n  },\r\n  FB: {\r\n    color: \"#3b5998\",\r\n    fontSize: \"50px\",\r\n  },\r\n  Li: {\r\n    color: \"#0e76a8\",\r\n    fontSize: \"50px\",\r\n  },\r\n  buttonLogo: {\r\n    width: \"400px\",\r\n    height: \"40px\",\r\n    \"&:hover\": {\r\n      // backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    },\r\n  },\r\n  correo: {\r\n    color: \"#3493C2\",\r\n    marginBottom: \"10px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      fontWeight: \"bold\",\r\n      color: \"#3493C2\",\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  EstamosTrabajandoImg: {\r\n    width: \"300px\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  const { usuarioActual } = useAuth();\r\n  const [profesor, setProfesor] = useState(null);\r\n  const [screams, setScreams] = useState([\"2\"]);\r\n\r\n  const traerProfesor = () => {\r\n    const idd = usuarioActual.uid;\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"loginid\", \"==\", idd)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setProfesor(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const getScreams = () => {\r\n    const screamRef = db\r\n      .collection(\"publicaciones\")\r\n      .orderBy(\"dateNumber\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const screams = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // screams.push(doc.data());\r\n          screams.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setScreams(screams);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesor();\r\n    getScreams();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.divMain}>\r\n      <CssBaseline />\r\n\r\n      <main className={classes.main}>\r\n        <Grid className={classes.gridTotal} spacing={0}>\r\n          {/* <Grid xs></Grid> */}\r\n\r\n          <Grid>\r\n            <Grid className={classes.gridArriba}>\r\n              <Grid>\r\n                <Button\r\n                  component={Link}\r\n                  to={\"/buscar\"}\r\n                  className={classes.botones}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  disabled\r\n                >\r\n                  Buscar personas\r\n                </Button>\r\n              </Grid>\r\n              <Grid xs className={classes.gridMedio}></Grid>\r\n\r\n              <Grid>\r\n                <Button\r\n                  component={Link}\r\n                  to={\"/buscar-un-mentor\"}\r\n                  className={classes.botones}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  Buscar un mentor\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid align=\"start\" className={classes.publicacionesContainer}>\r\n              <CrearPublicacion />\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  width: \"100%\",\r\n                  padding: \"10px 20px 10px 20px\",\r\n                }}\r\n              >\r\n                <img\r\n                  src={EstamosTrabajando}\r\n                  className={classes.EstamosTrabajandoImg}\r\n                  alt=\"Logo\"\r\n                />\r\n                <div>\r\n                  <p\r\n                    style={{\r\n                      marginBottom: \"0px\",\r\n                      width: \"150px\",\r\n                      textAlign: \"right\",\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Estamos trabajando para que este sea un mejor lugar para\r\n                  </p>\r\n                  <p\r\n                    style={{\r\n                      margin: \"0px\",\r\n                      width: \"150px\",\r\n                      textAlign: \"right\",\r\n                      fontSize: \"20px\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"#3493C2\",\r\n                    }}\r\n                  >\r\n                    aprender\r\n                  </p>\r\n                </div>\r\n              </Grid>\r\n\r\n              {screams && (\r\n                <div>\r\n                  {screams.map((scream, index) => (\r\n                    <Publicacion\r\n                      key={index}\r\n                      screamId={scream.id}\r\n                      imageURL={scream.imageURL}\r\n                      name={scream.name}\r\n                      // imagen=\"https://firebasestorage.googleapis.com/v0/b/izily-test.appspot.com/o/publicacionImages%2Fproblema1.jpeg?alt=media&token=f4e69610-db14-4e2d-a5fa-b97bae16daec\"\r\n                      imagen={scream.photoUrl}\r\n                      date={scream.date}\r\n                      dateNumber={scream.dateNumber}\r\n                      content={scream.content}\r\n                      idPerfil={scream.idPerfil}\r\n                      interesados={scream.interesados}\r\n                      comentarios={scream.comentarios}\r\n                      numeroDeComentarios={scream.comments}\r\n                      tag={\r\n                        <Chip\r\n                          //Soy Jhomar\r\n                          className={classes.etiqueta2}\r\n                          label={scream.label}\r\n                        />\r\n                      }\r\n                      children={<Comentario screamID={scream.id} />}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {/* <Grid xs></Grid> */}\r\n        </Grid>\r\n      </main>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n        <h1 style={{ color: \"#3493C2\", textAlign: \"center\" }}>\r\n          Gracias por apoyar el proyecto Izily :D\r\n        </h1>\r\n        <p>\r\n          Síguenos en Facebook y LinkedIn para enterarte de los avances de\r\n          Izily.\r\n        </p>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n          <Button\r\n            target=\"_blank\"\r\n            href={\"https://www.facebook.com/Izily-102740731946306/\"}\r\n            className={classes.buttonLogo}\r\n          >\r\n            <FacebookIcon className={classes.FB} />\r\n          </Button>\r\n          <Button\r\n            target=\"_blank\"\r\n            href={\"https://www.linkedin.com/company/izilype/about/\"}\r\n            className={classes.buttonLogo}\r\n          >\r\n            <LinkedInIcon className={classes.Li} />\r\n          </Button>\r\n        </div>\r\n        <p>\r\n          También puedes contactarnos a nuestro correo institucional dando click\r\n          aquí:\r\n        </p>\r\n        <a\r\n          target=\"_blank\"\r\n          className={classes.correo}\r\n          href=\"https://mail.google.com/mail/u/0/?fs=1&to=aprendeizily@gmail.com%20&su=CONTACTAR%20A%20IZILY&body=&tf=cm\"\r\n        >\r\n          aprendeizily@gmail.com\r\n        </a>\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","D:\\Izily-React\\src\\containers\\NotFound.jsx",["158"],"import React from \"react\";\r\nimport notfound from \"../assets/images/NotFound.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 20,\r\n    display: \"flex\",\r\n    justifyItems: \"center\",\r\n\r\n    //paddingTop:\"50px\",\r\n    //backgroundColor:\"red\",\r\n  },\r\n  gridcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  gridimagen1: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  imagen1: {\r\n    width: \"50%\",\r\n    height: \"auto\",\r\n    //margin:\"40px\"\r\n  },\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"40px\",\r\n    fontSize: \"12px\",\r\n  },\r\n  gridtexto: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  h1: {\r\n    color: \"#3493C2\",\r\n    justify: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function NotFound() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container align=\"\" className={classes.gridcontainer}>\r\n        <Grid sm></Grid>\r\n        <Grid sm></Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} className={classes.gridimagen1}>\r\n          <img src={notfound} className={classes.imagen1} alt=\"NotFound\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={5} md={5} lg={5} className={classes.gridtexto}>\r\n          <h1 className={classes.h1}>¡Uy, problemas en el paraiso!</h1>\r\n          <h2>No hemos podido encontrar la página que buscabas :(</h2>\r\n          <h3>\r\n            Incluso en Izily, estos casos son muy raros, tanto como que tu Crush\r\n            te haga caso.\r\n          </h3>\r\n          <h3>Mejor sigue estudiando :D</h3>\r\n          <Button\r\n            href=\"javascript:history.back()\"\r\n            className={classes.botones}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            Volver atrás\r\n          </Button>\r\n        </Grid>\r\n        <Grid sm></Grid>\r\n        <Grid sm></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\containers\\Profesores.js",["159","160"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Profesor from \"../components/Profesor\";\r\nimport { db } from \"../firebase\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useHistory } from \"react-router-dom\";\r\n//import { useAuth } from \"../contexts/AuthContext\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: \"1px solid rgba(0, 0, 0, .125)\",\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": {\r\n      borderBottom: 0,\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n    \"&$expanded\": {\r\n      margin: \"auto\",\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\r\n    borderBottom: \"1px solid rgba(0, 0, 0, .125)\",\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    \"&$expanded\": {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    \"&$expanded\": {\r\n      margin: \"12px 0\",\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    marginTop: \"3rem\",\r\n    //paddingTop:\"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  // necessary for content to be below app bar\r\n\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    justifyContent: \"center\",\r\n  },\r\n  Buscar: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    marginLeft: \"10px\",\r\n    width: \"200px\",\r\n  },\r\n\r\n  main: {\r\n    background: \"white\",\r\n    overflow: \"auto\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n    padding: \"15px, 0, 10px, 15px\",\r\n  },\r\n  gridContainer: {\r\n    paddingTop: 15,\r\n  },\r\n}));\r\n\r\nexport default function Profesores() {\r\n  const classes = useStyles();\r\n  // const [error, setError] = useState(\"\");\r\n  const [profesores, guardarProfesores] = useState([]);\r\n  const [especialidades, guardarEspecialidades] = useState([]);\r\n  const [etiquetas, guardarEtiquetas] = useState([0]);\r\n  const [profesoresFiltrados, guardarProfesoresFiltrados] = useState([]);\r\n  // const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel\");\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const traerProfesores = () => {\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"esProfesor\", \"==\", true)\r\n      .where(\"disponible\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        guardarProfesores(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const seleccionarEtiquetas = (EspecialidadId) => () => {\r\n    const currentIndex = etiquetas.indexOf(EspecialidadId);\r\n    const etiquetasSeleccionadas = [...etiquetas];\r\n    if (currentIndex === -1) {\r\n      etiquetasSeleccionadas.push(EspecialidadId);\r\n    } else {\r\n      etiquetasSeleccionadas.splice(currentIndex, 1);\r\n    }\r\n    guardarEtiquetas(etiquetasSeleccionadas);\r\n  };\r\n\r\n  const filtrarProfesores = (terminoDeBusqueda) => {\r\n    let etiquetasSeleccionadas = [...etiquetas];\r\n    etiquetasSeleccionadas = etiquetasSeleccionadas.splice(1, etiquetas.length);\r\n    const nuevosProfesoresFiltrados = profesores.filter((profesor) => {\r\n      // Verificar Nombre\r\n      const nombreProfesor = profesor.nombre.toLowerCase();\r\n      const tieneNombreValido = nombreProfesor.includes(terminoDeBusqueda);\r\n\r\n      // Verificar Materia\r\n      const idsDeCursos = profesor.cursos.map((curso) => curso.id);\r\n      let tieneCursoValido = false;\r\n      idsDeCursos.forEach((idCurso) => {\r\n        tieneCursoValido =\r\n          tieneCursoValido || etiquetasSeleccionadas.includes(idCurso);\r\n      });\r\n\r\n      if (etiquetasSeleccionadas.length > 0)\r\n        return tieneNombreValido && tieneCursoValido;\r\n      return tieneNombreValido;\r\n    });\r\n    guardarProfesoresFiltrados(nuevosProfesoresFiltrados);\r\n  };\r\n  const filtrarProfesoresInput = (e) => {\r\n    const terminoDeBusqueda = e.currentTarget.value.toLowerCase();\r\n    filtrarProfesores(terminoDeBusqueda);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesores();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const especialidadesRef = db.collection(\"especialidades\");\r\n    const todasLasEspecialidades = [];\r\n    especialidadesRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        todasLasEspecialidades.push({ ...doc.data(), id: doc.id });\r\n      });\r\n    });\r\n    guardarEspecialidades(todasLasEspecialidades);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    guardarProfesoresFiltrados(profesores);\r\n  }, [profesores]);\r\n\r\n  useEffect(() => {\r\n    filtrarProfesores(\"\");\r\n  }, [etiquetas]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        // anchor=\"right\"\r\n      >\r\n        <div className={classes.drawerContainer}>\r\n          <FormControl\r\n            size=\"small\"\r\n            //className={clsx(classes.margin, classes.textField)}\r\n            className={classes.Buscar}\r\n            variant=\"outlined\"\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Buscar nombre:\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type=\"text\"\r\n              onChange={filtrarProfesoresInput}\r\n              labelWidth={120}\r\n            />\r\n          </FormControl>\r\n          <Divider />\r\n\r\n          <Accordion\r\n            square\r\n            expanded={expanded === \"panel1\"}\r\n            onChange={handleChange(\"panel1\")}\r\n          >\r\n            <AccordionSummary\r\n              style={{ background: \"rgba(81, 184, 82, 0.2)\" }}\r\n              aria-controls=\"panel1d-content\"\r\n              id=\"panel1d-header\"\r\n            >\r\n              <Typography\r\n                style={{ color: \"rgba(81, 184, 82, 1)\", fontWeight: \"bold\" }}\r\n              >\r\n                Escolar\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {especialidades\r\n                .filter((especialidad) => especialidad.numberNivel === \"0\")\r\n                .map((especialidad) => (\r\n                  <ListItem\r\n                    button\r\n                    key={especialidad.id}\r\n                    onClick={seleccionarEtiquetas(especialidad.id)}\r\n                  >\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                      style={{ color: \"rgba(81, 184, 82, 1)\" }}\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                    />\r\n                    <ListItemText primary={especialidad.nombre} />\r\n                  </ListItem>\r\n                ))}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            square\r\n            expanded={expanded === \"panel2\"}\r\n            onChange={handleChange(\"panel2\")}\r\n          >\r\n            <AccordionSummary\r\n              style={{ background: \"rgba(52, 147, 194, 0.2)\" }}\r\n              aria-controls=\"panel2d-content\"\r\n              id=\"panel2d-header\"\r\n            >\r\n              <Typography\r\n                style={{ color: \"rgba(52, 147, 194, 1)\", fontWeight: \"bold\" }}\r\n              >\r\n                Preuniversitario\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {especialidades\r\n                .filter((especialidad) => especialidad.numberNivel === \"1\")\r\n                .map((especialidad) => (\r\n                  <ListItem\r\n                    button\r\n                    key={especialidad.id}\r\n                    onClick={seleccionarEtiquetas(especialidad.id)}\r\n                  >\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                      style={{ color: \"rgba(52, 147, 194, 1)\" }}\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                    />\r\n                    <ListItemText primary={especialidad.nombre} />\r\n                  </ListItem>\r\n                ))}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion\r\n            square\r\n            expanded={expanded === \"panel3\"}\r\n            onChange={handleChange(\"panel3\")}\r\n          >\r\n            <AccordionSummary\r\n              style={{ background: \"rgba(143, 85, 160, 0.2)\" }}\r\n              aria-controls=\"panel3d-content\"\r\n              id=\"panel3d-header\"\r\n            >\r\n              <Typography\r\n                style={{ color: \"rgba(143, 85, 160, 1)\", fontWeight: \"bold\" }}\r\n              >\r\n                Universitario\r\n              </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {especialidades\r\n                .filter((especialidad) => especialidad.numberNivel === \"2\")\r\n                .map((especialidad) => (\r\n                  <ListItem\r\n                    button\r\n                    key={especialidad.id}\r\n                    onClick={seleccionarEtiquetas(especialidad.id)}\r\n                  >\r\n                    <Checkbox\r\n                      edge=\"start\"\r\n                      checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                      style={{ color: \"rgba(143, 85, 160, 1)\" }}\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                    />\r\n                    <ListItemText primary={especialidad.nombre} />\r\n                  </ListItem>\r\n                ))}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          {/* <List>\r\n            {especialidades.map((especialidad, index) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"#3f51b5\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n            ))}\r\n          </List> */}\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Grid container clasName={classes.gridContainer} spacing={3}>\r\n          {profesoresFiltrados.map((profesor) => (\r\n            <Grid item align=\"center\" xs={12} sm={12} md={6} lg={4}>\r\n              <Profesor profesor={profesor} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\containers\\Layout.jsx",[],"D:\\Izily-React\\src\\components\\Feedback.js",[],"D:\\Izily-React\\src\\components\\Calificacion.js",[],"D:\\Izily-React\\src\\components\\ProfesorPerfil.js",["161","162","163","164","165","166","167"],"//Este componente es una card sola\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\nconst StyledRating = withStyles({\r\n  iconFilled: {\r\n    color: \"#3493C2\",\r\n  },\r\n})(Rating);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    borderRadius: 3,\r\n  },\r\n  cardContent: {\r\n    margin: \"0px\",\r\n  },\r\n  avatar: {\r\n    height: 150,\r\n    width: 150,\r\n    borderRadius: \"50%\",\r\n    AlignItems: \"center\",\r\n    marginBottom: 0,\r\n    fontSize:\"110px\",\r\n  },\r\n  avatarContainer: {\r\n    border: 5,\r\n    marginBottom: 3,\r\n    marginTop: 2,\r\n    textAlign: \"center\",\r\n  },\r\n  numero: {\r\n    padding: 5,\r\n    margin: 0,\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    background:\"#757575\",\r\n    fontWeight:\"bold\",\r\n    borderRadius:\"7px\"\r\n  },\r\n  calificacion: {\r\n    flexDirection: \"row\",\r\n    textAlign: \"center\",\r\n  },\r\n  datos: {\r\n    fontWeight: \"bold\",\r\n    margin: \"10px 0px 0px 0px\",\r\n  },\r\n  descripcion: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  nombre: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: \"100%\",\r\n    whiteSpace: \"nowrap\",\r\n    textAlign: \"center\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  },\r\n  paperPresentacion: {\r\n    backgroundColor: \"rgba(0,0,0,0)\",\r\n    height: \"75px\",\r\n    overflow: \"auto\",\r\n    textAlign: \"justify\",\r\n    padding: \"3px 8px 8px 0px\",\r\n    marginLeft: \"10px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  popover: {\r\n    pointerEvents: \"none\",\r\n    boxShadow: \"0px\",\r\n    textShadow: \"0px\",\r\n  },\r\n  paper: {\r\n    padding: \"5px\",\r\n    boxShadow: \"0px\",\r\n    textShadow: \"0px\",\r\n    width: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    background: \"#A8A8A8\",\r\n  },\r\n}));\r\n\r\nexport default function Profesor({ profesor }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n \r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent style={{ paddingBottom: \"10px\" }}>\r\n        <div className={classes.avatarContainer}>\r\n          <div style={{margin: \"0px 0px 5px 0px\", padding:\"0px\", width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n            <Avatar className={classes.avatar} alt={profesor.nombre} src={profesor.imageURL} />\r\n          </div>\r\n          \r\n          {/* id={`myimg-${profesor.id} */}\r\n          {profesor.esProfesor === true ? (\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                marginBottom: \"5px\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {/* <Box\r\n                aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n                aria-haspopup=\"true\"\r\n                onMouseEnter={handlePopoverOpen}\r\n                onMouseLeave={handlePopoverClose}\r\n                component=\"fieldset\"\r\n                margin={0}\r\n                border={0}\r\n                padding={0}\r\n                mb={-1}\r\n                borderColor=\"transparent\"\r\n              >\r\n                <StyledRating\r\n                  name=\"customized-color\"\r\n                  //defaultValue= {5}\r\n                  defaultValue={profesor.puntuacion}\r\n                  precision={0.1}\r\n                  icon={<StarIcon fontSize=\"large\" />}\r\n                  readOnly\r\n                />\r\n              </Box>\r\n              <Popper\r\n                variant=\"outlined\"\r\n                placement=\"right\"\r\n                id=\"mouse-over-popover\"\r\n                className={classes.popover}\r\n                classes={{\r\n                  paper: classes.paper,\r\n                }}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                elevation={0}\r\n                onClose={handlePopoverClose}\r\n                disableRestoreFocus\r\n              >\r\n                <span className={classes.numero}>{profesor.puntuacion}</span>\r\n              </Popper> */}\r\n            </div>\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n\r\n          <Typography\r\n            className={classes.nombre}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {profesor.nombre}\r\n          </Typography>\r\n\r\n          <Paper\r\n            className={classes.paperPresentacion}\r\n            overflow=\"scroll\"\r\n            elevation={0}\r\n            children={profesor.descripcion}\r\n          />\r\n          {/* {profesor.esProfesor === true ? (\r\n            <Typography\r\n              className={classes.datos}\r\n              gutterBottom\r\n              variant=\"body2\"\r\n              component=\"p\"\r\n            >\r\n              {profesor.calificaciones} calificaciones | \r\n              {profesor.horas} horas dictadas\r\n            </Typography>\r\n          ) : (\r\n            <p></p>\r\n          )} */}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\CarouselLanding.js",[],"D:\\Izily-React\\src\\components\\BotonCovertirmeEnMentor.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst labels = {\r\n  0.5: \"Useless\",\r\n  1: \"Muy Mala\",\r\n  1.5: \"Poor\",\r\n  2: \"Mala\",\r\n  2.5: \"Ok\",\r\n  3: \"Regular\",\r\n  3.5: \"Good\",\r\n  4: \"Buena\",\r\n  4.5: \"Excellent\",\r\n  5: \"Excelente\",\r\n};\r\n\r\nconst StyledRating = withStyles({\r\n  iconFilled: {\r\n    color: \"#3493C2\",\r\n  },\r\n})(Rating);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rootStars: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  stars: {\r\n    fontSize: \"35px\",\r\n  },\r\n\r\n  root: {\r\n    minWidth: \"550px\",\r\n    marginRight: \"20px\",\r\n    padding:\"15px\",\r\n  },\r\n  root2: {\r\n    maxWidth: \"550px\",\r\n    marginRight: \"20px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n  },\r\n  containerContent: {\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    widht: \"100%\",\r\n  },\r\n  containerContent2: {\r\n    display: \"flex\",\r\n    justifyContent: \"start\",\r\n    paddingTop: \"0px\",\r\n    paddingBottom: \"0px\",\r\n    widht: \"100%\",\r\n  },\r\n  IconosContainer: {\r\n    padding: \"10px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  PublicarButton: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"14px\",\r\n    height: \"30px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n\r\n  inputText: {\r\n    outline: \"none\",\r\n    resize: \"inherit\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"arial\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius: \"10px\",\r\n    width: \"95%\",\r\n    padding: \"10px\",\r\n    boxShadow: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  buttonConvertirmeMentor: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    marginTop: \"10px\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"15px\",\r\n    height: \"70px\",\r\n    width: \"220px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n  correo: {\r\n    color:\"#3493C2\",\r\n    fontWeight:\"bold\",\r\n    \"&:hover\":{\r\n      fontWeight:\"bold\",\r\n      color:\"#3493C2\",\r\n      textDecoration:\"underline\",\r\n      cursor:\"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [open2, setOpen2] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const [hover, setHover] = React.useState(-1);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={handleOpen}\r\n        variant=\"contained\"\r\n        color=\"inherit\"\r\n        size=\"small\"\r\n        className={classes.buttonConvertirmeMentor}\r\n        startIcon={\r\n            <img\r\n            style={{\r\n            marginLeft: \"5px\",\r\n            height: \"45px\",\r\n            width: \"auto\",\r\n            }}\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/izily-test.appspot.com/o/icons%2FConvertirmeEnProfesor.png?alt=media&token=a45096cb-1a3b-4134-811c-aaba4103528f\"\r\n            />\r\n            }\r\n            disableElevation=\"true\"\r\n        >\r\n        Convertirme en Mentor\r\n    </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Card className={classes.root}>\r\n          <CardHeader\r\n            // action={\r\n            //   <IconButton aria-label=\"settings\">\r\n            //     <MoreVertIcon />\r\n            //   </IconButton>\r\n            // }\r\n            title=\"Gracias por formar parte de Izily\"\r\n          />\r\n          <Divider/>\r\n          <CardContent className={classes.containerContent}>\r\n            <p>\r\n              Para convertirte en un mentor de Izily contáctanos a nuestro correo institucional haciendo click aquí:\r\n            </p>\r\n            <a target=\"_blank\" className={classes.correo} href=\"https://mail.google.com/mail/u/0/?fs=1&to=aprendeizily@gmail.com%20&su=QUIERO%20CONVERTIRME%20EN%20MENTOR&body=(Ingrese%20aqu%C3%AD%20sus%20nombres%20y%20apellidos,%20n%C3%BAmero%20de%20celular(WhatsApp),%20cursos%20que%20desea%20enseñar%20y%20el%20respectivo%20nivel%20(escolar,%20preuniversitario%20y%20universitario),%20y%20el%20link%20de%20su%20perfil%20en%20Izily.%20Este%20%C3%BAltimo%20puede%20obtenerlo%20yendo%20a%20su%20perfil%20dentro%20de%20la%20plataforma%20de%20Izily%20y%20copiando%20el%20URL)&tf=cm\">\r\n              aprendeizily@gmail.com\r\n            </a>\r\n          </CardContent>\r\n          <Grid className={classes.IconosContainer}>\r\n            <Grid item style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n              <Button\r\n                className={classes.PublicarButton}\r\n                onClick={handleClose}\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n              >\r\n                Cerrar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\Navbar.js",["183","184","185","186","187","188","189"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport logo from \"../assets/images/logoprincipal.webp\";\r\nimport { makeStyles, Grid, Button, IconButton, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MenuNavbar from \"./MenuNavbar\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    boxShadow: \"0px 0px 4px 0 rgba(0, 0, 0, 0.2)\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n\r\n  gridPadre: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  gridHijo: {\r\n    height: \"50px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchInput: {\r\n    opacity: \"0.9\",\r\n    padding: \"0px 5px\",\r\n    margin: \"0px 40px\",\r\n    fontSize: \"11px\",\r\n  },\r\n\r\n  logo: {\r\n    width: 64,\r\n    height: 40,\r\n    marginLeft: 15,\r\n  },\r\n  buttonLogo: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    },\r\n  },\r\n\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"11px\",\r\n  },\r\n\r\n  menu: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  icon: {\r\n    padding: \"10px\",\r\n  },\r\n\r\n  nombrecontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"160px\",\r\n    color: \"black\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  rootAvatar: {\r\n    marginRight: \"10px\",\r\n    width: \"33px\",\r\n    height: \"33px\",\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  nombre: {\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n}));\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function ElevateAppBar(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const { usuarioActual } = useAuth();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  async function goProfile() {\r\n    setError(\"\");\r\n    try {\r\n      history.push(`/perfil/${profesor.id}`);\r\n      window.location.reload();\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n  async function goInicio() {\r\n    setError(\"\");\r\n    try {\r\n      history.push(`/inicio`);\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n  async function editProfile() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      history.push(\"/editar-perfil\");\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  return usuarioActual ? (\r\n    <React.Fragment>\r\n      <ElevationScroll {...props}>\r\n        <AppBar className={classes.root}>\r\n          {/* <Toolbar> */}\r\n          <Grid className={classes.gridPadre} container alignItems=\"center\">\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button component={Link} to={\"/\"} className={classes.buttonLogo}>\r\n                <img src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Grid>\r\n\r\n            {/* <Grid className={classes.gridHijo} item xs></Grid> */}\r\n\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button\r\n                variante=\"link\"\r\n                onClick={goInicio}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Inicio\r\n              </Button>\r\n\r\n              <IconButton\r\n                disabled\r\n                className={classes.icon}\r\n                onClick={() => {\r\n                  history.push(\"/chat\");\r\n                }}\r\n              >\r\n                <Badge badgeContent={4}>\r\n                  <MessageIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton disabled className={classes.icon}>\r\n                <Badge badgeContent={4}>\r\n                  <NotificationsIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton component={Link} onClick={editProfile} className={classes.settings}>\r\n                {/*<Link to=\"/perfil\">*/}\r\n\r\n                <SettingsIcon fontSize=\"small\" />\r\n\r\n                {/*<Link />*/}\r\n              </IconButton>\r\n\r\n              {profesor && (\r\n                <Grid className={classes.nombrecontainer} xs>\r\n                  <Avatar\r\n                    variante=\"link\"\r\n                    onClick={goProfile}\r\n                    className={classes.rootAvatar}\r\n                    alt={profesor.nombre}\r\n                    src={profesor.imageURL}\r\n                  />\r\n                  <div\r\n                    className={classes.nombre}\r\n                    variante=\"link\"\r\n                    onClick={goProfile}\r\n                  >\r\n                    {profesor.nombre}\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              <MenuNavbar\r\n                perfil={profesor?.id}\r\n                esProfesor={profesor?.esProfesor}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* </Toolbar> */}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  ) : (\r\n    <React.Fragment>\r\n      <ElevationScroll {...props}>\r\n        <AppBar className={classes.root}>\r\n          {/* <Toolbar> */}\r\n          <Grid className={classes.gridPadre} container alignItems=\"center\">\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button component={Link} to={\"/\"} className={classes.buttonLogo}>\r\n                <img src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid className={classes.gridHijo} item xs></Grid>\r\n\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button\r\n                component={Link}\r\n                to={\"/login\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Ingresar\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to={\"/signup\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Regístrate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          {/* </Toolbar> */}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\MenuNavbar.js",["190","191"],"import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { useState } from \"react\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import MenuBookIcon from '@material-ui/icons/MenuBook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    \"&:onClick\": {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: \"1px solid #d3d4d5\",\r\n    marginLeft: \"-10px\",\r\n  },\r\n})((props) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: \"bottom\",\r\n      horizontal: \"center\",\r\n    }}\r\n    transformOrigin={{\r\n      vertical: \"top\",\r\n      horizontal: \"center\",\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    \"&:focus\": {\r\n      backgroundColor: \"\",\r\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n        color: \"\",\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const { usuarioActual, logout } = useAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  async function handleLogOut() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      handleClose();\r\n      await logout();\r\n      history.push(\"/login\");\r\n      window.location.reload();\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  async function editProfile() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      handleClose();\r\n      history.push(\"/editar-perfil\");\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  // async function misCursos(){\r\n  //   setError('')\r\n\r\n  //   try {\r\n  //     handleClose()\r\n  //     history.push('/mis-cursos')\r\n  //   } catch {\r\n  //     setError(\"Ocurrió un error al salir de la cuenta\");\r\n  //   }\r\n  // }\r\n\r\n  async function goProfile() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      handleClose();\r\n      history.push(`/perfil/${props.perfil}`);\r\n      window.location.reload();\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  async function acercaDeIzily() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      handleClose();\r\n      history.push(`/califica-a-izily`);\r\n      window.location.reload();\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        padding=\"0px\"\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        <KeyboardArrowDownIcon fontSize=\"medium\" />\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <StyledMenuItem\r\n          variante=\"link\"\r\n          onClick={goProfile}\r\n          className={classes.item}\r\n        >\r\n          <ListItemIcon>\r\n            <PersonIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Perfil\" />\r\n        </StyledMenuItem>\r\n        <StyledMenuItem variant=\"link\" onClick={editProfile}>\r\n          <ListItemIcon>\r\n            <SettingsIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Editar Perfil\" />\r\n        </StyledMenuItem>\r\n        {/* {props.esProfesor === true ? (\r\n          <StyledMenuItem disabled variant=\"link\" onClick={misCursos}>\r\n            <ListItemIcon>\r\n              <MenuBookIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mis Cursos\" />\r\n          </StyledMenuItem>\r\n        ) : (\r\n          <>\r\n          </>\r\n        )} */}\r\n        <StyledMenuItem variant=\"link\" onClick={handleLogOut}>\r\n          <ListItemIcon>\r\n            <ExitToAppTwoToneIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Cerrar Sesión\" />\r\n        </StyledMenuItem>\r\n        <Divider />\r\n        <StyledMenuItem variant=\"link\" onClick={acercaDeIzily}>\r\n          <ListItemIcon>\r\n            <InfoIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Califica a Izily\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\FeedbackForm.js",["192","193","194"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width:\"450px\",\r\n      margin: \"10px 0px\",\r\n      paddingBottom:\"5px\",\r\n    },\r\n    containerContent: {\r\n      padding: \"0px 10px\",\r\n      widht: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    IconosContainer: {\r\n      paddingLeft: \"5px\",\r\n      paddingTop: \"5px\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    PublicarButton: {\r\n      margin: \"5px 5px 0px 5px\",\r\n      color: \"#3493C2\",\r\n      fontWeight: \"bold\",\r\n      height: \"30px\",\r\n      fontSize: \"12px\",\r\n      border: \"0px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    inputText: {\r\n      outline: \"none\",\r\n      resize: \"inherit\",\r\n      fontSize: \"14px\",\r\n      fontFamily: \"arial\",\r\n      border: \"1px solid #C7C6C6\",\r\n      borderRadius: \"10px\",\r\n      width: \"100%\",\r\n      padding: \"10px\",\r\n      boxShadow: \"rgba(0, 0, 0, 1)\",\r\n    },\r\n  }));\r\n\r\n\r\nfunction FeedbackForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const initialBody = {\r\n      content: \"\",\r\n      date: \"\",\r\n      loginid: \"\",\r\n      name: \"\",\r\n      imageURL: \"\",\r\n      idPerfil: \"\",\r\n    };\r\n  \r\n    const [body, setBody] = useState(initialBody);\r\n    const [profesor, setProfesor] = useState(null);\r\n  \r\n    const { usuarioActual } = useAuth();\r\n    const history = useHistory();\r\n  \r\n    const traerPerfil = useCallback(() => {\r\n      if (usuarioActual) {\r\n        const idd = usuarioActual.uid;\r\n        const usuariosRef = db.collection(\"usuarios\");\r\n        usuariosRef\r\n          .where(\"loginid\", \"==\", idd)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => {\r\n              docs.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            if (docs.length > 0) {\r\n              setProfesor(docs[0]);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    }, [setProfesor]);\r\n  \r\n    const handleInputChange = (text) => {\r\n      if (text && profesor) {\r\n        const { name, value } = text.target;\r\n        \r\n        setBody({\r\n          ...body,\r\n          [name]: value,\r\n          name: profesor.nombre,\r\n          loginid: profesor.loginid,\r\n          date: new Date().toLocaleDateString(),\r\n          imageURL: profesor.imageURL,\r\n          idPerfil: profesor.id,\r\n        });\r\n      } else {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n  \r\n    const handleClick = async e => {\r\n      e.preventDefault();\r\n      await props.addFeedback(body);\r\n      setBody({...initialBody});\r\n      history.push('/califica-a-izily');\r\n      window.location.reload();\r\n    }\r\n    \r\n    \r\n  \r\n    useEffect(() => {\r\n      traerPerfil();\r\n    }, []);\r\n\r\n    function validarInput() {\r\n      document.getElementById(\"btn_Validar\").disabled = !document.getElementById(\"content\").value.length;\r\n    }\r\n  \r\n    return (\r\n        <Card className={classes.root}>\r\n          <p style={{ display:\"flex\", justifyContent:\"left\", paddingLeft: \"12px\", fontSize: \"16px\", margin: \"10px 0px\" }}>\r\n            Envíanos tu opinión para seguir mejorando\r\n          </p>\r\n\r\n          <CardContent align=\"center\" className={classes.containerContent}>\r\n              <input\r\n                className={classes.inputText}\r\n                variant=\"outline\"\r\n                type=\"text\"\r\n                name=\"content\"\r\n                id=\"content\"\r\n                aria-label=\"minimum height\"\r\n                placeholder=\"¿Qué opinas de Izily?\"\r\n                rowsMin={1}\r\n                onChange={handleInputChange}\r\n                value={body.content}\r\n                // onInput={validarInput}\r\n              />\r\n            </CardContent>\r\n          \r\n          <Grid container className={classes.IconosContainer}>\r\n            <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Button\r\n                className={classes.PublicarButton}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleClick}\r\n                id=\"btn_Validar\"\r\n                disabled={!body.content}\r\n              >\r\n                Publicar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default FeedbackForm\r\n\r\n//Este es un comentario\r\n//Este es un comentario de prueba","D:\\Izily-React\\src\\components\\Profesor.js",["195","196","197","198","199","200","201"],"//Este componente es una card sola de profesor\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst StyledRating = withStyles({\r\n  iconFilled: {\r\n    color: \"#3493C2\",\r\n  },\r\n})(Rating);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    borderRadius: 3,\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FAFAFA\",\r\n    },\r\n  },\r\n  cardContent: {\r\n    paddingBottom: \"10px\",\r\n    margin: \"0px\",\r\n  },\r\n  avatar: {\r\n    height: 150,\r\n    width: 150,\r\n    borderRadius: \"50%\",\r\n    AlignItems: \"center\",\r\n    marginBottom: 0,\r\n    fontSize:\"110px\",\r\n  },\r\n  avatarContainer: {\r\n    width:\"100%\",\r\n    border: 5,\r\n    marginBottom: 3,\r\n    marginTop: 2,\r\n    textAlign: \"center\",\r\n    justifyContent:\"center\",\r\n  },\r\n  numero: {\r\n    padding: 5,\r\n    margin: 0,\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    background:\"#757575\",\r\n    fontWeight:\"bold\",\r\n    borderRadius:\"7px\",\r\n    widht:\"20px\",\r\n  },\r\n  calificacion: {\r\n    flexDirection: \"row\",\r\n    textAlign: \"center\",\r\n  },\r\n  datos: {\r\n    fontWeight: \"bold\",\r\n    margin: \"10px 0px 0px 0px\",\r\n  },\r\n  descripcion: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  nombre: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: \"100%\",\r\n    whiteSpace: \"nowrap\",\r\n    textAlign: \"center\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n  },\r\n  paperPresentacion: {\r\n    backgroundColor: \"rgba(0,0,0,0)\",\r\n    height: \"75px\",\r\n    overflow: \"auto\",\r\n    textAlign: \"justify\",\r\n    padding: \"3px 8px 8px 0px\",\r\n    marginLeft: \"10px\",\r\n    marginTop: \"5px\",\r\n    marginBottom: \"5px\",\r\n  },\r\n  boton: {\r\n    marginTop: \"10px\",\r\n    border: \"1px solid grey\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n  popover: {\r\n    pointerEvents: \"none\",\r\n    boxShadow: \"0px\",\r\n    textShadow: \"0px\",\r\n  },\r\n  paper: {\r\n    padding: \"5px\",\r\n    boxShadow: \"0px\",\r\n    textShadow: \"0px\",\r\n    width: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    background: \"#A8A8A8\",\r\n  },\r\n}));\r\n\r\nexport default function Profesor({ profesor }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  // const defaultAvatar = \"https://i.pravatar.cc/300\";\r\n\r\n  // const profileRef = storage.ref('users/'+profesor.loginid+'/fotodeperfil.jpeg');\r\n  // profileRef.getDownloadURL()\r\n  // .then((url)=>{\r\n  //   var img = document.getElementById(`myimg-${profesor.id}`);\r\n  //   img.src = url;\r\n  // }).catch(()=>{\r\n  //   var img = document.getElementById(`myimg-${profesor.id}`);\r\n  //   img.src = 'https://i.pravatar.cc/300';\r\n  // });\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {/* <CardActionArea component={Link} to={`/perfil/${profesor.id}`}> */}\r\n      <CardContent style={{ paddingBottom: \"10px\" }}>\r\n        <div className={classes.avatarContainer}>\r\n          <div style={{margin: \"0px 0px 5px 0px\", padding:\"0px\", width:\"100%\", display:\"flex\", justifyContent:\"center\"}}>\r\n            <Avatar className={classes.avatar} alt={profesor.nombre} src={profesor.imageURL} />\r\n          </div>\r\n          {/* <img  className={classes.avatar} src={profesor.imageURL} /> */}\r\n          {/* id={`myimg-${profesor.id} */}\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              marginBottom: \"5px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {/* <Box\r\n              aria-owns={open ? \"mouse-over-popover\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              onMouseEnter={handlePopoverOpen}\r\n              onMouseLeave={handlePopoverClose}\r\n              component=\"fieldset\"\r\n              margin={0}\r\n              border={0}\r\n              padding={0}\r\n              mb={-1}\r\n              borderColor=\"transparent\"\r\n            >\r\n              <StyledRating\r\n                name=\"customized-color\"\r\n                //defaultValue= {5}\r\n                defaultValue={profesor.puntuacion}\r\n                precision={0.1}\r\n                icon={<StarIcon fontSize=\"large\" />}\r\n                readOnly\r\n              />\r\n            </Box> */}\r\n            {/* <Popper\r\n              variant=\"outlined\"\r\n              id=\"mouse-over-popover\"\r\n              className={classes.popover}\r\n              classes={{\r\n                paper: classes.paper,\r\n              }}\r\n              open={open}\r\n              anchorEl={anchorEl}\r\n              placement=\"right\"\r\n              elevation={0}\r\n              onClose={handlePopoverClose}\r\n              disableRestoreFocus\r\n            >\r\n              <span className={classes.numero}>{profesor.puntuacion}</span>\r\n            </Popper> */}\r\n          </div>\r\n          <Typography\r\n            className={classes.nombre}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {profesor.nombre}\r\n          </Typography>\r\n\r\n          <Paper\r\n            className={classes.paperPresentacion}\r\n            overflow=\"scroll\"\r\n            elevation={0}\r\n            children={profesor.descripcion}\r\n          />\r\n          {/* <Typography\r\n            className={classes.datos}\r\n            gutterBottom\r\n            variant=\"body2\"\r\n            component=\"p\"\r\n          >\r\n            {profesor.calificaciones} calificaciones | \r\n            {profesor.horas} horas dictadas\r\n          </Typography> */}\r\n\r\n          <Button\r\n            component={Link}\r\n            to={`/perfil/${profesor.id}`}\r\n            className={classes.boton}\r\n          >\r\n            Conectar\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n      {/* </CardActionArea> */}\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\Comentario.js",["202","203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// import CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    border: \"0px\",\r\n    boxShadow: \"0px\",\r\n    display: \"flex\",\r\n    paddingBottom: \"0px\",\r\n    height: \"auto\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"red\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n\r\n  avatarContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"start\",\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"0px\",\r\n    paddingRight: \"0px\",\r\n    // alignContent: \"start\",\r\n    // justifyItems: \"end\",\r\n    // alignItems: \"end\",\r\n    height: \"50px\",\r\n  },\r\n\r\n  nombre: {\r\n    color: \"black\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  containerContent: {\r\n    paddingTop: \"15px\",\r\n    paddingBottom: \"10px\",\r\n    paddingRight: \"10px\",\r\n    widht: \"100%\",\r\n  },\r\n  comentarioSContainer: {\r\n    padding: \"0px\",\r\n    margin: \"0px\",\r\n  },\r\n  comentario: {\r\n    color: \"black\",\r\n    widht: \"100%\",\r\n  },\r\n  avatar: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const getComments = () => {\r\n    db.collection(\"publicaciones\")\r\n      .doc(`${props.screamID}`)\r\n      .collection(\"coments\")\r\n      .orderBy(\"dateNumber\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const comments = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // comments.push(doc.data());\r\n          comments.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        // console.log(\"comments\", comments);\r\n        setComments(comments);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, [props]);\r\n\r\n  return (\r\n    <div>\r\n      {comments && (\r\n        <div>\r\n          {comments.map((comment) => (\r\n            <div style={{ margin: \"0px\", padding: \"0px\" }}>\r\n              <div style={{ padding: \"0px 10px\" }}>\r\n                <Divider />\r\n              </div>\r\n\r\n              <Card className={classes.root} variant=\"outlined\">\r\n                <CardHeader\r\n                  avatar={\r\n                    <Avatar\r\n                      aria-label=\"recipe\"\r\n                      className={classes.avatar}\r\n                      style={{\r\n                        margin: \"0px 0px 0px 10px\",\r\n                      }}\r\n                      alt={comment.name}\r\n                      src={comment.imageURL}\r\n                      onClick={async function goProfile() {\r\n                        setError(\"\");\r\n                        try {\r\n                          history.push(`/perfil/${comment.idPerfil}`);\r\n                        } catch {\r\n                          setError(\"Ocurrió un error al salir de la cuenta\");\r\n                        }\r\n                      }}\r\n                    />\r\n                  }\r\n                  className={classes.avatarContainer}\r\n                />\r\n                <div className={classes.containerContent}>\r\n                  <Typography\r\n                    className={classes.nombre}\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                    onClick={async function goProfile() {\r\n                      setError(\"\");\r\n                      try {\r\n                        history.push(`/perfil/${comment.idPerfil}`);\r\n                      } catch {\r\n                        setError(\"Ocurrió un error al salir de la cuenta\");\r\n                      }\r\n                    }}\r\n                  >\r\n                    {comment.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    className={classes.comentario}\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {comment.content}\r\n                  </Typography>\r\n                  {comment.photoUrl != \"\" && (\r\n                    <img src={comment?.photoUrl} className={classes.media} alt=\"\" />\r\n                  )}\r\n                </div>\r\n                {/* <CardMedia\r\n          className={classes.media}\r\n          src={props.image}\r\n          title=\"image\"\r\n        /> */}\r\n              </Card>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\CrearPublicacion.js",["206","207","208"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { storage } from \"../firebase\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 550,\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0px\",\r\n    paddingBottom: \"5px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n  },\r\n  containerContent: {\r\n    padding: \"0px 10px\",\r\n    widht: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    // marginBottom: \"10px\",\r\n  },\r\n  IconosContainer: {\r\n    paddingLeft: \"5px\",\r\n    paddingTop: \"5px\",\r\n    // padding:\"0px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  PublicarButton: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"12px\",\r\n    border: \"0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n\r\n  inputText: {\r\n    rowsMin: \"1\",\r\n    outline: \"none\",\r\n    wrap: \"hard\",\r\n    resize: \"inherit\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"arial\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    height: \"40px\",\r\n    padding: \"10px\",\r\n    boxShadow: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n  botonIcon: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    borderRadius: \"50px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#F5F5F5\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n\r\n  const initialBody = {\r\n    // body: '',\r\n    content: \"\",\r\n    date: \"\",\r\n    loginid: \"\",\r\n    name: \"\",\r\n    interesados: 0,\r\n    comentarios: 0,\r\n    photoUrl: \"\",\r\n  };\r\n\r\n  const [body, setBody] = useState(initialBody);\r\n\r\n  const { usuarioActual } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n  // const [isPhoto, setIsPhoto] = useState(false);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [photoUrl, setPhotoUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Get current user with database values and set on useState\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  // save input values inside the state localy\r\n\r\n  const handleInputChange = (text) => {\r\n    if (text && profesor) {\r\n      const { name, value } = text.target;\r\n      setBody({\r\n        ...body,\r\n        [name]: value,\r\n        name: profesor.nombre,\r\n        loginid: profesor.loginid,\r\n        date: new Date().toLocaleDateString(),\r\n        imageURL: profesor.imageURL,\r\n        idPerfil: profesor.id,\r\n        comentarios: [],\r\n        numeroDeComentarios: 0,\r\n        dateNumber: new Date(),\r\n      });\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  // set values on the database\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const publicationRef = await db.collection(\"publicaciones\").doc();\r\n    publicationRef\r\n      .set(body)\r\n      .then(() => {\r\n        setBody({ ...initialBody });\r\n      })\r\n      .then(() => {\r\n        publicationRef.update({\r\n          photoUrl: photoUrl,\r\n        });\r\n      })\r\n      .then(() => {\r\n        history.push(\"/inicio\");\r\n        setIsReady((isReady) => !isReady);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // const handlePhotoClick = async () => {\r\n  //   setIsPhoto(isPhoto => !isPhoto)\r\n  // }\r\n\r\n  const handlePhotoChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(`screams/${profesor.id}/${new Date()}`);\r\n    setLoading((loading) => !loading);\r\n    await fileRef.put(file);\r\n    setPhotoUrl(await fileRef.getDownloadURL());\r\n    setLoading((loading) => !loading);\r\n    setIsReady((isReady) => !isReady);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <p style={{ paddingLeft: \"12px\", fontSize: \"18px\", margin: \"10px 0px\" }}>\r\n        Crear Publicación\r\n      </p>\r\n\r\n      <CardContent align=\"center\" className={classes.containerContent}>\r\n        <TextareaAutosize\r\n          className={classes.inputText}\r\n          type=\"text\"\r\n          name=\"content\"\r\n          aria-label=\"minimum height\"\r\n          placeholder=\"Escribir publicación...\"\r\n          widht=\"500px\"\r\n          rowsMin={1}\r\n          onChange={handleInputChange}\r\n          value={body.content}\r\n          onKeyDown={(event) => {\r\n            if (event.key === \"Enter\") {\r\n              handleClick(event);\r\n            }\r\n          }}\r\n        />\r\n      </CardContent>\r\n      {loading && (\r\n        <div\r\n          style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", marginTop:\"5px\",}}\r\n        >\r\n          <CircularProgress color=\"none\" style={{ color: \"#3493C2\" }} />\r\n        </div>\r\n      )}\r\n      {isReady && (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", marginTop:\"5px\", }}>\r\n          <img style={{ width: \"100%\", height: \"auto\" }} src={photoUrl} />\r\n        </div>\r\n      )}\r\n      <Grid container className={classes.IconosContainer}>\r\n        <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Button\r\n            className={classes.PublicarButton}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleClick}\r\n            disabled={\r\n              !((body.content && isReady) || (body.content && !isReady))\r\n            }\r\n          >\r\n            Publicar\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <Grid item>\r\n            {/*\r\n            <IconButton onClick={handlePhotoClick} style={{ padding: \"10px\" }}>\r\n              <AddAPhotoIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          */}\r\n            <div className={classes.inputFileContent}>\r\n              <label htmlFor=\"screamPhoto1\" className={classes.botonIcon}>\r\n                <AddAPhotoIcon fontSize=\"medium\" style={{ color: \"#757575\" }} />\r\n              </label>\r\n              <Input\r\n                style={{ display: \"none\" }}\r\n                onChange={handlePhotoChange}\r\n                accept=\".jpg,.jpeg,.png\"\r\n                type=\"file\"\r\n                id=\"screamPhoto1\"\r\n                disabled={isReady === true || loading === true}\r\n              ></Input>\r\n            </div>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton disabled style={{ padding: \"10px\" }}>\r\n              <TheatersIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\Izily-React\\src\\components\\Publicacion.js",["209","210","211","212","213","214","215","216","217","218","219","220"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport { storage } from \"../firebase\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 550,\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n    fontSize: \"14px\",\r\n    // display: \"flex\",\r\n    // alignContent:\"start\",\r\n    //flexWrap: \"wrap\",\r\n    //hyphens: \"auto\",\r\n    //wordBreak:\"break-all\",\r\n  },\r\n  containerContent: {\r\n    paddingTop: \"10px\",\r\n    paddingBottom: \"8px\",\r\n    widht: \"100%\",\r\n  },\r\n  comentarioSContainer: {\r\n    padding: \"0px\",\r\n    margin: \"0px\",\r\n  },\r\n\r\n  comentariosP: {\r\n    marginRight: \"20px\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  interesadosP: {\r\n    marginLeft: \"20px\",\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    \"&:hover\": {\r\n      cursor: \"default\",\r\n    },\r\n  },\r\n\r\n  CardHeader: {\r\n    paddingTop: \"10px\",\r\n    paddingLeft: \"15px\",\r\n    paddingBottom: \"5px\",\r\n    width: \"100%\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#F5F5F5\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  rootCrearComentario: {\r\n    //maxWidth: 550,\r\n    width: \"100%\",\r\n    margin: \"0px 0px\",\r\n    border: \"0px\",\r\n    boxShadow: \"0px\",\r\n  },\r\n\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n  },\r\n  containerContentCrearComentario: {\r\n    padding: \"0px 10px\",\r\n    widht: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  IconosContainer: {\r\n    padding: \"0px 10px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  PublicarButton: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"12px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n\r\n  inputText: {\r\n    outline: \"none\",\r\n    resize: \"inherit\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"arial\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius: \"15px\",\r\n    width: \"100%\",\r\n    padding: \"10px 10px 10px 10px\",\r\n    boxShadow: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n  botonIcon: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    borderRadius: \"50px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#F5F5F5\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const initialBody = {\r\n    content: \"\",\r\n    name: \"\",\r\n    date: \"\",\r\n    loginid: \"\",\r\n    imageURL: \"\",\r\n    idPerfil: \"\",\r\n    photoUrl: \"\",\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [bodyComent, setBodyComent] = useState(initialBody);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const handleExpandClick2 = () => {\r\n    if (expanded == false) {\r\n      setExpanded(!expanded);\r\n    } else {\r\n      setExpanded(expanded);\r\n    }\r\n  };\r\n\r\n  const useFocus = () => {\r\n    const htmlElRef = useRef(null);\r\n    const setFocus = () => {\r\n      htmlElRef.current && htmlElRef.current.focus();\r\n    };\r\n\r\n    return [htmlElRef, setFocus];\r\n  };\r\n  const [inputRef, setInputFocus] = useFocus();\r\n\r\n  const { usuarioActual } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n  // const [screams, setScreams] = useState([\"2\"]);\r\n  const [error, setError] = useState(\"\");\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [photoUrl, setPhotoUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  const [comments, setComments] = useState([]);\r\n\r\n  const getComments = () => {\r\n    db.collection(\"publicaciones\")\r\n      .doc(`${props.screamId}`)\r\n      .collection(\"coments\")\r\n      .orderBy(\"dateNumber\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const comments = [];\r\n        querySnapshot.forEach((doc) => {\r\n          // comments.push(doc.data());\r\n          comments.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        // console.log(\"comments\", comments);\r\n        setComments(comments);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const handleInputChange = (text) => {\r\n    if (text && profesor) {\r\n      const { name, value } = text.target;\r\n      setBodyComent({\r\n        ...bodyComent,\r\n        [name]: value,\r\n        name: profesor.nombre,\r\n        loginid: profesor.loginid,\r\n        date: new Date().toLocaleDateString(),\r\n        imageURL: profesor.imageURL,\r\n        idPerfil: profesor.id,\r\n        dateNumber: new Date(),\r\n      });\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  async function goProfile() {\r\n    setError(\"\");\r\n    try {\r\n      history.push(`/perfil/${props.idPerfil}`);\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  const handleClickHeart = () => {};\r\n\r\n  const handlePhotoChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(`comments/${profesor.id}/${new Date()}`);\r\n    setLoading((loading) => !loading);\r\n    await fileRef.put(file);\r\n    setPhotoUrl(await fileRef.getDownloadURL());\r\n    setLoading((loading) => !loading);\r\n    setIsReady((isReady) => !isReady);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const commentRef = db.collection(\"publicaciones\")\r\n      .doc(`${props.screamId}`)\r\n      .collection(\"coments\");\r\n      commentRef\r\n      .add(bodyComent)\r\n      .then(() => {\r\n        setBodyComent({ ...initialBody });\r\n      })\r\n      .then(() => {\r\n        console.log(commentRef);\r\n        commentRef.update({ photoUrl: photoUrl });\r\n      })\r\n      .then(() => {\r\n        history.push(\"/inicio\");\r\n        setIsReady((isReady) => !isReady);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getComments();\r\n  }, [props]);\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.header}>\r\n        <CardHeader\r\n          className={classes.CardHeader}\r\n          avatar={\r\n            <Avatar\r\n              aria-label=\"recipe\"\r\n              className={classes.avatar}\r\n              alt={props.name}\r\n              src={props.imageURL}\r\n            />\r\n          }\r\n          // action={\r\n          //   <IconButton aria-label=\"settings\">\r\n          //     <MoreVertIcon />\r\n          //   </IconButton>\r\n          // }\r\n          title={props.name}\r\n          subheader={props.date}\r\n          // subheader={ props.dateNumber && ( moment(props.dateNumber.toISOString()).format('LL'))}\r\n          onClick={goProfile}\r\n        />\r\n\r\n        {/* {props.tag} */}\r\n      </div>\r\n\r\n      <CardContent className={classes.containerContent}>\r\n        <Typography\r\n          className={classes.Content}\r\n          variant=\"body2\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          {props.content}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      {/*<CardMedia className={classes.media} image={props.imagen} title=\"image\" /> */}\r\n      {props.imagen != \"\" && (\r\n        <img src={props?.imagen} className={classes.media} alt=\"\" />\r\n      )}\r\n\r\n      <Grid\r\n        container\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid style={{ \"&:hover\": { cursor: \"default\" } }} item>\r\n          <p className={classes.interesadosP}>\r\n            {/* A {props.interesados} personas les interesa esto. */}\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <p className={classes.comentariosP} onClick={handleExpandClick}>\r\n            {comments.length} { comments.length === 1 ? (\"comentario\"):(\"comentarios\") }\r\n          </p>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div style={{ padding: \"0px 10px\" }}>\r\n        <Divider />\r\n      </div>\r\n\r\n      <CardActions\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          padding: \"5px\",\r\n        }}\r\n      >\r\n        <Button\r\n          disabled\r\n          aria-label=\"add to favorites\"\r\n          style={{ height: \"35px\" }}\r\n        >\r\n          {/*<FavoriteIcon /> <p style={{marginLeft:\"10px\"}}>Me Interesa</p>*/}\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                icon={<FavoriteBorder />}\r\n                checkedIcon={<Favorite />}\r\n                name=\"checkedH\"\r\n              />\r\n            }\r\n            label=\"Me interesa\"\r\n            onClick={handleClickHeart}\r\n          />\r\n        </Button>\r\n        <Button\r\n          onClick={setInputFocus}\r\n          aria-label=\"share\"\r\n          style={{ height: \"35px\" }}\r\n        >\r\n          <ChatBubbleOutlineIcon />{\" \"}\r\n          <p style={{ marginLeft: \"10px\" }}>Comentar</p>\r\n        </Button>\r\n        {/* <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton> */}\r\n      </CardActions>\r\n\r\n      {/* <CrearComentario/> */}\r\n\r\n      <Card variant=\"outlined\" className={classes.rootCrearComentario}>\r\n        <CardContent\r\n          align=\"center\"\r\n          className={classes.containerContentCrearComentario}\r\n        >\r\n          <TextareaAutosize\r\n            className={classes.inputText}\r\n            variant=\"outline\"\r\n            type=\"text\"\r\n            name=\"content\"\r\n            aria-label=\"minimum height\"\r\n            placeholder=\"Comentar...\"\r\n            rowsMin={1}\r\n            onChange={handleInputChange}\r\n            onKeyDown={(event) => {\r\n              if (event.which === 13 && !event.shiftKey) {\r\n                event.preventDefault();\r\n                handleClick();\r\n\r\n                return false;\r\n              }\r\n              // if (event.key === 'Enter') {\r\n              //   handleClick();\r\n              // }\r\n            }}\r\n            value={bodyComent.content}\r\n            ref={inputRef}\r\n          />\r\n        </CardContent>\r\n        {loading && (\r\n          <div\r\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", marginTop:\"5px\",}}\r\n          >\r\n            <CircularProgress color=\"none\" style={{ color: \"#3493C2\" }} />\r\n          </div>\r\n        )}\r\n        {isReady && (\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", marginTop:\"5px\", }}>\r\n            <img style={{ width: \"100%\", height: \"auto\" }} src={photoUrl} />\r\n          </div>\r\n        )}\r\n        <Grid container className={classes.IconosContainer}>\r\n          <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Button\r\n              className={classes.PublicarButton}\r\n              size=\"small\"\r\n              onClick={handleClick}\r\n              disabled={!bodyComent.content}\r\n            >\r\n              Enviar\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Grid item>\r\n            <div className={classes.inputFileContent}>\r\n              <label htmlFor=\"commentPhoto1\" className={classes.botonIcon}>\r\n                <AddAPhotoIcon fontSize=\"medium\" style={{ color: \"#757575\" }} />\r\n              </label>\r\n              <Input\r\n                style={{ display: \"none\" }}\r\n                onChange={handlePhotoChange}\r\n                accept=\".jpg,.jpeg,.png\"\r\n                type=\"file\"\r\n                id=\"commentPhoto1\"\r\n                disabled={isReady === true || loading === true}\r\n              ></Input>\r\n            </div>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton disabled style={{ padding: \"10px 10px 10px 10px\" }}>\r\n                <TheatersIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n\r\n      <Collapse\r\n        className={classes.comentarioSContainer}\r\n        in={expanded}\r\n        timeout=\"auto\"\r\n        unmountOnExit\r\n      >\r\n        <div className={classes.comentarioSContainer}>\r\n          {props.children}\r\n          {/* <Comentario screamID={props.screamId} /> */}\r\n          {/* hacer aqui el mapeo de los comentarios */}\r\n        </div>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":19,"column":8,"nodeType":"227","messageId":"228","endLine":19,"endColumn":18},{"ruleId":"225","severity":1,"message":"229","line":253,"column":9,"nodeType":"227","messageId":"228","endLine":253,"endColumn":14},{"ruleId":"225","severity":1,"message":"230","line":256,"column":10,"nodeType":"227","messageId":"228","endLine":256,"endColumn":15},{"ruleId":"225","severity":1,"message":"231","line":258,"column":10,"nodeType":"227","messageId":"228","endLine":258,"endColumn":15},{"ruleId":"225","severity":1,"message":"232","line":265,"column":10,"nodeType":"227","messageId":"228","endLine":265,"endColumn":16},{"ruleId":"233","severity":1,"message":"234","line":293,"column":6,"nodeType":"235","endLine":293,"endColumn":8,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":317,"column":24,"nodeType":"239","messageId":"240","endLine":317,"endColumn":26},{"ruleId":"225","severity":1,"message":"241","line":362,"column":18,"nodeType":"227","messageId":"228","endLine":362,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":502,"column":64,"nodeType":"244","messageId":"245","endLine":502,"endColumn":66},{"ruleId":"242","severity":1,"message":"243","line":522,"column":64,"nodeType":"244","messageId":"245","endLine":522,"endColumn":66},{"ruleId":"242","severity":1,"message":"243","line":542,"column":64,"nodeType":"244","messageId":"245","endLine":542,"endColumn":66},{"ruleId":"233","severity":1,"message":"246","line":161,"column":6,"nodeType":"235","endLine":161,"endColumn":19,"suggestions":"247"},{"ruleId":"233","severity":1,"message":"248","line":235,"column":6,"nodeType":"235","endLine":235,"endColumn":8,"suggestions":"249"},{"ruleId":"242","severity":1,"message":"243","line":300,"column":29,"nodeType":"244","messageId":"245","endLine":300,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":303,"column":22,"nodeType":"244","messageId":"245","endLine":303,"endColumn":24},{"ruleId":"225","severity":1,"message":"250","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":60,"column":31,"nodeType":"244","messageId":"245","endLine":60,"endColumn":33},{"ruleId":"225","severity":1,"message":"251","line":168,"column":10,"nodeType":"227","messageId":"228","endLine":168,"endColumn":18},{"ruleId":"225","severity":1,"message":"252","line":190,"column":11,"nodeType":"227","messageId":"228","endLine":190,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":206,"column":6,"nodeType":"235","endLine":206,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":356,"column":9,"nodeType":"256","endLine":360,"endColumn":10},{"ruleId":"257","severity":1,"message":"258","line":72,"column":18,"nodeType":"259","messageId":"260","endLine":72,"endColumn":45},{"ruleId":"225","severity":1,"message":"261","line":120,"column":9,"nodeType":"227","messageId":"228","endLine":120,"endColumn":16},{"ruleId":"233","severity":1,"message":"262","line":205,"column":6,"nodeType":"235","endLine":205,"endColumn":17,"suggestions":"263"},{"ruleId":"225","severity":1,"message":"264","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":11},{"ruleId":"225","severity":1,"message":"265","line":11,"column":8,"nodeType":"227","messageId":"228","endLine":11,"endColumn":16},{"ruleId":"225","severity":1,"message":"266","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":14},{"ruleId":"225","severity":1,"message":"267","line":16,"column":7,"nodeType":"227","messageId":"228","endLine":16,"endColumn":19},{"ruleId":"225","severity":1,"message":"268","line":104,"column":9,"nodeType":"227","messageId":"228","endLine":104,"endColumn":26},{"ruleId":"225","severity":1,"message":"269","line":108,"column":9,"nodeType":"227","messageId":"228","endLine":108,"endColumn":27},{"ruleId":"225","severity":1,"message":"270","line":112,"column":9,"nodeType":"227","messageId":"228","endLine":112,"endColumn":13},{"ruleId":"225","severity":1,"message":"271","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":24},{"ruleId":"225","severity":1,"message":"272","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":21},{"ruleId":"225","severity":1,"message":"273","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":20},{"ruleId":"225","severity":1,"message":"264","line":13,"column":8,"nodeType":"227","messageId":"228","endLine":13,"endColumn":11},{"ruleId":"225","severity":1,"message":"265","line":14,"column":8,"nodeType":"227","messageId":"228","endLine":14,"endColumn":16},{"ruleId":"225","severity":1,"message":"274","line":20,"column":7,"nodeType":"227","messageId":"228","endLine":20,"endColumn":13},{"ruleId":"225","severity":1,"message":"267","line":33,"column":7,"nodeType":"227","messageId":"228","endLine":33,"endColumn":19},{"ruleId":"225","severity":1,"message":"275","line":157,"column":10,"nodeType":"227","messageId":"228","endLine":157,"endColumn":15},{"ruleId":"225","severity":1,"message":"276","line":157,"column":17,"nodeType":"227","messageId":"228","endLine":157,"endColumn":25},{"ruleId":"225","severity":1,"message":"277","line":167,"column":10,"nodeType":"227","messageId":"228","endLine":167,"endColumn":15},{"ruleId":"225","severity":1,"message":"278","line":167,"column":17,"nodeType":"227","messageId":"228","endLine":167,"endColumn":25},{"ruleId":"225","severity":1,"message":"279","line":168,"column":10,"nodeType":"227","messageId":"228","endLine":168,"endColumn":15},{"ruleId":"225","severity":1,"message":"280","line":168,"column":17,"nodeType":"227","messageId":"228","endLine":168,"endColumn":25},{"ruleId":"281","severity":1,"message":"282","line":179,"column":13,"nodeType":"256","endLine":186,"endColumn":15},{"ruleId":"254","severity":1,"message":"255","line":217,"column":13,"nodeType":"256","endLine":217,"endColumn":581},{"ruleId":"225","severity":1,"message":"283","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":20},{"ruleId":"225","severity":1,"message":"284","line":11,"column":8,"nodeType":"227","messageId":"228","endLine":11,"endColumn":18},{"ruleId":"225","severity":1,"message":"230","line":121,"column":10,"nodeType":"227","messageId":"228","endLine":121,"endColumn":15},{"ruleId":"233","severity":1,"message":"246","line":148,"column":6,"nodeType":"235","endLine":148,"endColumn":19,"suggestions":"285"},{"ruleId":"233","severity":1,"message":"248","line":152,"column":6,"nodeType":"235","endLine":152,"endColumn":8,"suggestions":"286"},{"ruleId":"281","severity":1,"message":"282","line":189,"column":17,"nodeType":"256","endLine":189,"endColumn":60},{"ruleId":"281","severity":1,"message":"282","line":265,"column":17,"nodeType":"256","endLine":265,"endColumn":60},{"ruleId":"225","severity":1,"message":"230","line":70,"column":10,"nodeType":"227","messageId":"228","endLine":70,"endColumn":15},{"ruleId":"225","severity":1,"message":"287","line":71,"column":11,"nodeType":"227","messageId":"228","endLine":71,"endColumn":24},{"ruleId":"233","severity":1,"message":"246","line":91,"column":8,"nodeType":"235","endLine":91,"endColumn":21,"suggestions":"288"},{"ruleId":"233","severity":1,"message":"248","line":123,"column":8,"nodeType":"235","endLine":123,"endColumn":10,"suggestions":"289"},{"ruleId":"225","severity":1,"message":"290","line":125,"column":14,"nodeType":"227","messageId":"228","endLine":125,"endColumn":26},{"ruleId":"225","severity":1,"message":"264","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":11},{"ruleId":"225","severity":1,"message":"265","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":16},{"ruleId":"225","severity":1,"message":"266","line":14,"column":8,"nodeType":"227","messageId":"228","endLine":14,"endColumn":14},{"ruleId":"225","severity":1,"message":"267","line":17,"column":7,"nodeType":"227","messageId":"228","endLine":17,"endColumn":19},{"ruleId":"225","severity":1,"message":"268","line":119,"column":9,"nodeType":"227","messageId":"228","endLine":119,"endColumn":26},{"ruleId":"225","severity":1,"message":"269","line":123,"column":9,"nodeType":"227","messageId":"228","endLine":123,"endColumn":27},{"ruleId":"225","severity":1,"message":"270","line":127,"column":9,"nodeType":"227","messageId":"228","endLine":127,"endColumn":13},{"ruleId":"225","severity":1,"message":"291","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":19},{"ruleId":"225","severity":1,"message":"230","line":85,"column":10,"nodeType":"227","messageId":"228","endLine":85,"endColumn":15},{"ruleId":"233","severity":1,"message":"292","line":108,"column":6,"nodeType":"235","endLine":108,"endColumn":13,"suggestions":"293"},{"ruleId":"242","severity":1,"message":"294","line":168,"column":37,"nodeType":"244","messageId":"245","endLine":168,"endColumn":39},{"ruleId":"233","severity":1,"message":"246","line":145,"column":6,"nodeType":"235","endLine":145,"endColumn":19,"suggestions":"295"},{"ruleId":"233","severity":1,"message":"248","line":210,"column":6,"nodeType":"235","endLine":210,"endColumn":8,"suggestions":"296"},{"ruleId":"281","severity":1,"message":"282","line":245,"column":11,"nodeType":"256","endLine":245,"endColumn":75},{"ruleId":"225","severity":1,"message":"297","line":16,"column":8,"nodeType":"227","messageId":"228","endLine":16,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":121,"column":3,"nodeType":"300","messageId":"245","endLine":121,"endColumn":9},{"ruleId":"298","severity":1,"message":"301","line":128,"column":3,"nodeType":"300","messageId":"245","endLine":128,"endColumn":13},{"ruleId":"298","severity":1,"message":"302","line":134,"column":3,"nodeType":"300","messageId":"245","endLine":134,"endColumn":10},{"ruleId":"225","severity":1,"message":"303","line":200,"column":9,"nodeType":"227","messageId":"228","endLine":200,"endColumn":27},{"ruleId":"242","severity":1,"message":"243","line":201,"column":18,"nodeType":"244","messageId":"245","endLine":201,"endColumn":20},{"ruleId":"225","severity":1,"message":"230","line":223,"column":10,"nodeType":"227","messageId":"228","endLine":223,"endColumn":15},{"ruleId":"233","severity":1,"message":"246","line":248,"column":6,"nodeType":"235","endLine":248,"endColumn":19,"suggestions":"304"},{"ruleId":"233","severity":1,"message":"248","line":337,"column":6,"nodeType":"235","endLine":337,"endColumn":8,"suggestions":"305"},{"ruleId":"233","severity":1,"message":"292","line":341,"column":6,"nodeType":"235","endLine":341,"endColumn":13,"suggestions":"306"},{"ruleId":"242","severity":1,"message":"294","line":383,"column":21,"nodeType":"244","messageId":"245","endLine":383,"endColumn":23},{"ruleId":"281","severity":1,"message":"282","line":493,"column":13,"nodeType":"256","endLine":493,"endColumn":77},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"no-unused-vars","'PeopleIcon' is defined but never used.","Identifier","unusedVar","'theme' is assigned a value but never used.","'error' is assigned a value but never used.","'carga' is assigned a value but never used.","'events' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'traerProfesor'. Either include it or remove the dependency array.","ArrayExpression",["309"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'convertToMentor' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useCallback has a missing dependency: 'usuarioActual'. Either include it or remove the dependency array.",["310"],"React Hook useEffect has a missing dependency: 'traerPerfil'. Either include it or remove the dependency array.",["311"],"'backgroundgrid1' is defined but never used.","'profesor' is assigned a value but never used.","'screamRef' is assigned a value but never used.",["312"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filtrarProfesores'. Either include it or remove the dependency array.",["313"],"'Box' is defined but never used.","'StarIcon' is defined but never used.","'Popper' is defined but never used.","'StyledRating' is assigned a value but never used.","'handlePopoverOpen' is assigned a value but never used.","'handlePopoverClose' is assigned a value but never used.","'open' is assigned a value but never used.","'TextareaAutosize' is defined but never used.","'AddAPhotoIcon' is defined but never used.","'IconButton' is defined but never used.","'labels' is assigned a value but never used.","'open2' is assigned a value but never used.","'setOpen2' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'withStyles' is defined but never used.","'PersonIcon' is defined but never used.",["314"],["315"],"'usuarioActual' is assigned a value but never used.",["316"],["317"],"'validarInput' is defined but never used.","'CardContent' is defined but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["318"],"Expected '!==' and instead saw '!='.",["319"],["320"],"'CardMedia' is defined but never used.","no-dupe-keys","Duplicate key 'expand'.","ObjectExpression","Duplicate key 'expandOpen'.","Duplicate key 'Content'.","'handleExpandClick2' is assigned a value but never used.",["321"],["322"],["323"],"no-global-assign","no-unsafe-negation",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"324","fix":"330"},{"desc":"331","fix":"332"},{"desc":"326","fix":"333"},{"desc":"328","fix":"334"},{"desc":"326","fix":"335"},{"desc":"328","fix":"336"},{"desc":"337","fix":"338"},{"desc":"326","fix":"339"},{"desc":"328","fix":"340"},{"desc":"326","fix":"341"},{"desc":"328","fix":"342"},{"desc":"337","fix":"343"},"Update the dependencies array to be: [traerProfesor]",{"range":"344","text":"345"},"Update the dependencies array to be: [usuarioActual]",{"range":"346","text":"347"},"Update the dependencies array to be: [traerPerfil]",{"range":"348","text":"349"},{"range":"350","text":"345"},"Update the dependencies array to be: [etiquetas, filtrarProfesores]",{"range":"351","text":"352"},{"range":"353","text":"347"},{"range":"354","text":"349"},{"range":"355","text":"347"},{"range":"356","text":"349"},"Update the dependencies array to be: [getComments, props]",{"range":"357","text":"358"},{"range":"359","text":"347"},{"range":"360","text":"349"},{"range":"361","text":"347"},{"range":"362","text":"349"},{"range":"363","text":"358"},[6770,6772],"[traerProfesor]",[4261,4274],"[usuarioActual]",[6309,6311],"[traerPerfil]",[4807,4809],[5984,5995],"[etiquetas, filtrarProfesores]",[3650,3663],[3715,3717],[2450,2463],[3230,3232],[2676,2683],"[getComments, props]",[3810,3823],[5516,5518],[6383,6396],[8683,8685],[8737,8744]]