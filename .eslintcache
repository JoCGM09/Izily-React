[{"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\index.js":"1","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\firebase.js":"3","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\routes\\App.js":"4","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Home.js":"5","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\PrivateRoute.js":"6","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\SignUp.js":"7","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\LogIn.js":"8","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\ForgotPassword.js":"9","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\CalificaAIzily.js":"10","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Landing.js":"11","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\MisCursos.js":"12","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\contexts\\AuthContext.js":"13","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Inicio.js":"14","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Perfil.js":"15","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\EditProfile.js":"16","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\ConvertirmeEnMentor.js":"17","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\BuscarUsuarios.js":"18","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Profesores.js":"19","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\NotFound.jsx":"20","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Layout.jsx":"21","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\CarouselLanding.js":"22","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Feedback.js":"23","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Comentario.js":"24","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\ProfesorPerfil.js":"25","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Publicacion.js":"26","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\CrearPublicacion.js":"27","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Calificacion.js":"28","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Navbar.js":"29","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\chat\\Chat.js":"30","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\MenuNavbar.js":"31","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\FeedbackForm.js":"32","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\chat\\NewMessage.js":"33","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Profesor.js":"34"},{"size":308,"mtime":1617582890073,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1617235243991,"results":"37","hashOfConfig":"36"},{"size":577,"mtime":1618452506247,"results":"38","hashOfConfig":"36"},{"size":2207,"mtime":1618452992979,"results":"39","hashOfConfig":"36"},{"size":759,"mtime":1617235243983,"results":"40","hashOfConfig":"36"},{"size":488,"mtime":1617235243984,"results":"41","hashOfConfig":"36"},{"size":5522,"mtime":1618511380670,"results":"42","hashOfConfig":"36"},{"size":4650,"mtime":1617235243983,"results":"43","hashOfConfig":"36"},{"size":3283,"mtime":1617235243982,"results":"44","hashOfConfig":"36"},{"size":204,"mtime":1617235243986,"results":"45","hashOfConfig":"36"},{"size":6219,"mtime":1617235243988,"results":"46","hashOfConfig":"36"},{"size":4749,"mtime":1617235243989,"results":"47","hashOfConfig":"36"},{"size":2304,"mtime":1618511377872,"results":"48","hashOfConfig":"36"},{"size":8718,"mtime":1618452506246,"results":"49","hashOfConfig":"36"},{"size":20665,"mtime":1618452506246,"results":"50","hashOfConfig":"36"},{"size":13062,"mtime":1618452506242,"results":"51","hashOfConfig":"36"},{"size":17319,"mtime":1618452506245,"results":"52","hashOfConfig":"36"},{"size":8776,"mtime":1618455275832,"results":"53","hashOfConfig":"36"},{"size":11411,"mtime":1618452506246,"results":"54","hashOfConfig":"36"},{"size":2211,"mtime":1617235243989,"results":"55","hashOfConfig":"36"},{"size":284,"mtime":1617235243988,"results":"56","hashOfConfig":"36"},{"size":5700,"mtime":1617235243979,"results":"57","hashOfConfig":"36"},{"size":3415,"mtime":1618452506242,"results":"58","hashOfConfig":"36"},{"size":3252,"mtime":1617235243980,"results":"59","hashOfConfig":"36"},{"size":5635,"mtime":1617235243985,"results":"60","hashOfConfig":"36"},{"size":10945,"mtime":1618452506244,"results":"61","hashOfConfig":"36"},{"size":5535,"mtime":1618452506241,"results":"62","hashOfConfig":"36"},{"size":7691,"mtime":1618452506241,"results":"63","hashOfConfig":"36"},{"size":7876,"mtime":1618511379712,"results":"64","hashOfConfig":"36"},{"size":1566,"mtime":1617654181265,"results":"65","hashOfConfig":"36"},{"size":5239,"mtime":1618511378675,"results":"66","hashOfConfig":"36"},{"size":4849,"mtime":1618452506243,"results":"67","hashOfConfig":"36"},{"size":3037,"mtime":1617657929995,"results":"68","hashOfConfig":"36"},{"size":6497,"mtime":1617235243984,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1h2a6od",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\index.js",[],["155","156"],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\firebase.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\routes\\App.js",["157","158","159"],"import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../components/Home\";\r\nimport Perfil from \"../containers/Perfil\";\r\nimport NotFound from \"../containers/NotFound\";\r\nimport Layout from \"../containers/Layout\";\r\nimport SignUp from \"../components/SignUp\";\r\nimport LogIn from \"../components/LogIn\";\r\nimport PrivateRoute from \"../components/PrivateRoute\";\r\nimport EditProfile from \"../components/EditProfile\";\r\nimport ForgotPassword from \"../components/ForgotPassword\";\r\nimport { AuthProvider } from \"../contexts/AuthContext\";\r\nimport Inicio from \"../containers/Inicio\";\r\nimport Profesores from \"../containers/Profesores\";\r\nimport Landing from \"../containers/Landing\";\r\nimport CalificaAIzily from \"../containers/CalificaAIzily\";\r\nimport MisCursos from \"../containers/MisCursos\";\r\nimport ConvertirmeEnMentor from \"../containers/ConvertirmeEnMentor\";\r\nimport BuscarUsuarios from \"../containers/BuscarUsuarios\";\r\n\r\n// probando rama login\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <AuthProvider>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n          <Route exact path=\"/login\" component={LogIn} />\r\n          <Route exact path=\"/forgot-password\" component={ForgotPassword} />\r\n          <PrivateRoute path=\"/editar-perfil\" component={EditProfile} />\r\n          {/* <PrivateRoute path=\"/mis-cursos\" component={MisCursos} /> */}\r\n          <PrivateRoute\r\n            path=\"/convertirme-en-mentor\"\r\n            component={ConvertirmeEnMentor}\r\n          />\r\n          <PrivateRoute exact path=\"/buscar-un-mentor\" component={Profesores} />\r\n          {/* <PrivateRoute exact path=\"/buscar\" component={BuscarUsuarios} /> */}\r\n          <PrivateRoute exact path=\"/inicio\" component={Inicio} />\r\n          <PrivateRoute path=\"/perfil/:profesorId\" component={Perfil} />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/califica-a-izily\"\r\n            component={CalificaAIzily}\r\n          />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Layout>\r\n    </AuthProvider>\r\n  </BrowserRouter>\r\n);\r\nexport default App;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Home.js",["160"],"import \"./Home.css\";\r\nimport Profesores from \"../containers/Profesores\";\r\nimport React, { useState } from \"react\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nfunction Home() {\r\n\r\n  const [error, setError] = useState(\"\")\r\n  const { logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n\r\n  async function handleLogOut(){\r\n    setError('')\r\n\r\n    try {\r\n      await logout()\r\n      history.push('/login')\r\n    } catch {\r\n      setError('Ocurrió un error al salir de la cuenta')\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <Alert variant=\"filled\" severity=\"error\">{error}</Alert>}\r\n      <Profesores />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\PrivateRoute.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\SignUp.js",["161"],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\LogIn.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\ForgotPassword.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\CalificaAIzily.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Landing.js",["162","163"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport backgroundgrid1 from \"../assets/images/backgroundgrid1.jpg\";\r\nimport logoprincipal from \"../assets/images/logoprincipal.webp\";\r\nimport mentores from \"../assets/images/mentores.png\";\r\nimport comunidad from \"../assets/images/comunidad.png\";\r\nimport videollamada from \"../assets/images/videollamada.png\";\r\nimport CarouselLanding from \"../components/CarouselLanding\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Div1: {\r\n    display:\"flex\",\r\n    flexDirection:\"row\",\r\n    justifyContent:\"space-between\",\r\n    background:\"white\",\r\n    // backgroundImage: `url(${backgroundgrid1})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right center\",\r\n    backgroundSize: \"cover\",\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n    padding: \"50px 0px 65px 0px\",\r\n    borderBottom:\"1px solid #EBECEC\",\r\n  },\r\n  titulo: {\r\n    paddingLeft: \"50px\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    fontSize: \"35px\",\r\n  },\r\n  tituloimageContainer:{\r\n    margin:\"30px 60px\",\r\n    display:\"flex\",\r\n    justifyContent:\"center\",\r\n    padding:\"40px\",\r\n    alignItems:\"center\",\r\n    backgroundImage: `url(${videollamada})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right center\",\r\n    backgroundSize: \"contain\",\r\n    width:\"600px\",\r\n    height:\"400px\",\r\n  },\r\n  renglon: {\r\n    display: \"flex\",\r\n    margin: \"0px\",\r\n  },\r\n  tituloblanco: {\r\n    color: \"black\",\r\n    margin: \"5px 0px\",\r\n  },\r\n  tituloazul: {\r\n    color: \"#3493C2\",\r\n    margin: \"5px 0px\",\r\n  },\r\n  tituloblancomedio: {\r\n    color: \"black\",\r\n    margin: \"0px 0px 0px 0px\",\r\n  },\r\n  tituloazulmedio: {\r\n    color: \"#3493C2\",\r\n    margin: \"0px 25px 0px 0px\",\r\n  },\r\n  tituloazulbajo: {\r\n    color: \"#3493C2\",\r\n    margin: \"0px 0px 15px 0px\",\r\n  },\r\n  Div2: {\r\n    background:\"white\",\r\n    // backgroundImage: `url(${backgroundgrid2})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right bottom\",\r\n    backgroundSize: \"cover\",\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  TituloGrid2: {\r\n    fontSize: \"25px\",\r\n    fontWeight: \"bold\",\r\n    color: \"#3493C2\",\r\n    margin: 10,\r\n  },\r\n  Grid2: {\r\n    padding: \"20px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Grid2Item: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    padding: \"10px\",\r\n    //borderTop:\"1px solid #EBECEC\",\r\n    borderBottom:\"1px solid #EBECEC\",\r\n  },\r\n  textgrid2: {\r\n    width: \"80%\",\r\n  },\r\n  Imagen1: {\r\n    width: \"50%\",\r\n    height: \"auto\",\r\n  },\r\n  imggrid2: {\r\n    paddingTop:\"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"200%\",\r\n  },\r\n  titulogrid2: {\r\n    color: \"#3493C2\",\r\n    fontSize: \"17px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitulogrid2: {},\r\n}));\r\n\r\nfunction Landing() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container className={classes.Div1}>\r\n        <Grid item className={classes.titulo}>\r\n          <h1 className={classes.tituloblanco}>Aprende para</h1>\r\n          <div className={classes.renglon}>\r\n            <h1 className={classes.tituloazulmedio}>enseñar</h1>{\" \"}\r\n            <h1 className={classes.tituloblancomedio}>y</h1>\r\n          </div>\r\n          <h1 className={classes.tituloblanco}>enseña para</h1>\r\n          <h1 className={classes.tituloazulbajo}>aprender</h1>\r\n        </Grid>\r\n        <Grid item className={classes.tituloimageContainer}>\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.Div2}>\r\n        <p className={classes.TituloGrid2}>¿Quiénes somos?</p>\r\n        <Grid className={classes.Grid2} container>\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={logoprincipal}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Red Social Educativa</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Orientada a ayudar tanto a escolares como a\r\n                universitarios.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={comunidad}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Comunidades\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Comunidad</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Donde puedes compartir tu experiencia y conocimiento.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid className={classes.Grid2Item} item xs={10} sm={6} md={4} lg={4}>\r\n            <Grid className={classes.imggrid2}>\r\n              <div align=\"center\">\r\n                <img\r\n                  src={mentores}\r\n                  className={classes.Imagen1}\r\n                  alt=\"Mentores\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid className={classes.textgrid2}>\r\n              <p className={classes.titulogrid2}>Mentores</p>\r\n              <p className={classes.subtitulogrid2}>\r\n                Con experiencia dispuestos a ayudarte a resolver todas tus dudas.\r\n              </p>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid style={{display:\"flex\", padding:\"10px 0px 50px 0px\", background:\"white\"}}>\r\n      <CarouselLanding/>\r\n      {/* <Carousel2/> */}\r\n      </Grid>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\MisCursos.js",["164","165","166"],"import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  paper: {\r\n    width: 200,\r\n    height: 230,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nexport default function MisCursos() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const todosLosCursos = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\r\n  const misCursos = [\"c\",\"d\"];\r\n  const misNoCursos = todosLosCursos.filter(elemento => !misCursos.includes(elemento));\r\n  const [left, setLeft] = React.useState(misNoCursos);\r\n  const [right, setRight] = React.useState(misCursos);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n\r\n  const customList = (items) => (\r\n    <Paper className={classes.paper}>\r\n      <List dense component=\"div\" role=\"list\">\r\n        {items.map((value) => {\r\n          const labelId = `transfer-list-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`Curso ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Paper>\r\n  );\r\n\r\n  const { usuarioActual } = useAuth();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n  \r\n  const traerPerfil = useCallback(()=>{\r\n    if(usuarioActual){\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <p>\r\n        \r\n      </p>\r\n      <Grid item>{customList(left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList(right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\contexts\\AuthContext.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Inicio.js",["167","168"],"import React, { useEffect, useState } from \"react\";\r\n// import { useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport CrearPublicacion from \"../components/CrearPublicacion\";\r\nimport Publicacion from \"../components/Publicacion\";\r\nimport Comentario from \"../components/Comentario\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"40px\",\r\n    fontSize: \"12px\",\r\n  },\r\n\r\n  searchInput: {\r\n    opacity: \"0.9\",\r\n    padding: \"0px 5px\",\r\n    margin: \"0px\",\r\n    fontSize: \"11px\",\r\n    width: \"200px\",\r\n  },\r\n\r\n  gridTotal: {\r\n    paddingTop: \"15px\",\r\n    display: \"flex\",\r\n    justifyContent:\"center\",\r\n    alignContent: \"center\",\r\n    flexDirection: \"row\",\r\n    flexGrow: 1,\r\n    // width: \"100%\",\r\n  },\r\n  gridArriba: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n\r\n    flexDirection: \"row\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  publicacionesContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minWidth: \"100%\",\r\n  },\r\n  gridMedio: {\r\n    //minWidth:\"90px\",\r\n  },\r\n  root: {\r\n    maxWidth: 550,\r\n    // minWidth: \"100%\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n    // display: \"flex\",\r\n    // alignContent:\"start\",\r\n    //flexWrap: \"wrap\",\r\n    //hyphens: \"auto\",\r\n    //wordBreak:\"break-all\",\r\n  },\r\n\r\n  etiqueta0: {\r\n    //margin: \"15px\",\r\n    background: \"#51B852\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta1: {\r\n    //marginRight: \"15px\",\r\n    background: \"#3493C2\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta2: {\r\n    //margin: \"15px\",\r\n    background: \"#8F55A0\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    paddingTop:\"50px\",\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    padding:\"50px 20px 10px 20px\",\r\n  },\r\n  main: {\r\n    flexGrow: 1,\r\n  },\r\n  divMain: {\r\n    display:\"flex\",\r\n  },\r\n  FB: {\r\n    color:\"#3b5998\",\r\n    fontSize:\"50px\"\r\n  },\r\n  Li: {\r\n    color:\"#0e76a8\",\r\n    fontSize:\"50px\"\r\n  },\r\n  buttonLogo: {\r\n    width:\"400px\",\r\n    height:\"40px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  const { usuarioActual } = useAuth();\r\n  const [profesor, setProfesor] = useState(null);\r\n  const [screams, setScreams] = useState([\"2\"]);\r\n\r\n  const traerProfesor = () => {\r\n    const idd = usuarioActual.uid;\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"loginid\", \"==\", idd)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setProfesor(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const getScreams = () => {\r\n    const screamRef = db.collection(\"publicaciones\").orderBy(\"dateNumber\", \"desc\");\r\n    screamRef\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n          //console.log(doc.id, \" => \", doc.data());\r\n        });\r\n        //error\r\n        setScreams(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  // const [open, setOpen] = React.useState(false);\r\n  // const handleClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    traerProfesor();\r\n    getScreams();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.divMain}>\r\n      <CssBaseline />\r\n      \r\n      <main className={classes.main}>\r\n      <Grid className={classes.gridTotal} spacing={0}>\r\n        {/* <Grid xs></Grid> */}\r\n\r\n        <Grid>\r\n          <Grid className={classes.gridArriba}>\r\n            <Grid>\r\n              <Button\r\n                component={Link}\r\n                to={\"/buscar\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled\r\n              >\r\n                Buscar personas\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs className={classes.gridMedio}></Grid>\r\n\r\n            <Grid>\r\n              <Button\r\n                component={Link}\r\n                to={\"/buscar-un-mentor\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                Buscar un mentor\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid align=\"start\" className={classes.publicacionesContainer}>\r\n            <CrearPublicacion />\r\n\r\n            {screams && (\r\n              <div>\r\n                {screams.map((scream) => (\r\n                  <Publicacion\r\n                    screamId={scream.id}\r\n                    imageURL={scream.imageURL}\r\n                    name={scream.name}\r\n                    imagen=\"https://firebasestorage.googleapis.com/v0/b/izily-test.appspot.com/o/publicacionImages%2Fproblema1.jpeg?alt=media&token=f4e69610-db14-4e2d-a5fa-b97bae16daec\"\r\n                    date={scream.date}\r\n                    content={scream.content}\r\n                    interesados={scream.interesados}\r\n                    comentarios={scream.comentarios}\r\n                    numeroDeComentarios={scream.numeroDeComentarios}\r\n                    tag={\r\n                      <Chip\r\n                        //Soy Jhomar\r\n                        className={classes.etiqueta2}\r\n                        label={scream.label}\r\n                      />\r\n                    }\r\n                    children={screams.comentarios && screams.comentarios.map((comentarios) => (\r\n                      <Comentario\r\n                        nameComent={comentarios.name}\r\n                        contentComent={comentarios.bodyComent}\r\n                        dateComent={comentarios.date}\r\n                        imageURLComent={comentarios.imageURL}\r\n                        loginidComent={comentarios.loginid}\r\n                        idPerfilComent={comentarios.idPerfil}\r\n                      />\r\n                    ))}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Grid xs></Grid> */}\r\n      </Grid>\r\n      </main>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        anchor=\"right\"\r\n      >\r\n        <h1 style={{color:\"#3493C2\", textAlign:\"center\"}}>\r\n          Gracias por apoyar el proyecto Izily :D\r\n        </h1>\r\n        <p>\r\n          Estamos trabajando para que este sea un mejor lugar para aprender.\r\n        </p>\r\n        <p>\r\n            Síguenos en Facebook para enterarte de los avances de Izily.\r\n          </p>\r\n        <div style={{display:\"flex\", alignItems:\"center\", gap:\"10px\"}}>\r\n          <Button\r\n            target=\"_blank\"\r\n            href={\"https://www.facebook.com/Izily-102740731946306/\"}\r\n            className={classes.buttonLogo}\r\n          >\r\n            <FacebookIcon className={classes.FB} />\r\n          </Button>\r\n          <Button\r\n            target=\"_blank\"\r\n            href={\"https://www.linkedin.com/company/izilype/about/\"}\r\n            className={classes.buttonLogo}\r\n          >\r\n            <LinkedInIcon className={classes.Li} />\r\n          </Button>\r\n          \r\n        </div>\r\n        <p>También puedes contactarnos a nuestro correo institucional:</p>\r\n        <p> aprendeizily@gmail.com</p>\r\n\r\n        \r\n        \r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Perfil.js",["169","170","171","172","173","174","175","176","177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles, useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { db } from \"../firebase\";\r\n// import { storage } from \"../firebase\";\r\nimport Profesor from \"../components/ProfesorPerfil\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\n// import LanguageIcon from \"@material-ui/icons/Language\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Calificacion from \"../components/Calificacion\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n\r\n  seccion1: {\r\n    margin: 0,\r\n    paddingTop: 10,\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  gridcontainer: {\r\n    width: \"100%\",\r\n\r\n    borderBottom: \"1px solid #C4C4C4\",\r\n  },\r\n\r\n  gridprofesor: {\r\n    minWidth: \"377px\",\r\n  },\r\n  griddatos: {\r\n    minWidth: \"390px\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  titlePresentacion: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginTop: \"0px\",\r\n    marginBottom: \"-5px\",\r\n    width: \"377px\",\r\n  },\r\n\r\n  titlePresentacion_text: {\r\n    margin: 0,\r\n    marginLeft: \"2px\",\r\n    // marginTop:\"0px\",\r\n    fontSize: \"15px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  paperPresentacion: {\r\n    width: \"377px\",\r\n    height: \"90px\",\r\n    overflow: \"auto\",\r\n    borderRadius: \"10px\",\r\n    padding: \"3px 8px 8px 8px\",\r\n    margin: \"15px 0px 10px 0px\",\r\n  },\r\n\r\n  etiquetasContainer: {\r\n    display: \"flex\",\r\n    alignContent: \"start\",\r\n    flexWrap: \"wrap\",\r\n    width: \"380px\",\r\n    height: \"120px\",\r\n    paddingBottom: \"0px\",\r\n    overflow: \"auto\",\r\n    marginLeft: \"-25px\",\r\n    marginTop: \"-10px\",\r\n\r\n    borderRadius: \"10px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  TabPanel: {\r\n    padding: \"0px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  categories: {\r\n    background: \"white\",\r\n    color: \"black\",\r\n    paddingBottom: \"0px\",\r\n  },\r\n\r\n  categoriesAppBar: {\r\n    marginBottom: \"-10px\",\r\n  },\r\n\r\n  categorie3: {\r\n    width: \"fullWidht\",\r\n  },\r\n\r\n  etiqueta0: {\r\n    margin: \"4px\",\r\n    background: \"#51B852\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta1: {\r\n    margin: \"4px\",\r\n    background: \"#3493C2\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  etiqueta2: {\r\n    margin: \"4px\",\r\n    background: \"#8F55A0\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n\r\n  root: {\r\n    //flexGrow: 1,\r\n    width: \"377px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.0)\",\r\n  },\r\n\r\n  buttonPerfil: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"11px\",\r\n    height: \"25px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n\r\n  buttonConvertirmeProfesor: {\r\n    background: \"white\",\r\n    color: \"#3493C2\",\r\n    marginTop: \"10px\",\r\n    border: \"1px solid #3493C2\",\r\n    fontSize: \"15px\",\r\n    height: \"70px\",\r\n    width: \"220px\",\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#DAF1FC\",\r\n    },\r\n  },\r\n\r\n  buttonContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"-10px\",\r\n    alignItems: \"center\",\r\n    width: \"370px\",\r\n    paddingLeft: \"5px\",\r\n  },\r\n\r\n  idioms: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: \"10px\",\r\n  },\r\n\r\n  idiomsContainer: {\r\n    width: \"380px\",\r\n  },\r\n\r\n  seccion2: {\r\n    marginTop: \"40px\",\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n//termina cosas de la tabla\r\n\r\nfunction Perfil() {\r\n  const GreenSwitch = withStyles({\r\n    switchBase: {\r\n      color: \"grey\",\r\n      \"&$checked\": {\r\n        color: \"#99CC42\",\r\n      },\r\n      \"&$checked + $track\": {\r\n        backgroundColor: \"#99CC42\",\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const { usuarioActual } = useAuth();\r\n  const [error, setError] = useState();\r\n  const [value, setValue] = React.useState(0);\r\n  const [carga, guardarCarga] = useState(false);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const { profesorId } = useParams();\r\n  const [profesor, setProfesor] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const traerProfesor = async () => {\r\n    const profesorInfo = db.collection(\"usuarios\").doc(profesorId);\r\n    const doc = await profesorInfo.get();\r\n    if (doc.exists) {\r\n      setProfesor({ ...doc.data(), id: doc.id });\r\n    }\r\n  };\r\n\r\n  const calendly = () => {\r\n    window.Calendly.initPopupWidget({ url: `${profesor.calendly}` });\r\n    return false;\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesor();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setState();\r\n  // }, [profesor.disponible]);\r\n\r\n  useEffect(() => {\r\n    const organizationid =\r\n      \"https://api.calendly.com/organizations/CFEFXIJXXUT225N7\";\r\n    const client = axios.create({\r\n      baseURL: \"https://api.calendly.com\",\r\n      timeout: 3000,\r\n      headers: {\r\n        Authorization: \"Bearer v6PBAXkfspGMWnC7_hTaRfiw5vvHRHZnX9eB51frgYY\",\r\n      },\r\n    });\r\n    client\r\n      .get(\r\n        `/scheduled_events?count=25&organization=${organizationid}&status=active`\r\n      )\r\n      .then(function (response) {\r\n        const uris = response.data.collection.map((event) => {\r\n          return event.uri;\r\n        });\r\n        uris.map((uri) => {\r\n          client.get(`${uri}/invitees`).then((uriResponse) => {});\r\n        });\r\n        setEvents(response.data.collection);\r\n      })\r\n      .catch(function (error) {});\r\n  }, []);\r\n\r\n  const [state, setState] = React.useState({\r\n    // checked: profesor.disponible,\r\n  });\r\n\r\n  function updateDisponible(value) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      disponible: value,\r\n    });\r\n  }\r\n\r\n\r\n  const handleChangeSwitch = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n\r\n    const promises = [];\r\n    guardarCarga(true);\r\n    setError(\"\");\r\n\r\n    if (profesor.disponible === false) {\r\n      promises.push(updateDisponible(true));\r\n    } else {\r\n      promises.push(updateDisponible(false));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        // history.push(`/perfil/${profesor.id}`)\r\n        // window.location.reload();\r\n      })\r\n      .catch(() => {\r\n        setError(\"Ocurrió un error al actualizar la cuenta\");\r\n      })\r\n      .finally(() => {\r\n        guardarCarga(false);\r\n      });\r\n  };\r\n\r\n  async function convertToMentor() {\r\n    setError();\r\n    try {\r\n      history.push(`/convertirme-en-mentor`);\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {profesor && (\r\n        <div className={classes.seccion1}>\r\n          <Grid\r\n            container\r\n            className={classes.gridcontainer}\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n            alignContent=\"center\"\r\n            spacing={4}\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              className={classes.gridprofesor}\r\n              alignContent=\"center\"\r\n              justify=\"center\"\r\n              align=\"center\"\r\n            >\r\n              <Profesor profesor={profesor} />\r\n            </Grid>\r\n\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              //alignItems=\"start\"\r\n              align=\"center\"\r\n              alignContent=\"center\"\r\n              justify=\"center\"\r\n              className={classes.griddatos}\r\n            >\r\n              <div className={classes.titlePresentacion}>\r\n                <p className={classes.titlePresentacion_text}>Acerca de mi:</p>\r\n\r\n                {usuarioActual?.uid !== profesor.loginid ? (\r\n                  <>\r\n                    {profesor?.esProfesor === true &&\r\n                    profesor?.disponible === true ? (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        target=\"_blank\"\r\n                        // href={profesor.calendly}\r\n                        color=\"inherit\"\r\n                        className={classes.buttonPerfil}\r\n                        onClick={calendly}\r\n                        startIcon={<EventAvailableIcon />}\r\n                        disableElevation=\"true\"\r\n                      >\r\n                        Agendar Mentoría\r\n                      </Button>\r\n                    ) : (\r\n                      <p></p>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    target=\"_blank\"\r\n                    href=\"https://calendar.google.com/calendar/\"\r\n                    color=\"inherit\"\r\n                    className={classes.buttonPerfil}\r\n                    // onClick={calendly}\r\n                    startIcon={<EventAvailableIcon />}\r\n                    disableElevation=\"true\"\r\n                  >\r\n                    Mi Google Calendar\r\n                  </Button>\r\n                )}\r\n              </div>\r\n\r\n              <Paper\r\n                className={classes.paperPresentacion}\r\n                overflow=\"scroll\"\r\n                align=\"start\"\r\n                variant=\"outlined\"\r\n                square\r\n                children={profesor.presentacion}\r\n              />\r\n\r\n              {profesor?.esProfesor === true ? (\r\n                <div className={classes.root}>\r\n                  <AppBar\r\n                    elevation={1}\r\n                    className={classes.categoriesAppBar}\r\n                    position=\"static\"\r\n                  >\r\n                    <Tabs\r\n                      className={classes.categories}\r\n                      variant=\"fullWidth\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                      aria-label=\"full width tabs example\"\r\n                    >\r\n                      <Tab\r\n                        className={classes.categorie1}\r\n                        disableRipple=\"true\"\r\n                        label=\"Escolar\"\r\n                        {...a11yProps(0)}\r\n                      />\r\n                      <Tab\r\n                        className={classes.categorie2}\r\n                        disableRipple=\"true\"\r\n                        label=\"Preuniv.\"\r\n                        {...a11yProps(1)}\r\n                      />\r\n                      <Tab\r\n                        className={classes.categorie3}\r\n                        disableRipple=\"true\"\r\n                        label=\"Universitario\"\r\n                        {...a11yProps(2)}\r\n                      />\r\n                    </Tabs>\r\n                  </AppBar>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={0}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"0\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta0}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={1}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"1\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta1}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel\r\n                    className={classes.TabPanel}\r\n                    value={value}\r\n                    index={2}\r\n                  >\r\n                    <Paper\r\n                      className={classes.etiquetasContainer}\r\n                      overflow=\"scroll\"\r\n                      variant=\"outlined\"\r\n                      square\r\n                      children={profesor.cursos\r\n                        .filter((cursos) => cursos.numberNivel == \"2\")\r\n                        .map((cursos) => (\r\n                          <Chip\r\n                            className={classes.etiqueta2}\r\n                            label={cursos.nombre}\r\n                          />\r\n                        ))}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n              ) : (\r\n                <p></p>\r\n              )}\r\n\r\n              <div className={classes.buttonContainer}>\r\n                {usuarioActual?.uid === profesor.loginid ? (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-evenly\",\r\n                      marginTop: \"0px\",\r\n                    }}\r\n                  >\r\n                    {profesor?.esProfesor === true ? (\r\n                      <>\r\n                        <FormControlLabel\r\n                          control={\r\n                            <GreenSwitch\r\n                              size=\"small\"\r\n                              checked={profesor.disponible}\r\n                              onChange={handleChangeSwitch}\r\n                              name=\"checked\"\r\n                            />\r\n                          }\r\n                          label=\"Disponible\"\r\n                        />\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<PlayArrowIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Video\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          onClick={convertToMentor}\r\n                          className={classes.buttonConvertirmeProfesor}\r\n                          startIcon={\r\n                            <img\r\n                              style={{\r\n                                marginLeft: \"5px\",\r\n                                height: \"45px\",\r\n                                width: \"auto\",\r\n                              }}\r\n                              src=\"https://firebasestorage.googleapis.com/v0/b/izily-test.appspot.com/o/icons%2FConvertirmeEnProfesor.png?alt=media&token=a45096cb-1a3b-4134-811c-aaba4103528f\"\r\n                            />\r\n                          }\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Convertirme en Mentor\r\n                        </Button>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      width: \"100%\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"space-evenly\",\r\n                      marginTop: \"0px\",\r\n                    }}\r\n                  >\r\n                    {profesor.esProfesor === true ? (\r\n                      <>\r\n                        <Calificacion />\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<PlayArrowIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Video\r\n                        </Button>\r\n                        <Button\r\n                          disabled\r\n                          variant=\"contained\"\r\n                          color=\"inherit\"\r\n                          size=\"small\"\r\n                          className={classes.buttonPerfil}\r\n                          startIcon={<QuestionAnswerIcon />}\r\n                          disableElevation=\"true\"\r\n                        >\r\n                          Contactar\r\n                        </Button>\r\n                      </>\r\n                    ) : (\r\n                      <Button\r\n                        disabled\r\n                        variant=\"contained\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        className={classes.buttonPerfil}\r\n                        startIcon={<PeopleIcon />}\r\n                        disableElevation=\"true\"\r\n                      >\r\n                        Contactar\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* <div className={classes.idiomsContainer}>\r\n                <Typography\r\n                  className={classes.idioms}\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                >\r\n                  <LanguageIcon fontSize=\"small\" /> Español, Portugués.\r\n                </Typography>\r\n              </div> */}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n      {!profesor && (\r\n        // <div>\r\n        //   <h1>Cargando...</h1>\r\n        // </div>\r\n        <Backdrop\r\n          className={classes.backdrop}\r\n          open={open}\r\n          onClick={handleClose}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Perfil;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\EditProfile.js",["179","180","181","182"],"import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { storage } from \"../firebase\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    marginTop: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    width: \"300px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  subContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    margin: 0,\r\n    justifyContent: \"center\",\r\n  },\r\n  subSubContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  Input: {\r\n    width: \"400px\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  cancelar: {\r\n    margin: \"0px 0px 20px 0px\",\r\n    fontSize: \"15px\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  avatar: {\r\n    height: 150,\r\n    width: 150,\r\n    borderRadius: \"50%\",\r\n    AlignItems: \"center\",\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    fontSize:\"110px\",\r\n  },\r\n  changePhotoContainer: {\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n  },\r\n  \r\n  inputFileContent: {\r\n    display:\"flex\",\r\n    justifyItems:\"center\",\r\n    alignItems:\"center\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius:\"50px\",\r\n    padding:\"10px\",\r\n    marginBottom:\"10px\",\r\n  },\r\n  boton: {\r\n    marginBottom:\"10px\",\r\n    marginTop:\"5px\",\r\n    height:\"30px\",\r\n    border: \"1px solid grey\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function EditProfile() {\r\n  const classes = useStyles();\r\n  const emailRef = useRef();\r\n  const contraseñaRef = useRef();\r\n  const confirmContraseñaRef = useRef();\r\n  const nombreRef = useRef();\r\n  const aboutMeRef = useRef();\r\n  const descriptionRef = useRef();\r\n  const calendlyRef = useRef();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { usuarioActual, updatePassword, updateEmail } = useAuth();\r\n  const [error, guardarError] = useState();\r\n  const [carga, guardarCarga] = useState(false);\r\n  const [profesor, setProfesor] = useState(null);\r\n  const history = useHistory();\r\n  const [fileUrl, setFileUrl] = useState(\"-\");\r\n\r\n\r\n  // Get current user with database values and set on useState\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  //Functions to update individual values\r\n\r\n  function updateName(name) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      nombre: name,\r\n    });\r\n  }\r\n\r\n  function updateAboutMe(presentation) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      presentacion: presentation,\r\n    });\r\n  }\r\n\r\n  function updateDescription(description) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      descripcion: description,\r\n    });\r\n  }\r\n\r\n  function updateCalendly(calendly) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      calendly: calendly,\r\n    });\r\n  }\r\n\r\n  // Get promises and execute the functions\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (contraseñaRef.current.value !== confirmContraseñaRef.current.value) {\r\n      return guardarError(\"Las contraseñas no coinciden\");\r\n    }\r\n\r\n    const promises = [];\r\n    guardarCarga(true);\r\n    guardarError(\"\");\r\n\r\n    if (emailRef.current.value !== usuarioActual.email) {\r\n      promises.push(updateEmail(emailRef.current.value));\r\n    }\r\n    if (contraseñaRef.current.value) {\r\n      promises.push(updatePassword(contraseñaRef.current.value));\r\n    }\r\n    if (nombreRef.current.value !== profesor.nombre) {\r\n      promises.push(updateName(nombreRef.current.value));\r\n    }\r\n    if (aboutMeRef.current.value !== profesor.presentacion) {\r\n      promises.push(updateAboutMe(aboutMeRef.current.value));\r\n    }\r\n    if (descriptionRef.current.value !== profesor.descripcion) {\r\n      promises.push(updateDescription(descriptionRef.current.value));\r\n    }\r\n    if (calendlyRef.current.value !== profesor.calendly) {\r\n      promises.push(updateCalendly(calendlyRef.current.value));\r\n    }\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        setOpen(true);\r\n      })\r\n      .catch(() => {\r\n        guardarError(\"Ocurrió un error al actualizar la cuenta\");\r\n      })\r\n      .finally(() => {\r\n        guardarCarga(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  async function goInicio() {\r\n    guardarError();\r\n    try {\r\n      history.push(`/inicio`);\r\n      window.location.reload();\r\n    } catch {\r\n      guardarError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  async function actualizar() {\r\n    guardarError();\r\n    try {\r\n      window.location.reload();\r\n    } catch {\r\n      guardarError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const handleFileChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    const storageRef = storage.ref();\r\n    const fileRef = storageRef.child(`users/${profesor.loginid}/${file.name}`);\r\n    await fileRef.put(file);\r\n    setFileUrl(await fileRef.getDownloadURL());\r\n  };\r\n\r\n  const handleUpdateClick = async (e) => {\r\n    e.preventDefault();\r\n    await db\r\n      .collection(\"usuarios\")\r\n      .doc(`${profesor.id}`)\r\n      .update({\r\n        imageURL: fileUrl,\r\n      })\r\n      .then(() => window.location.reload())\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Editar perfil\r\n        </Typography>\r\n        {error && (\r\n          <Alert variant=\"filled\" severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <Divider />\r\n        {usuarioActual?.uid == profesor?.loginid && (\r\n          <div className={classes.changePhotoContainer}>\r\n            <Avatar className={classes.avatar} alt={profesor.nombre} src={profesor.imageURL} /> \r\n            {fileUrl == \"-\" ? (\r\n              <div className={classes.inputFileContent}>\r\n              <input className={classes.inputFile} accept=\".jpg,.jpeg,.png\" type=\"file\" onChange={handleFileChange}/>\r\n              </div>\r\n            ):(\r\n              <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n                Tu foto esta lista para subir.\r\n                <Button className={classes.boton} onClick={handleUpdateClick}>Subir foto</Button>\r\n              </div> \r\n            )}\r\n          </div>\r\n        )}\r\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n          <Grid style={{ marginTop: \"-20px\", width: \"90%\" }}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid container className={classes.subContainer} spacing={2}>\r\n            <Grid item className={classes.subSubContainer}>\r\n              {/* <Grid > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                defaultValue={usuarioActual.email}\r\n                className={classes.Input}\r\n                id=\"email\"\r\n                inputRef={emailRef}\r\n                label=\"Correo Electrónico\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n              {/* </Grid> */}\r\n              {/* <Grid  > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.Input}\r\n                name=\"password\"\r\n                label=\"Contraseña\"\r\n                defaultValue={null}\r\n                inputRef={contraseñaRef}\r\n                placeholder=\"Dejar en blanco para mantener la contaseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                //autoComplete=\"current-password\"\r\n              />\r\n              {/* </Grid> */}\r\n              {/* <Grid  > */}\r\n              <TextField\r\n                variant=\"outlined\"\r\n                className={classes.Input}\r\n                name=\"confirm-password\"\r\n                label=\"Confirmar contraseña\"\r\n                inputRef={confirmContraseñaRef}\r\n                placeholder=\"Dejar en blanco para mantener la contaseña\"\r\n                type=\"password\"\r\n                id=\"confirm-password\"\r\n                autoComplete=\"confirm-password\"\r\n              />\r\n              {/* </Grid> */}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"name\"\r\n                  label=\"Nombre y Apellido\"\r\n                  defaultValue={profesor.nombre}\r\n                  inputRef={nombreRef}\r\n                  id=\"rename\"\r\n                  autoComplete=\"current-name\"\r\n                />\r\n                // </Grid>\r\n              )}\r\n            </Grid>\r\n            <Grid item className={classes.subSubContainer}>\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"description\"\r\n                  label=\"Descripción\"\r\n                  defaultValue={profesor.descripcion}\r\n                  inputRef={descriptionRef}\r\n                  id=\"description\"\r\n                  autoComplete=\"current-description\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"aboutMe\"\r\n                  label=\"Acerca de mí\"\r\n                  defaultValue={profesor.presentacion}\r\n                  inputRef={aboutMeRef}\r\n                  id=\"aboutMe\"\r\n                  autoComplete=\"current-aboutMe\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n              {profesor && (\r\n                // <Grid >\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  className={classes.Input}\r\n                  name=\"calendly\"\r\n                  label=\"Link de Calendly\"\r\n                  defaultValue={profesor.calendly}\r\n                  inputRef={calendlyRef}\r\n                  id=\"calendly\"\r\n                  autoComplete=\"current-calendly\"\r\n                  multiline\r\n                />\r\n                // </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n              ¡Tus datos fueron guardados con éxito!\r\n            </Alert>\r\n          </Snackbar>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            className={classes.submit}\r\n            disabled={carga}\r\n          >\r\n            Guardar\r\n          </Button>\r\n          <Grid container justify=\"space-between\" style={{ width: \"100%\" }}>\r\n            <p\r\n              className={classes.cancelar}\r\n              variante=\"link\"\r\n              onClick={actualizar}\r\n            >\r\n              {\" \"}\r\n              Actualiza para poder ver los cambios\r\n            </p>\r\n            <p className={classes.cancelar} variante=\"link\" onClick={goInicio}>\r\n              Volver al inicio\r\n            </p>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\ConvertirmeEnMentor.js",["183","184","185"],"import React from \"react\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  boton: {\r\n    margin: \"0px 0px 40px 0px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"40px\",\r\n    fontSize: \"12px\",\r\n  },\r\n  root: {\r\n    padding: \"20px\",\r\n    maxWidth: \"900px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  title: {\r\n    marginTop: 0,\r\n    marginLeft: \"20px\",\r\n  },\r\n  subTitle: {\r\n    fontSize: \"18px\",\r\n    marginLeft: \"20px\",\r\n  },\r\n  preguntaContainer: {\r\n    margin: \"30px 20px 30px 20px\",\r\n  },\r\n  numeroPregunta: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  check: {\r\n    color: \"rgba(52, 147, 194, 1)\",\r\n  },\r\n  TextField: {\r\n    marginTop: \"10px\",\r\n    width: \"350px\",\r\n  },\r\n}));\r\n\r\nexport default function AcercaDeIzily() {\r\n  const defaultTextAnswers = {\r\n    answer6: \"\",\r\n    answer7: \"\",\r\n    answer8: \"\",\r\n    answer9: \"\",\r\n    answer10: \"\",\r\n    answer11: \"\",\r\n    answer12: \"\",\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState();\r\n  const history = useHistory();\r\n  const [textAnswers, setTextAnswers] = useState(defaultTextAnswers);\r\n  const [profesor, setProfesor] = useState(null);\r\n  const { usuarioActual } = useAuth();\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleInputChange = (text) => {\r\n    if (text && profesor) {\r\n      const { name, value } = text.target;\r\n\r\n      setTextAnswers({\r\n        ...textAnswers,\r\n        [name]: value,\r\n      });\r\n    } else {\r\n      console.log(\"error\");\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    if (profesor.esProfesor === false) {\r\n        updateEsProfesor(true);\r\n        history.push(`/perfil/${profesor.id}`);\r\n      }\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  const preguntas = [\r\n    {\r\n      pregunta: \"Marca la habilidad que más te define:\",\r\n      respuestas: [\r\n        { respuestaText: \"Liderazgo\", puntaje: 1 },\r\n        { respuestaText: \"Empatía\", puntaje: 1 },\r\n        { respuestaText: \"Trabajo en equipo\", puntaje: 1 },\r\n        { respuestaText: \"Creatividad\", puntaje: 1 },\r\n        { respuestaText: \"Resolución de conflictos\", puntaje: 1 },\r\n        { respuestaText: \"Comunicación acertiva\", puntaje: 1 },\r\n        { respuestaText: \"Planificación y gestion del tiempo\", puntaje: 1 },\r\n      ],\r\n    },\r\n    {\r\n      pregunta: \"Consideras que un(a) mentor(a):\",\r\n      respuestas: [\r\n        {\r\n          respuestaText:\r\n            \"Propone y facilita el aprendizaje en el desarrollo de la clase\",\r\n          puntaje: 1,\r\n        },\r\n        { respuestaText: \"Brinda conocimiento y teorías\", puntaje: 1 },\r\n        {\r\n          respuestaText: \"Despierta el interés en los estudiantes\",\r\n          puntaje: 1,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      pregunta: \"¿En qué idiomas podrías brindar una mentoría?\",\r\n      respuestas: [\r\n        { respuestaText: \"Español\", puntaje: 1 },\r\n        { respuestaText: \"Inglés\", puntaje: 1 },\r\n        { respuestaText: \"Portugués\", puntaje: 1 },\r\n        { respuestaText: \"Francés\", puntaje: 1 },\r\n        { respuestaText: \"Otro\", puntaje: 1 },\r\n      ],\r\n    },\r\n    {\r\n      pregunta: \"¿Manejas el Lenguaje de Señas?\",\r\n      respuestas: [\r\n        { respuestaText: \"No\", puntaje: 1 },\r\n        { respuestaText: \"Un poco\", puntaje: 1 },\r\n        { respuestaText: \"A la perfección\", puntaje: 1 },\r\n      ],\r\n    },\r\n    {\r\n      pregunta: \"¿Qué es más importante para ti?\",\r\n      respuestas: [\r\n        {\r\n          respuestaText: \"Terminar con el contenido de tu mentoría programada\",\r\n          puntaje: 1,\r\n        },\r\n        {\r\n          respuestaText:\r\n            \"Gestionar y promover el aprenizaje en tus estudiantes\",\r\n          puntaje: 1,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      pregunta: \"¿Qué amas hacer?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta: \"¿De qué estás orgulloso(a)?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta: \"¿Qué expectativas tienes en esta propuesta educativa?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta:\r\n        \"Basándose en su experiencia ¿Qué puede aportar a sus estudiantes?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta: \"¿Qué expectativas tienes en esta propuesta educativa?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta:\r\n        \"Sabemos que el mundo globalizado cambia constantemente ¿Qué opina al respecto?\",\r\n      respuestas: [],\r\n    },\r\n    {\r\n      pregunta:\r\n        \"En la actualidad muchos temas han pasado a formar parte de la normalidad ¿Eres capaz de compartir y debatir, sin ser invasivos en las creencias ideológicas de los estudiantes?\",\r\n      respuestas: [],\r\n    },\r\n  ];\r\n\r\n  function updateEsProfesor(value) {\r\n    db.collection(\"usuarios\").doc(`${profesor.id}`).update({\r\n      esProfesor: value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {profesor && (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {profesor.esProfesor == false ? (\r\n            <Grid className={classes.root}>\r\n              <h1 className={classes.title}>\r\n                ¡Genial! Estás a punto de convertirte en un(a) mentor(a) de\r\n                Izily :D\r\n              </h1>\r\n              <p className={classes.subTitle}>\r\n                Antes de dar esta importante paso para ti y para Izily, tenemos\r\n                algunas preguntas para ti:\r\n              </p>\r\n\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 1:</span>\r\n                  {preguntas[0].pregunta}\r\n                </div>\r\n                <div>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {preguntas[0].respuestas.map((respuesta) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Radio color=\"none\" className={classes.check} />\r\n                          }\r\n                          value={respuesta.respuestaText}\r\n                          label={respuesta.respuestaText}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 2:</span>\r\n                  {preguntas[1].pregunta}\r\n                </div>\r\n                <div>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {preguntas[1].respuestas.map((respuesta) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Radio color=\"none\" className={classes.check} />\r\n                          }\r\n                          value={respuesta.respuestaText}\r\n                          label={respuesta.respuestaText}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 3:</span>\r\n                  {preguntas[2].pregunta}\r\n                </div>\r\n                <div>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {preguntas[2].respuestas.map((respuesta) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox color=\"none\" className={classes.check} />\r\n                          }\r\n                          value={respuesta.respuestaText}\r\n                          label={respuesta.respuestaText}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 4:</span>\r\n                  {preguntas[3].pregunta}\r\n                </div>\r\n                <div>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {preguntas[3].respuestas.map((respuesta) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Radio color=\"none\" className={classes.check} />\r\n                          }\r\n                          value={respuesta.respuestaText}\r\n                          label={respuesta.respuestaText}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 5:</span>\r\n                  {preguntas[4].pregunta}\r\n                </div>\r\n                <div>\r\n                  <FormControl component=\"fieldset\">\r\n                    <RadioGroup\r\n                      row\r\n                      aria-label=\"gender\"\r\n                      value={value}\r\n                      onChange={handleChange}\r\n                    >\r\n                      {preguntas[4].respuestas.map((respuesta) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Radio color=\"none\" className={classes.check} />\r\n                          }\r\n                          value={respuesta.respuestaText}\r\n                          label={respuesta.respuestaText}\r\n                        />\r\n                      ))}\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 6:</span>\r\n                  {preguntas[5].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField} \r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer6\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 7:</span>\r\n                  {preguntas[6].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer7\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 8:</span>\r\n                  {preguntas[7].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer8\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 9:</span>\r\n                  {preguntas[8].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer9\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 10:</span>\r\n                  {preguntas[9].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer10\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 11:</span>\r\n                  {preguntas[10].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer11\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid className={classes.preguntaContainer}>\r\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                  <span className={classes.numeroPregunta}>Pregunta 12:</span>\r\n                  {preguntas[11].pregunta}\r\n                </div>\r\n                <TextField\r\n                  className={classes.TextField}\r\n                   \r\n                  placeholder=\"Responder brevemente\"\r\n                  multiline\r\n                  name=\"answer12\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleClick}\r\n                  className={classes.boton}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                >\r\n                  Convertirme en Mentor\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <p>Felicidades</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\BuscarUsuarios.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Profesores.js",["186","187","188","189","190","191","192"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Profesor from \"../components/Profesor\";\r\nimport { db } from \"../firebase\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    padding: 0,\r\n  },\r\n\r\n}))(MuiAccordionDetails);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    marginTop: \"3rem\",\r\n    //paddingTop:\"20px\",\r\n    overflow: \"auto\",\r\n  },\r\n  // necessary for content to be below app bar\r\n\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    justifyContent: \"center\",\r\n  },\r\n  Buscar: {\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\",\r\n    marginLeft: \"10px\",\r\n    width: \"200px\",\r\n  },\r\n\r\n  main: {\r\n    background: \"white\",\r\n    overflow: \"auto\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n    padding: \"15px, 0, 10px, 15px\",\r\n  },\r\n  gridContainer: {\r\n    paddingTop: 15,\r\n  },\r\n}));\r\n\r\nexport default function Profesores() {\r\n  const classes = useStyles();\r\n  // const [error, setError] = useState(\"\");\r\n  const [profesores, guardarProfesores] = useState([]);\r\n  const [especialidades, guardarEspecialidades] = useState([]);\r\n  const [etiquetas, guardarEtiquetas] = useState([0]);\r\n  const [profesoresFiltrados, guardarProfesoresFiltrados] = useState([]);\r\n  // const { logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [expanded, setExpanded] = React.useState('panel');\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const traerProfesores = () => {\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"esProfesor\", \"==\", true)\r\n      .where(\"disponible\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        guardarProfesores(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const seleccionarEtiquetas = (EspecialidadId) => () => {\r\n    const currentIndex = etiquetas.indexOf(EspecialidadId);\r\n    const etiquetasSeleccionadas = [...etiquetas];\r\n    if (currentIndex === -1) {\r\n      etiquetasSeleccionadas.push(EspecialidadId);\r\n    } else {\r\n      etiquetasSeleccionadas.splice(currentIndex, 1);\r\n    }\r\n    guardarEtiquetas(etiquetasSeleccionadas);\r\n  };\r\n\r\n  const filtrarProfesores = (terminoDeBusqueda) => {\r\n    let etiquetasSeleccionadas = [...etiquetas];\r\n    etiquetasSeleccionadas = etiquetasSeleccionadas.splice(1, etiquetas.length);\r\n    const nuevosProfesoresFiltrados = profesores.filter((profesor) => {\r\n      // Verificar Nombre\r\n      const nombreProfesor = profesor.nombre.toLowerCase();\r\n      const tieneNombreValido = nombreProfesor.includes(terminoDeBusqueda);\r\n\r\n      // Verificar Materia\r\n      const idsDeCursos = profesor.cursos.map((curso) => curso.id);\r\n      let tieneCursoValido = false;\r\n      idsDeCursos.forEach((idCurso) => {\r\n        tieneCursoValido =\r\n          tieneCursoValido || etiquetasSeleccionadas.includes(idCurso);\r\n      });\r\n\r\n      if (etiquetasSeleccionadas.length > 0)\r\n        return tieneNombreValido && tieneCursoValido;\r\n      return tieneNombreValido;\r\n    });\r\n    guardarProfesoresFiltrados(nuevosProfesoresFiltrados);\r\n  };\r\n  const filtrarProfesoresInput = (e) => {\r\n    const terminoDeBusqueda = e.currentTarget.value.toLowerCase();\r\n    filtrarProfesores(terminoDeBusqueda);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesores();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const especialidadesRef = db.collection(\"especialidades\");\r\n    const todasLasEspecialidades = [];\r\n    especialidadesRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        todasLasEspecialidades.push({ ...doc.data(), id: doc.id });\r\n      });\r\n    });\r\n    guardarEspecialidades(todasLasEspecialidades);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    guardarProfesoresFiltrados(profesores);\r\n  }, [profesores]);\r\n\r\n  useEffect(() => {\r\n    filtrarProfesores(\"\");\r\n  }, [etiquetas]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n        // anchor=\"right\"\r\n      >\r\n        <div className={classes.drawerContainer}>\r\n          <FormControl\r\n            size=\"small\"\r\n            //className={clsx(classes.margin, classes.textField)}\r\n            className={classes.Buscar}\r\n            variant=\"outlined\"\r\n          >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Buscar nombre:\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type=\"text\"\r\n              onChange={filtrarProfesoresInput}\r\n              labelWidth={120}\r\n            />\r\n          </FormControl>\r\n          <Divider />\r\n\r\n          <Accordion square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary style={{background:\"rgba(81, 184, 82, 0.2)\",}} aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography style={{ color:\"rgba(81, 184, 82, 1)\", fontWeight:\"bold\",}}>Escolar</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n\r\n\r\n        {especialidades\r\n          .filter((especialidad) => especialidad.numberNivel == \"0\")\r\n          .map((especialidad) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"rgba(81, 184, 82, 1)\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n        ))}\r\n          \r\n  \r\n\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary style={{background:\"rgba(52, 147, 194, 0.2)\",}} aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n          <Typography style={{ color:\"rgba(52, 147, 194, 1)\", fontWeight:\"bold\",}}>Preuniversitario</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          \r\n        {especialidades\r\n          .filter((especialidad) => especialidad.numberNivel == \"1\")\r\n          .map((especialidad) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"rgba(52, 147, 194, 1)\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n        ))}\r\n\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary style={{background:\"rgba(143, 85, 160, 0.2)\",}} aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n          <Typography style={{ color:\"rgba(143, 85, 160, 1)\", fontWeight:\"bold\",}} >Universitario</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          \r\n        {especialidades\r\n          .filter((especialidad) => especialidad.numberNivel == \"2\")\r\n          .map((especialidad) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  \r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"rgba(143, 85, 160, 1)\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n        ))\r\n        \r\n        }\r\n\r\n        </AccordionDetails>\r\n      </Accordion>\r\n          {/* <List>\r\n            {especialidades.map((especialidad, index) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"#3f51b5\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n            ))}\r\n          </List> */}\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Grid container clasName={classes.gridContainer} spacing={3}>\r\n          {profesoresFiltrados.map((profesor) => (\r\n            <Grid item align=\"center\" xs={12} sm={12} md={6} lg={4}>\r\n              <Profesor profesor={profesor} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\NotFound.jsx",["193"],"import React from \"react\";\r\nimport notfound from \"../assets/images/NotFound.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 20,\r\n    display: \"flex\",\r\n    justifyItems: \"center\",\r\n\r\n    //paddingTop:\"50px\",\r\n    //backgroundColor:\"red\",\r\n  },\r\n  gridcontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  gridimagen1: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  imagen1: {\r\n    width: \"50%\",\r\n    height: \"auto\",\r\n    //margin:\"40px\"\r\n  },\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"40px\",\r\n    fontSize: \"12px\",\r\n  },\r\n  gridtexto: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  h1: {\r\n    color: \"#3493C2\",\r\n    justify: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function NotFound() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container align=\"\" className={classes.gridcontainer}>\r\n        <Grid sm></Grid>\r\n        <Grid sm></Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={4} lg={4} className={classes.gridimagen1}>\r\n          <img src={notfound} className={classes.imagen1} alt=\"NotFound\" />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={5} md={5} lg={5} className={classes.gridtexto}>\r\n          <h1 className={classes.h1}>¡Uy, problemas en el paraiso!</h1>\r\n          <h2>No hemos podido encontrar la página que buscabas :(</h2>\r\n          <h3>\r\n            Incluso en Izily, estos casos son muy raros, tanto como que tu Crush\r\n            te haga caso.\r\n          </h3>\r\n          <h3>Mejor sigue estudiando :D</h3>\r\n          <Button\r\n            href=\"javascript:history.back()\"\r\n            className={classes.botones}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n          >\r\n            Volver atrás\r\n          </Button>\r\n        </Grid>\r\n        <Grid sm></Grid>\r\n        <Grid sm></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\containers\\Layout.jsx",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\CarouselLanding.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Feedback.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Comentario.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\ProfesorPerfil.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Publicacion.js",["194","195","196","197","198","199","200"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 550,\r\n    minWidth:\"100%\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  media: {\r\n    width:\"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'red',\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht:\"100px\",\r\n    color:\"black\",\r\n    fontSize:\"14px\",\r\n    // display: \"flex\",\r\n    // alignContent:\"start\",\r\n    //flexWrap: \"wrap\",\r\n    //hyphens: \"auto\",\r\n    //wordBreak:\"break-all\",\r\n    \r\n    \r\n  },\r\n  containerContent: {\r\n    paddingTop:\"0px\",\r\n    widht:\"100%\",\r\n  },\r\n  comentarioSContainer:{\r\n    padding:\"0px\",\r\n    margin:\"0px\",\r\n  },\r\n\r\n  comentariosP:{\r\n    marginRight:\"20px\", \r\n    marginTop:\"10px\",\r\n    marginBottom:\"10px\",\r\n    \"&:hover\":{\r\n      textDecoration:\"underline\",\r\n      cursor:\"pointer\",\r\n    },\r\n  },\r\n\r\n  interesadosP:{\r\n    marginLeft:\"20px\", \r\n    marginTop:\"10px\",\r\n    marginBottom:\"10px\",\r\n    \"&:hover\":{\r\n      cursor:\"default\",\r\n    },\r\n  },\r\n\r\n  CardHeader:{\r\n    paddingTop: \"15px\",\r\n    paddingLeft:\"15px\",\r\n  },\r\n\r\n  header:{\r\n    paddingRight:\"15px\",\r\n    display:\"flex\",\r\n    justifyContent:\"space-between\",\r\n    alignItems:\"center\",\r\n  },\r\n\r\n\r\n\r\n\r\n  rootCrearComentario: {\r\n    //maxWidth: 550,\r\n    width: \"100%\",\r\n    margin: \"0px 0px\",\r\n    border: \"0px\",\r\n    boxShadow: \"0px\",\r\n  },\r\n  \r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n  },\r\n  containerContentCrearComentario: {\r\n    padding: \"0px 10px\",\r\n    widht: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  IconosContainer: {\r\n    padding: \"0px 10px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  PublicarButton: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"12px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n\r\n  inputText: {\r\n    outline: \"none\",\r\n    resize: \"inherit\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"arial\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius: \"15px\",\r\n    width: \"100%\",\r\n    padding: \"10px 10px 10px 10px\",\r\n    boxShadow: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n\r\n}));\r\n\r\nexport default function RecipeReviewCard(props) {\r\n  const classes = useStyles();\r\n  const initialBody = {\r\n    content: '',\r\n    name: '',\r\n    date: '',\r\n    loginid: '',\r\n    imageURL: '',\r\n    idPerfil: '',\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [bodyComent, setBodyComent] = useState(initialBody);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  \r\n\r\n  const { usuarioActual } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n  const [screams, setScreams] = useState([\"2\"]);\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  const getScreams = () => {\r\n    const screamRef = db.collection(\"publicaciones\");\r\n    screamRef\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n          //console.log(doc.id, \" => \", doc.data());\r\n        });\r\n        //error\r\n        setScreams(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleInputChange = text => {\r\n    if(text && profesor){\r\n      const { name, value } = text.target;\r\n      setBodyComent({...bodyComent, [name]: value, \r\n              name: profesor.nombre, \r\n              loginid: profesor.loginid, \r\n              date: new Date().toLocaleDateString(), \r\n              imageURL: profesor.imageURL,\r\n              idPerfil: profesor.id,\r\n            });\r\n    }else{\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n\r\n  const handleClickHeart = () => {\r\n    \r\n  }\r\n\r\n  // const handleClick = async e => {\r\n  //   db.collection('publicaciones').doc(`${props.screamId}`).collection('coments').doc(`${props.comentId}`)\r\n  //   .add(bodyComent)\r\n  //   .then(()=>{\r\n  //     setBodyComent({...initialBody})\r\n  //   }).then(()=>{\r\n  //     history.push('/inicio');\r\n  //     window.location.reload();\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.log(error);\r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n    getScreams();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <div className={classes.header}>\r\n      <CardHeader\r\n        className={classes.CardHeader}\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} alt={props.name} src={props.imageURL} />\r\n        }\r\n        // action={\r\n        //   <IconButton aria-label=\"settings\">\r\n        //     <MoreVertIcon />\r\n        //   </IconButton>\r\n        // }\r\n        title={props.name}\r\n        subheader={props.date}\r\n      />\r\n      \r\n        {/* {props.tag} */}\r\n\r\n      </div>\r\n      \r\n      <CardContent className={classes.containerContent}>\r\n        <Typography className={classes.Content} \r\n          variant=\"body2\" color=\"textSecondary\" component=\"p\"\r\n        >\r\n          {props.content}\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        image={props.imagen}\r\n        title=\"image\"\r\n      /> */}\r\n      {/* <img\r\n          src={props?.imagen}\r\n          className={classes.media}\r\n          alt=\" \"\r\n      /> */}\r\n      <Grid container style={{display:\"flex\", justifyContent:\"space-between\",}}>\r\n\r\n        <Grid  style={{\"&:hover\":{cursor:\"default\"}}} item>\r\n          <p className={classes.interesadosP}>A {props.interesados} personas les interesa esto.</p>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <p className={classes.comentariosP} onClick={handleExpandClick}>{props.numeroDeComentarios} comentarios</p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <div style={{padding:\"0px 10px\"}}>\r\n        <Divider  />\r\n      </div>\r\n\r\n\r\n      <CardActions style={{display:\"flex\", justifyContent:\"space-around\", padding:\"5px\",}}>\r\n        <Button aria-label=\"add to favorites\" style={{height:\"35px\",}}>\r\n          {/*<FavoriteIcon /> <p style={{marginLeft:\"10px\"}}>Me Interesa</p>*/}\r\n          <FormControlLabel\r\n          control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\r\n          label=\"Me interesa\"\r\n          onClick={handleClickHeart}\r\n        />\r\n        </Button>\r\n        <Button onClick={handleExpandClick} aria-label=\"share\" style={{height:\"35px\",}}>\r\n          <ChatBubbleOutlineIcon /> <p style={{marginLeft:\"10px\"}}>Comentar</p>\r\n        </Button>\r\n        {/* <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton> */}\r\n      </CardActions>\r\n      \r\n      {/* <CrearComentario/> */}\r\n\r\n\r\n      <Card variant=\"outlined\" className={classes.rootCrearComentario}>\r\n        <CardContent align=\"center\" className={classes.containerContentCrearComentario}>\r\n          <input\r\n            className={classes.inputText}\r\n            variant=\"outline\"\r\n            type=\"text\"\r\n            name=\"content\"\r\n            aria-label=\"minimum height\"\r\n            placeholder=\"Comentar...\"\r\n            rowsMin={1}\r\n            onChange={handleInputChange}\r\n            value={bodyComent.content}\r\n          />\r\n        </CardContent>\r\n        <Grid container className={classes.IconosContainer}>\r\n          <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <Button \r\n            className={classes.PublicarButton} \r\n            size=\"small\" \r\n            // onClick={handleClick}\r\n            >\r\n              Enviar\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n            <Grid item>\r\n              <IconButton style={{ padding: \"10px 10px 10px 10px\" }}>\r\n                <AddAPhotoIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton style={{ padding: \"10px 10px 10px 10px\" }}>\r\n                <TheatersIcon fontSize=\"medium\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      \r\n      <Collapse className={classes.comentarioSContainer} in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent className={classes.comentarioSContainer}>\r\n          \r\n          {props.children}\r\n          {/* hacer aqui el mapeo de los comentarios */}\r\n\r\n        </CardContent>\r\n      </Collapse>    \r\n\r\n\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\CrearPublicacion.js",["201","202"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 550,\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  media: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n  Content: {\r\n    widht: \"100px\",\r\n    color: \"black\",\r\n  },\r\n  containerContent: {\r\n    padding: \"0px 10px\",\r\n    widht: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  IconosContainer: {\r\n    paddingLeft: \"5px\",\r\n    paddingTop: \"5px\",\r\n    // padding:\"0px\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  PublicarButton: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"12px\",\r\n    border: \"0px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n\r\n  inputText: {\r\n    outline: \"none\",\r\n    resize: \"inherit\",\r\n    fontSize: \"14px\",\r\n    fontFamily: \"arial\",\r\n    border: \"1px solid #C7C6C6\",\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    boxShadow: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n}));\r\n\r\nexport default function RecipeReviewCard() {\r\n  const classes = useStyles();\r\n\r\n  const initialBody = {\r\n    content: '',\r\n    date: '',\r\n    loginid: '',\r\n    name: '',\r\n    interesados: 0,\r\n    comentarios: 0,\r\n    label: '', \r\n  }\r\n\r\n  const [body, setBody] = useState(initialBody);\r\n\r\n  const { usuarioActual } = useAuth();\r\n  const history = useHistory();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n\r\n  // Get current user with database values and set on useState\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n\r\n  // save input values inside the state localy\r\n\r\n  const handleInputChange = text => {\r\n    if(text && profesor){\r\n      const { name, value } = text.target;\r\n      setBody({...body, [name]: value, \r\n              name: profesor.nombre, \r\n              loginid: profesor.loginid, \r\n              date: new Date().toLocaleDateString(), \r\n              imageURL: profesor.imageURL,\r\n              idPerfil: profesor.id,\r\n              comentarios: [],\r\n              numeroDeComentarios:0,\r\n              dateNumber: new Date(),\r\n            });\r\n    }else{\r\n      console.log(\"error\");\r\n    }\r\n  }\r\n\r\n  // set values on the database\r\n  \r\n  const handleClick = async e => {\r\n    e.preventDefault();\r\n    await db.collection('publicaciones').doc().set(body)\r\n    .then(()=>{\r\n      setBody({...initialBody})\r\n    }).then(()=>{\r\n      history.push('/inicio');\r\n      window.location.reload();\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <p style={{ paddingLeft: \"12px\", fontSize: \"18px\", margin: \"10px 0px\" }}>\r\n        Crear Publicación\r\n      </p>\r\n\r\n      <CardContent align=\"center\" className={classes.containerContent}>\r\n        <input\r\n          className={classes.inputText}\r\n          type=\"text\"\r\n          name=\"content\"\r\n          aria-label=\"minimum height\"\r\n          placeholder=\"Escribir publicación...\"\r\n          widht=\"500px\"\r\n          rowsMin={1}\r\n          onChange={handleInputChange}\r\n          value={body.content}\r\n          \r\n        />\r\n      </CardContent>\r\n      <Grid container className={classes.IconosContainer}>\r\n        <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <Button\r\n            className={classes.PublicarButton}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={handleClick}\r\n            disabled={!body.content}\r\n          >\r\n            Publicar\r\n          </Button>\r\n        </Grid>\r\n\r\n        <Grid item style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n          <Grid item>\r\n            <IconButton style={{ padding: \"10px\" }}>\r\n              <AddAPhotoIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton style={{ padding: \"10px\" }}>\r\n              <TheatersIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Calificacion.js",[],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Navbar.js",["203","204","205","206","207","208","209"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport logo from \"../assets/images/logoprincipal.webp\";\r\nimport { makeStyles, Grid, Button, IconButton, Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MenuNavbar from \"./MenuNavbar\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    boxShadow: \"0px 0px 4px 0 rgba(0, 0, 0, 0.2)\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n\r\n  gridPadre: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  gridHijo: {\r\n    height: \"50px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchInput: {\r\n    opacity: \"0.9\",\r\n    padding: \"0px 5px\",\r\n    margin: \"0px 40px\",\r\n    fontSize: \"11px\",\r\n  },\r\n\r\n  logo: {\r\n    width: 64,\r\n    height: 40,\r\n    marginLeft: 15,\r\n  },\r\n  buttonLogo: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(255, 255, 255, 0)\",\r\n    },\r\n  },\r\n\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n    height: \"30px\",\r\n    fontSize: \"11px\",\r\n  },\r\n\r\n  menu: {\r\n    padding: \"0px\",\r\n  },\r\n\r\n  icon: {\r\n    padding: \"10px\",\r\n  },\r\n\r\n  nombrecontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"160px\",\r\n    color: \"black\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n\r\n  rootAvatar: {\r\n    marginRight: \"10px\",\r\n    width: \"33px\",\r\n    height: \"33px\",\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n  nombre: {\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    margin: \"0px\",\r\n    padding: \"0px\",\r\n    \"&:hover\": { cursor: \"pointer\" },\r\n  },\r\n}));\r\n\r\nfunction ElevationScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({\r\n    disableHysteresis: true,\r\n    threshold: 0,\r\n    target: window ? window() : undefined,\r\n  });\r\n\r\n  return React.cloneElement(children, {\r\n    elevation: trigger ? 4 : 0,\r\n  });\r\n}\r\n\r\nElevationScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default function ElevateAppBar(props) {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const { usuarioActual } = useAuth();\r\n\r\n  const [profesor, setProfesor] = useState(null);\r\n\r\n  const traerPerfil = useCallback(() => {\r\n    if (usuarioActual) {\r\n      const idd = usuarioActual.uid;\r\n      const usuariosRef = db.collection(\"usuarios\");\r\n      usuariosRef\r\n        .where(\"loginid\", \"==\", idd)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            docs.push({ ...doc.data(), id: doc.id });\r\n          });\r\n          if (docs.length > 0) {\r\n            setProfesor(docs[0]);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    }\r\n  }, [setProfesor]);\r\n\r\n  useEffect(() => {\r\n    traerPerfil();\r\n  }, []);\r\n\r\n  async function goProfile() {\r\n    setError(\"\");\r\n    try {\r\n      history.push(`/perfil/${profesor.id}`);\r\n      window.location.reload();\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n  async function goInicio() {\r\n    setError(\"\");\r\n    try {\r\n      history.push(`/inicio`);\r\n    } catch {\r\n      setError(\"Ocurrió un error al salir de la cuenta\");\r\n    }\r\n  }\r\n\r\n  return usuarioActual ? (\r\n    <React.Fragment>\r\n      <ElevationScroll {...props}>\r\n        <AppBar className={classes.root}>\r\n          {/* <Toolbar> */}\r\n          <Grid className={classes.gridPadre} container alignItems=\"center\">\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button component={Link} to={\"/\"} className={classes.buttonLogo}>\r\n                <img src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Grid>\r\n\r\n            {/* <Grid className={classes.gridHijo} item xs></Grid> */}\r\n\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button\r\n                variante=\"link\"\r\n                onClick={goInicio}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Inicio\r\n              </Button>\r\n\r\n              <IconButton\r\n                className={classes.icon}\r\n                onClick={() => {\r\n                  history.push(\"/chat\");\r\n                }}\r\n              >\r\n                <Badge disabled badgeContent={4}>\r\n                  <MessageIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton disabled className={classes.icon}>\r\n                <Badge badgeContent={4}>\r\n                  <NotificationsIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </IconButton>\r\n              <IconButton className={classes.settings}>\r\n                {/*<Link to=\"/perfil\">*/}\r\n\r\n                <SettingsIcon fontSize=\"small\" />\r\n\r\n                {/*<Link />*/}\r\n              </IconButton>\r\n\r\n              {profesor && (\r\n                <Grid className={classes.nombrecontainer} xs>\r\n                  <Avatar\r\n                    variante=\"link\"\r\n                    onClick={goProfile}\r\n                    className={classes.rootAvatar}\r\n                    alt={profesor.nombre}\r\n                    src={profesor.imageURL}\r\n                  />\r\n                  <div\r\n                    className={classes.nombre}\r\n                    variante=\"link\"\r\n                    onClick={goProfile}\r\n                  >\r\n                    {profesor.nombre}\r\n                  </div>\r\n                </Grid>\r\n              )}\r\n              <MenuNavbar\r\n                perfil={profesor?.id}\r\n                esProfesor={profesor?.esProfesor}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {/* </Toolbar> */}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  ) : (\r\n    <React.Fragment>\r\n      <ElevationScroll {...props}>\r\n        <AppBar className={classes.root}>\r\n          {/* <Toolbar> */}\r\n          <Grid className={classes.gridPadre} container alignItems=\"center\">\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button component={Link} to={\"/\"} className={classes.buttonLogo}>\r\n                <img src={logo} className={classes.logo} />\r\n              </Button>\r\n            </Grid>\r\n\r\n            <Grid className={classes.gridHijo} item xs></Grid>\r\n\r\n            <Grid className={classes.gridHijo} item>\r\n              <Button\r\n                component={Link}\r\n                to={\"/login\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Ingresar\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to={\"/signup\"}\r\n                className={classes.botones}\r\n                variant=\"outlined\"\r\n              >\r\n                Regístrate\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          {/* </Toolbar> */}\r\n        </AppBar>\r\n      </ElevationScroll>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\chat\\Chat.js",["210","211","212","213"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport NewMessage from \"./NewMessage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container>\r\n      <Paper square className={classes.paper}>\r\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\r\n          Inbox\r\n        </Typography>\r\n        <List className={classes.list}>\r\n          {/* {messages.map(({ date, user, message }) => (\r\n            <ListItem button key={date}>\r\n              <ListItemAvatar>\r\n                <Avatar alt={user.name} src={user.avatar} />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={user ? user.name : \"anonymous\"}\r\n                secondary={message}\r\n              />\r\n            </ListItem>\r\n          ))} */}\r\n        </List>\r\n      </Paper>\r\n      <NewMessage />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\MenuNavbar.js",["214","215"],"C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\FeedbackForm.js",["216","217","218"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width:\"450px\",\r\n      margin: \"10px 0px\",\r\n      paddingBottom:\"5px\",\r\n    },\r\n    containerContent: {\r\n      padding: \"0px 10px\",\r\n      widht: \"100%\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    IconosContainer: {\r\n      paddingLeft: \"5px\",\r\n      paddingTop: \"5px\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    PublicarButton: {\r\n      margin: \"5px 5px 0px 5px\",\r\n      color: \"#3493C2\",\r\n      fontWeight: \"bold\",\r\n      height: \"30px\",\r\n      fontSize: \"12px\",\r\n      border: \"0px\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"white\",\r\n      },\r\n    },\r\n    inputText: {\r\n      outline: \"none\",\r\n      resize: \"inherit\",\r\n      fontSize: \"14px\",\r\n      fontFamily: \"arial\",\r\n      border: \"1px solid #C7C6C6\",\r\n      borderRadius: \"10px\",\r\n      width: \"100%\",\r\n      padding: \"10px\",\r\n      boxShadow: \"rgba(0, 0, 0, 1)\",\r\n    },\r\n  }));\r\n\r\n\r\nfunction FeedbackForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const initialBody = {\r\n      content: \"\",\r\n      date: \"\",\r\n      loginid: \"\",\r\n      name: \"\",\r\n      imageURL: \"\",\r\n      idPerfil: \"\",\r\n    };\r\n  \r\n    const [body, setBody] = useState(initialBody);\r\n    const [profesor, setProfesor] = useState(null);\r\n  \r\n    const { usuarioActual } = useAuth();\r\n    const history = useHistory();\r\n  \r\n    const traerPerfil = useCallback(() => {\r\n      if (usuarioActual) {\r\n        const idd = usuarioActual.uid;\r\n        const usuariosRef = db.collection(\"usuarios\");\r\n        usuariosRef\r\n          .where(\"loginid\", \"==\", idd)\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => {\r\n              docs.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            if (docs.length > 0) {\r\n              setProfesor(docs[0]);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(error);\r\n          });\r\n      }\r\n    }, [setProfesor]);\r\n  \r\n    const handleInputChange = (text) => {\r\n      if (text && profesor) {\r\n        const { name, value } = text.target;\r\n        \r\n        setBody({\r\n          ...body,\r\n          [name]: value,\r\n          name: profesor.nombre,\r\n          loginid: profesor.loginid,\r\n          date: new Date().toLocaleDateString(),\r\n          imageURL: profesor.imageURL,\r\n          idPerfil: profesor.id,\r\n        });\r\n      } else {\r\n        console.log(\"error\");\r\n      }\r\n    };\r\n  \r\n    const handleClick = async e => {\r\n      e.preventDefault();\r\n      await props.addFeedback(body);\r\n      setBody({...initialBody});\r\n      history.push('/califica-a-izily');\r\n      window.location.reload();\r\n    }\r\n    \r\n    \r\n  \r\n    useEffect(() => {\r\n      traerPerfil();\r\n    }, []);\r\n\r\n    function validarInput() {\r\n      document.getElementById(\"btn_Validar\").disabled = !document.getElementById(\"content\").value.length;\r\n    }\r\n  \r\n    return (\r\n        <Card className={classes.root}>\r\n          <p style={{ display:\"flex\", justifyContent:\"left\", paddingLeft: \"12px\", fontSize: \"16px\", margin: \"10px 0px\" }}>\r\n            Envíanos tu opinión para seguir mejorando\r\n          </p>\r\n\r\n          <CardContent align=\"center\" className={classes.containerContent}>\r\n              <input\r\n                className={classes.inputText}\r\n                variant=\"outline\"\r\n                type=\"text\"\r\n                name=\"content\"\r\n                id=\"content\"\r\n                aria-label=\"minimum height\"\r\n                placeholder=\"¿Qué opinas de Izily?\"\r\n                rowsMin={1}\r\n                onChange={handleInputChange}\r\n                value={body.content}\r\n                // onInput={validarInput}\r\n              />\r\n            </CardContent>\r\n          \r\n          <Grid container className={classes.IconosContainer}>\r\n            <Grid item style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Button\r\n                className={classes.PublicarButton}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={handleClick}\r\n                id=\"btn_Validar\"\r\n                disabled={!body.content}\r\n              >\r\n                Publicar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default FeedbackForm\r\n\r\n//Este es un comentario\r\n//Este es un comentario de prueba","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\chat\\NewMessage.js",["219","220"],"import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { db } from \"../../firebase\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    paddingTop: 15,\r\n    paddingBottom: 20,\r\n  },\r\n  message: {\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: 8,\r\n    padding: \"0 20px\",\r\n  },\r\n  box: {\r\n    height: \"100%\",\r\n    paddingLeft: 20,\r\n  },\r\n}));\r\n\r\nconst NewMessage = () => {\r\n  const classes = useStyles();\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [profesor, setProfesor] = useState(null);\r\n\r\n  const { usuarioActual } = useAuth();\r\n\r\n  //cuando se envia el mensaje\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMessage = {\r\n      /* user: currentUser.uid, */\r\n      body: message,\r\n      id: usuarioActual.uid,\r\n    };\r\n\r\n    db.collection(\"chat\").add(newMessage);\r\n\r\n    //traemos el perfil del usuario\r\n    /* const traerPerfil = useCallback(() => {\r\n        if (usuarioActual) {\r\n          const idd = usuarioActual.uid;\r\n          const usuariosRef = db.collection(\"usuarios\");\r\n          usuariosRef\r\n            .where(\"loginid\", \"==\", idd)\r\n            .get()\r\n            .then((querySnapshot) => {\r\n              const docs = [];\r\n              querySnapshot.forEach((doc) => {\r\n                docs.push({ ...doc.data(), id: doc.id });\r\n              });\r\n              if (docs.length > 0) {\r\n                setProfesor(docs[0]);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n            });\r\n        }\r\n      }, [setProfesor]); */\r\n\r\n    //escribir el mensaje en la base de datos\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.paper}>\r\n      <form>\r\n        <Grid container spacing={0} direction=\"row\" className={classes.message}>\r\n          <Grid item xs={10}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              name=\"message\"\r\n              required\r\n              fullWidth\r\n              id=\"message\"\r\n              label=\"Mensaje\"\r\n              autoFocus\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Box display=\"flex\" alignItems=\"center\" className={classes.box}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                endIcon={<SendIcon />}\r\n                fullWidth\r\n                onClick={handleSubmit}\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","C:\\Users\\user\\Documents\\VsCode\\Izily-React\\src\\components\\Profesor.js",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":12},{"ruleId":"225","severity":1,"message":"229","line":17,"column":8,"nodeType":"227","messageId":"228","endLine":17,"endColumn":17},{"ruleId":"225","severity":1,"message":"230","line":19,"column":8,"nodeType":"227","messageId":"228","endLine":19,"endColumn":22},{"ruleId":"225","severity":1,"message":"231","line":15,"column":18,"nodeType":"227","messageId":"228","endLine":15,"endColumn":30},{"ruleId":"232","severity":1,"message":"233","line":60,"column":31,"nodeType":"234","messageId":"235","endLine":60,"endColumn":33},{"ruleId":"225","severity":1,"message":"236","line":4,"column":8,"nodeType":"227","messageId":"228","endLine":4,"endColumn":23},{"ruleId":"225","severity":1,"message":"237","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":15},{"ruleId":"225","severity":1,"message":"238","line":102,"column":10,"nodeType":"227","messageId":"228","endLine":102,"endColumn":18},{"ruleId":"239","severity":1,"message":"240","line":124,"column":6,"nodeType":"241","endLine":124,"endColumn":19,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"243","line":128,"column":6,"nodeType":"241","endLine":128,"endColumn":8,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"238","line":151,"column":10,"nodeType":"227","messageId":"228","endLine":151,"endColumn":18},{"ruleId":"239","severity":1,"message":"245","line":198,"column":6,"nodeType":"241","endLine":198,"endColumn":8,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"247","line":252,"column":9,"nodeType":"227","messageId":"228","endLine":252,"endColumn":14},{"ruleId":"225","severity":1,"message":"248","line":255,"column":10,"nodeType":"227","messageId":"228","endLine":255,"endColumn":15},{"ruleId":"225","severity":1,"message":"249","line":257,"column":10,"nodeType":"227","messageId":"228","endLine":257,"endColumn":15},{"ruleId":"225","severity":1,"message":"250","line":264,"column":10,"nodeType":"227","messageId":"228","endLine":264,"endColumn":16},{"ruleId":"239","severity":1,"message":"245","line":286,"column":6,"nodeType":"241","endLine":286,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":310,"column":24,"nodeType":"254","messageId":"255","endLine":310,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":494,"column":64,"nodeType":"234","messageId":"235","endLine":494,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":514,"column":64,"nodeType":"234","messageId":"235","endLine":514,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":534,"column":64,"nodeType":"234","messageId":"235","endLine":534,"endColumn":66},{"ruleId":"256","severity":1,"message":"257","line":593,"column":29,"nodeType":"258","endLine":600,"endColumn":31},{"ruleId":"239","severity":1,"message":"240","line":143,"column":6,"nodeType":"241","endLine":143,"endColumn":19,"suggestions":"259"},{"ruleId":"239","severity":1,"message":"243","line":217,"column":6,"nodeType":"241","endLine":217,"endColumn":8,"suggestions":"260"},{"ruleId":"232","severity":1,"message":"233","line":280,"column":29,"nodeType":"234","messageId":"235","endLine":280,"endColumn":31},{"ruleId":"232","severity":1,"message":"233","line":283,"column":22,"nodeType":"234","messageId":"235","endLine":283,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":94,"column":6,"nodeType":"241","endLine":94,"endColumn":19,"suggestions":"261"},{"ruleId":"239","severity":1,"message":"243","line":123,"column":6,"nodeType":"241","endLine":123,"endColumn":8,"suggestions":"262"},{"ruleId":"232","severity":1,"message":"233","line":228,"column":32,"nodeType":"234","messageId":"235","endLine":228,"endColumn":34},{"ruleId":"225","severity":1,"message":"263","line":13,"column":10,"nodeType":"227","messageId":"228","endLine":13,"endColumn":17},{"ruleId":"264","severity":1,"message":"265","line":66,"column":5,"nodeType":"266","messageId":"235","endLine":66,"endColumn":12},{"ruleId":"225","severity":1,"message":"267","line":125,"column":9,"nodeType":"227","messageId":"228","endLine":125,"endColumn":16},{"ruleId":"239","severity":1,"message":"268","line":210,"column":6,"nodeType":"241","endLine":210,"endColumn":17,"suggestions":"269"},{"ruleId":"232","severity":1,"message":"233","line":251,"column":62,"nodeType":"234","messageId":"235","endLine":251,"endColumn":64},{"ruleId":"232","severity":1,"message":"233","line":280,"column":62,"nodeType":"234","messageId":"235","endLine":280,"endColumn":64},{"ruleId":"232","severity":1,"message":"233","line":307,"column":62,"nodeType":"234","messageId":"235","endLine":307,"endColumn":64},{"ruleId":"270","severity":1,"message":"271","line":72,"column":18,"nodeType":"272","messageId":"273","endLine":72,"endColumn":45},{"ruleId":"264","severity":1,"message":"274","line":112,"column":3,"nodeType":"266","messageId":"235","endLine":112,"endColumn":9},{"ruleId":"264","severity":1,"message":"275","line":119,"column":3,"nodeType":"266","messageId":"235","endLine":119,"endColumn":13},{"ruleId":"264","severity":1,"message":"276","line":125,"column":3,"nodeType":"266","messageId":"235","endLine":125,"endColumn":10},{"ruleId":"225","severity":1,"message":"267","line":184,"column":9,"nodeType":"227","messageId":"228","endLine":184,"endColumn":16},{"ruleId":"225","severity":1,"message":"277","line":187,"column":10,"nodeType":"227","messageId":"228","endLine":187,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":209,"column":6,"nodeType":"241","endLine":209,"endColumn":19,"suggestions":"278"},{"ruleId":"239","severity":1,"message":"243","line":265,"column":6,"nodeType":"241","endLine":265,"endColumn":8,"suggestions":"279"},{"ruleId":"239","severity":1,"message":"240","line":120,"column":6,"nodeType":"241","endLine":120,"endColumn":19,"suggestions":"280"},{"ruleId":"239","severity":1,"message":"243","line":161,"column":6,"nodeType":"241","endLine":161,"endColumn":8,"suggestions":"281"},{"ruleId":"225","severity":1,"message":"282","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":20},{"ruleId":"225","severity":1,"message":"283","line":11,"column":8,"nodeType":"227","messageId":"228","endLine":11,"endColumn":18},{"ruleId":"225","severity":1,"message":"248","line":121,"column":10,"nodeType":"227","messageId":"228","endLine":121,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":148,"column":6,"nodeType":"241","endLine":148,"endColumn":19,"suggestions":"284"},{"ruleId":"239","severity":1,"message":"243","line":152,"column":6,"nodeType":"241","endLine":152,"endColumn":8,"suggestions":"285"},{"ruleId":"256","severity":1,"message":"257","line":180,"column":17,"nodeType":"258","endLine":180,"endColumn":60},{"ruleId":"256","severity":1,"message":"257","line":255,"column":17,"nodeType":"258","endLine":255,"endColumn":60},{"ruleId":"225","severity":1,"message":"286","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":16},{"ruleId":"225","severity":1,"message":"287","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":22},{"ruleId":"225","severity":1,"message":"288","line":11,"column":8,"nodeType":"227","messageId":"228","endLine":11,"endColumn":20},{"ruleId":"225","severity":1,"message":"289","line":12,"column":8,"nodeType":"227","messageId":"228","endLine":12,"endColumn":14},{"ruleId":"225","severity":1,"message":"248","line":70,"column":10,"nodeType":"227","messageId":"228","endLine":70,"endColumn":15},{"ruleId":"225","severity":1,"message":"290","line":71,"column":11,"nodeType":"227","messageId":"228","endLine":71,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":91,"column":8,"nodeType":"241","endLine":91,"endColumn":21,"suggestions":"291"},{"ruleId":"239","severity":1,"message":"243","line":123,"column":8,"nodeType":"241","endLine":123,"endColumn":10,"suggestions":"292"},{"ruleId":"225","severity":1,"message":"293","line":125,"column":14,"nodeType":"227","messageId":"228","endLine":125,"endColumn":26},{"ruleId":"225","severity":1,"message":"238","line":35,"column":10,"nodeType":"227","messageId":"228","endLine":35,"endColumn":18},{"ruleId":"225","severity":1,"message":"294","line":35,"column":20,"nodeType":"227","messageId":"228","endLine":35,"endColumn":31},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'MisCursos' is defined but never used.","'BuscarUsuarios' is defined but never used.","'handleLogOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'backgroundgrid1' is defined but never used.","'Divider' is defined but never used.","'profesor' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'usuarioActual'. Either include it or remove the dependency array.","ArrayExpression",["297"],"React Hook useEffect has a missing dependency: 'traerPerfil'. Either include it or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'traerProfesor'. Either include it or remove the dependency array.",["299"],"'theme' is assigned a value but never used.","'error' is assigned a value but never used.","'carga' is assigned a value but never used.","'events' is assigned a value but never used.",["300"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["301"],["302"],["303"],["304"],"'useAuth' is defined but never used.","no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filtrarProfesores'. Either include it or remove the dependency array.",["305"],"no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Duplicate key 'expand'.","Duplicate key 'expandOpen'.","Duplicate key 'Content'.","'screams' is assigned a value but never used.",["306"],["307"],["308"],["309"],"'withStyles' is defined but never used.","'PersonIcon' is defined but never used.",["310"],["311"],"'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Avatar' is defined but never used.","'usuarioActual' is assigned a value but never used.",["312"],["313"],"'validarInput' is defined but never used.","'setProfesor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},{"desc":"314","fix":"321"},{"desc":"316","fix":"322"},{"desc":"314","fix":"323"},{"desc":"316","fix":"324"},{"desc":"325","fix":"326"},{"desc":"314","fix":"327"},{"desc":"316","fix":"328"},{"desc":"314","fix":"329"},{"desc":"316","fix":"330"},{"desc":"314","fix":"331"},{"desc":"316","fix":"332"},{"desc":"314","fix":"333"},{"desc":"316","fix":"334"},"Update the dependencies array to be: [usuarioActual]",{"range":"335","text":"336"},"Update the dependencies array to be: [traerPerfil]",{"range":"337","text":"338"},"Update the dependencies array to be: [traerProfesor]",{"range":"339","text":"340"},{"range":"341","text":"340"},{"range":"342","text":"336"},{"range":"343","text":"338"},{"range":"344","text":"336"},{"range":"345","text":"338"},"Update the dependencies array to be: [etiquetas, filtrarProfesores]",{"range":"346","text":"347"},{"range":"348","text":"336"},{"range":"349","text":"338"},{"range":"350","text":"336"},{"range":"351","text":"338"},{"range":"352","text":"336"},{"range":"353","text":"338"},{"range":"354","text":"336"},{"range":"355","text":"338"},[3685,3698],"[usuarioActual]",[3750,3752],"[traerPerfil]",[4580,4582],"[traerProfesor]",[6682,6684],[3813,3826],[5861,5863],[2576,2589],[3177,3179],[6005,6016],"[etiquetas, filtrarProfesores]",[5087,5100],[6562,6564],[3011,3024],[4045,4047],[3650,3663],[3715,3717],[2450,2463],[3230,3232]]