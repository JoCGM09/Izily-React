[{"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\index.js":"1","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\firebase.js":"2","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\routes\\App.js":"3","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\reportWebVitals.js":"4","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Perfil.js":"5","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Home.js":"6","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Layout.jsx":"7","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\NotFound.jsx":"8","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Profesores.js":"9","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Navbar.js":"10","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Menu.js":"11","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Profesor.js":"12"},{"size":525,"mtime":1613014394850,"results":"13","hashOfConfig":"14"},{"size":476,"mtime":1613014394846,"results":"15","hashOfConfig":"14"},{"size":572,"mtime":1613103026770,"results":"16","hashOfConfig":"14"},{"size":375,"mtime":1613014394862,"results":"17","hashOfConfig":"14"},{"size":320,"mtime":1613106721767,"results":"18","hashOfConfig":"14"},{"size":257,"mtime":1613014394823,"results":"19","hashOfConfig":"14"},{"size":215,"mtime":1613014394840,"results":"20","hashOfConfig":"14"},{"size":883,"mtime":1613014394841,"results":"21","hashOfConfig":"14"},{"size":5825,"mtime":1613014394844,"results":"22","hashOfConfig":"14"},{"size":3121,"mtime":1613014394835,"results":"23","hashOfConfig":"14"},{"size":2519,"mtime":1613014394824,"results":"24","hashOfConfig":"14"},{"size":3411,"mtime":1613106676424,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"tamvwd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\index.js",[],["54","55"],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\firebase.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\routes\\App.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\reportWebVitals.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Perfil.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Home.js",["56","57"],"import \"./Home.css\";\r\n\r\nimport Profesores from \"../containers/Profesores\";\r\nimport Perfil from \"../containers/Perfil\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Profesores />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Layout.jsx",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\NotFound.jsx",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\containers\\Profesores.js",["58"],"import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Profesor from \"../components/Profesor\";\r\nimport { db } from \"../firebase\";\r\n\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst drawerWidth = 300;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  content: {\r\n    paddingTop: 110,\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"95%\",\r\n    flexDirection: \"row\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n  },\r\n  main: {\r\n    background: \"white\",\r\n    overflow: \"auto\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    flexGrow: 1,\r\n    padding: \"15px, 0, 10px, 15px\",\r\n  },\r\n  gridContainer: {\r\n    whidth: \"100%\",\r\n    paddingTop: 15,\r\n  },\r\n}));\r\n\r\nexport default function Profesores(callback, deps) {\r\n  const classes = useStyles();\r\n\r\n  const [profesores, guardarProfesores] = useState([]);\r\n  const [especialidades, guardarEspecialidades] = useState([]);\r\n  const [etiquetas, guardarEtiquetas] = useState([0]);\r\n  const [profesoresFiltrados, guardarProfesoresFiltrados] = useState([]);\r\n\r\n  const traerProfesores = () => {\r\n    const usuariosRef = db.collection(\"usuarios\");\r\n    usuariosRef\r\n      .where(\"esProfesor\", \"==\", true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          docs.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        guardarProfesores(docs);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const seleccionarEtiquetas = (EspecialidadId) => () => {\r\n    const currentIndex = etiquetas.indexOf(EspecialidadId);\r\n    const etiquetasSeleccionadas = [...etiquetas];\r\n    if (currentIndex === -1) {\r\n      etiquetasSeleccionadas.push(EspecialidadId);\r\n    } else {\r\n      etiquetasSeleccionadas.splice(currentIndex, 1);\r\n    }\r\n    guardarEtiquetas(etiquetasSeleccionadas);\r\n  };\r\n\r\n  const filtrarProfesores = (terminoDeBusqueda) => {\r\n    let etiquetasSeleccionadas = [...etiquetas];\r\n    etiquetasSeleccionadas = etiquetasSeleccionadas.splice(1, etiquetas.length);\r\n    const nuevosProfesoresFiltrados = profesores.filter((profesor) => {\r\n      // Verificar Nombre\r\n      const nombreProfesor = profesor.nombre.toLowerCase();\r\n      const tieneNombreValido = nombreProfesor.includes(terminoDeBusqueda);\r\n\r\n      // Verificar Materia\r\n      const idsDeCursos = profesor.cursos.map((curso) => curso.id);\r\n      let tieneCursoValido = false;\r\n      idsDeCursos.forEach((idCurso) => {\r\n        tieneCursoValido =\r\n          tieneCursoValido || etiquetasSeleccionadas.includes(idCurso);\r\n      });\r\n\r\n      if (etiquetasSeleccionadas.length > 0)\r\n        return tieneNombreValido && tieneCursoValido;\r\n      return tieneNombreValido;\r\n    });\r\n    guardarProfesoresFiltrados(nuevosProfesoresFiltrados);\r\n  };\r\n  const filtrarProfesoresInput = (e) => {\r\n    const terminoDeBusqueda = e.currentTarget.value.toLowerCase();\r\n    filtrarProfesores(terminoDeBusqueda);\r\n  };\r\n\r\n  useEffect(() => {\r\n    traerProfesores();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const especialidadesRef = db.collection(\"especialidades\");\r\n    const todasLasEspecialidades = [];\r\n    especialidadesRef.get().then((querySnapshot) => {\r\n      querySnapshot.forEach((doc) => {\r\n        todasLasEspecialidades.push({ ...doc.data(), id: doc.id });\r\n      });\r\n    });\r\n    guardarEspecialidades(todasLasEspecialidades);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    guardarProfesoresFiltrados(profesores);\r\n  }, [profesores]);\r\n\r\n  useEffect(() => {\r\n    filtrarProfesores(\"\");\r\n  }, [etiquetas]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.content}>\r\n        <div className={classes.drawer}>\r\n          <List>\r\n            <ListItem>\r\n              <FormControl\r\n                className={clsx(classes.margin, classes.textField)}\r\n                variant=\"outlined\"\r\n              >\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Buscar\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type=\"text\"\r\n                  onChange={filtrarProfesoresInput}\r\n                  labelWidth={50}\r\n                />\r\n              </FormControl>\r\n            </ListItem>\r\n            {especialidades.map((especialidad, index) => (\r\n              <ListItem\r\n                button\r\n                key={especialidad.id}\r\n                onClick={seleccionarEtiquetas(especialidad.id)}\r\n              >\r\n                <Checkbox\r\n                  edge=\"start\"\r\n                  checked={etiquetas.indexOf(especialidad.id) !== -1}\r\n                  style={{ color: \"#3f51b5\" }}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                />\r\n                <ListItemText primary={especialidad.nombre} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n        <main className={classes.main}>\r\n          <Grid container clasName={classes.gridContainer} spacing={3}>\r\n            {profesoresFiltrados.map((profesor) => (\r\n              <Grid item xs={12} md={4}>\r\n                <Profesor profesor={profesor} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Navbar.js",["59"],"import React from \"react\";\r\nimport logo from \"../assets/images/logoprincipal.webp\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {\r\n  makeStyles,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  Badge,\r\n  TextField,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Menu from \"../components/Menu\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//estilos de la barra de navegacion\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#fff\",\r\n  },\r\n\r\n  searchImput: {\r\n    opacity: \"0.9\",\r\n    padding: \"0px 5px\",\r\n    margin: \"0px 40px\",\r\n    fontSize: \"0.8rem\",\r\n  },\r\n\r\n  logo: {\r\n    width: 80,\r\n    height: 50,\r\n  },\r\n\r\n  botones: {\r\n    margin: \"0px 5px\",\r\n    color: \"#3493C2\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\n//componente\r\nfunction Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"absolute\" className={classes.root}>\r\n      <Toolbar>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item>\r\n            <Button disabled>\r\n              <img src={logo} className={classes.logo} />\r\n            </Button>\r\n          </Grid>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            className={classes.searchImput}\r\n            item\r\n            id=\"buscador\"\r\n            placeholder=\"Buscar\"\r\n            size=\"small\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon fontSize=\"small\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          {/* <InputBase>\r\n              placeholder=\"Buscar\" className={classes.searchInput}\r\n              startAdornment={<SearchIcon fontSize=\"small\" />}\r\n            </InputBase> */}\r\n\r\n          <Grid item sm></Grid>\r\n          <Grid item>\r\n            <Button className={classes.botones} variant=\"outlined\">\r\n              Inicio\r\n            </Button>\r\n            <Button className={classes.botones} variant=\"outlined\">\r\n              Encontrar un maestro\r\n            </Button>\r\n            <Button className={classes.botones} disabled>\r\n              NOMBRE\r\n            </Button>\r\n\r\n            <IconButton>\r\n              <Badge badgeContent={4}>\r\n                <MessageIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Badge badgeContent={4}>\r\n                <NotificationsIcon fontSize=\"small\" />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton>\r\n              <Link to=\"/perfil\">\r\n                <Badge badgeContent={4}>\r\n                  <PersonIcon fontSize=\"small\" />\r\n                </Badge>\r\n              </Link>\r\n            </IconButton>\r\n          </Grid>\r\n          <Menu item />\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Menu.js",[],"D:\\Users\\JGU\\Desktop\\PROYECTOS\\izily_test\\src\\components\\Profesor.js",["60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":133,"column":6,"nodeType":"75","endLine":133,"endColumn":17,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":57,"column":15,"nodeType":"79","endLine":57,"endColumn":58},{"ruleId":"68","severity":1,"message":"80","line":12,"column":8,"nodeType":"70","messageId":"71","endLine":12,"endColumn":20},{"ruleId":"68","severity":1,"message":"81","line":14,"column":8,"nodeType":"70","messageId":"71","endLine":14,"endColumn":24},{"ruleId":"68","severity":1,"message":"82","line":15,"column":8,"nodeType":"70","messageId":"71","endLine":15,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":81,"column":13,"nodeType":"79","endLine":81,"endColumn":67},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Perfil' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filtrarProfesores'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FavoriteIcon' is defined but never used.","'EmojiObjectsIcon' is defined but never used.","'Brightness1Icon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [etiquetas, filtrarProfesores]",{"range":"88","text":"89"},[4074,4085],"[etiquetas, filtrarProfesores]"]